fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01', count > 25 & Result %in% c("win", "loss")) %>%
group_by(ROI<0, winPerSimFight > line_to_per(odds) > 0.25) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count > 25 & Result %in% c("win", "loss")) %>%
group_by(ROI<0, winPerSimFight > line_to_per(odds) > 0.25) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count > 25 & Result %in% c("win", "loss")) %>%
group_by(ROI<0, winPerSimFight - line_to_per(odds)  > 0.25) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count > 25 & Result %in% c("win", "loss")) %>%
group_by(ROI<0 & winPerSimFight - line_to_per(odds)  > 0.25) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count > 25 & Result %in% c("win", "loss")) %>%
group_by(ROI<0 & winPerSimFight - line_to_per(odds)  > 0.25, ROI >0 & winPerSimFight - line_to_per(odds)  > 0.08) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count > 25 & Result %in% c("win", "loss")) %>%
group_by(ROI<0 & winPerSimFight - line_to_per(odds)  > 0.25 | ROI >0 & winPerSimFight - line_to_per(odds)  > 0.08) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count > 25 & Result %in% c("win", "loss")) %>%
group_by(first = ROI<0 & winPerSimFight - line_to_per(odds)  > 0.25 , second = ROI >0 & winPerSimFight - line_to_per(odds)  > 0.08) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2018-01-01' & count > 25 & Result %in% c("win", "loss")) %>%
group_by(first = ROI<0 & winPerSimFight - line_to_per(odds)  > 0.25 , second = ROI >0 & winPerSimFight - line_to_per(odds)  > 0.08) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2017-01-01' & count > 25 & Result %in% c("win", "loss")) %>%
group_by(first = ROI<0 & winPerSimFight - line_to_per(odds)  > 0.25 , second = ROI >0 & winPerSimFight - line_to_per(odds)  > 0.08) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count > 25 & Result %in% c("win", "loss")) %>%
group_by(first = ROI<0 & winPerSimFight - line_to_per(odds)  > 0.25 | second = ROI >0 & winPerSimFight - line_to_per(odds)  > 0.08, year(Date)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count > 25 & Result %in% c("win", "loss")) %>%
group_by(first = ROI<0 & winPerSimFight - line_to_per(odds)  > 0.25 | second = ROI >0 & winPerSimFight - line_to_per(odds)  > 0.08) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count > 25 & Result %in% c("win", "loss")) %>%
group_by(first = ROI<0 & winPerSimFight - line_to_per(odds)  > 0.25 , second = ROI >0 & winPerSimFight - line_to_per(odds)  > 0.08) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count > 25 & Result %in% c("win", "loss")) %>%
group_by(first = ROI<0 & winPerSimFight - line_to_per(odds)  > 0.25 , second = ROI >0 & winPerSimFight - line_to_per(odds)  > 0.08) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count > 25 & Result %in% c("win", "loss")) %>%
group_by(first = ROI<0 & winPerSimFight - line_to_per(odds)  > 0.25 | ROI >0 & winPerSimFight - line_to_per(odds)  > 0.08) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count > 25 & Result %in% c("win", "loss")) %>%
group_by(year(Date), first = ROI<0 & winPerSimFight - line_to_per(odds)  > 0.25 | ROI >0 & winPerSimFight - line_to_per(odds)  > 0.08) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
runApp('Shiny App/MatchPredictor')
source('~/GitHub/MMAscraper/Shiny App/MatchPredictor/scriptsForApp.R', echo=TRUE)
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
per_to_lin(0.6168)
per_to_line(0.6168)
per_to_line(0.6168-0.08)
filtfightsOdds <- readRDS(file = "./scripts/8-append-odds/data/filtfightsOdds.rds")
filtfightsOdds2 <- filtfightsOdds %>%
filter(Result2 != "draw" & r1b > r2b|
(r1b == r2b & ratIncrease1_3 > ratIncrease2_3)) %>%
mutate(eloWinProb = 1/(1+10^((r2b-r1b)/400)),
diffAge = Age1 - Age2,
ResultBin = ifelse(Result == "win", 1, 0))
odds_to_return(200)
odds_to_return(200, 10)
odds_to_return(200, 100)
odds_to_return(200, 1)
odds_to_return(100, 1)
odds_to_return(-150, 1)
odds_to_return(-150, 1)+1
filtfightsOdds2 <- filtfightsOdds %>%
filter(Result2 != "draw" & r1b > r2b|
(r1b == r2b & ratIncrease1_3 > ratIncrease2_3)) %>%
mutate(eloWinProb = 1/(1+10^((r2b-r1b)/400)),
decOdds = odds_to_return(odds, 1)+1,
diffAge = Age1 - Age2,
ResultBin = ifelse(Result2 == "win", 1, 0))
set.seed(1)
train <- filtfightsOdds2 %>%
sample_n(0.8*nrow(filtfightsOdds2)) %>%
select(-Method, -Method_d, -Event, -Date, -r1a, -r2a, -Fighter1, -Fighter2, -R,
-Time, -Referee, -nc1, -nc2)
train
model <- glm(ResultBin ~ eloWinProb + decOdds + diffAge +
oppRat1_5 + oppRat2_5 + koLosses1 + koLosses2,
family = binomial(link="logit"), data = train)
train <- filtfightsOdds2 %>%
sample_n(0.8*nrow(filtfightsOdds2)) %>%
select(-Method, -Method_d, -Event, -Date, -r1a, -r2a, -Fighter1, -Fighter2, -R,
-Time, -Referee, -nc1, -nc2)
test <- anti_join(filtfightsOdds2, train)
model <- glm(ResultBin ~ eloWinProb + decOdds + diffAge +
oppRat1_5 + oppRat2_5 + koLosses1 + koLosses2,
family = binomial(link="logit"), data = train)
summary(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$ResultBin, na.rm = TRUE)
print(paste('Accuracy',1-misClasificError))
table("predicted" = fitted.results, "actual" = test$Result2)
filtfightsOdds2 <- filtfightsOdds %>%
filter(Result2 %in% c("win", "loss") & r1b > r2b|
(r1b == r2b & ratIncrease1_3 > ratIncrease2_3)) %>%
mutate(eloWinProb = 1/(1+10^((r2b-r1b)/400)),
decOdds = odds_to_return(odds, 1)+1,
diffAge = Age1 - Age2,
ResultBin = ifelse(Result2 == "win", 1, 0))
set.seed(1)
train <- filtfightsOdds2 %>%
sample_n(0.8*nrow(filtfightsOdds2)) %>%
select(-Method, -Method_d, -Event, -Date, -r1a, -r2a, -Fighter1, -Fighter2, -R,
-Time, -Referee, -nc1, -nc2)
test <- anti_join(filtfightsOdds2, train)
model <- glm(ResultBin ~ eloWinProb + decOdds + diffAge +
oppRat1_5 + oppRat2_5 + koLosses1 + koLosses2,
family = binomial(link="logit"), data = train)
summary(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$ResultBin, na.rm = TRUE)
print(paste('Accuracy',1-misClasificError))
table("predicted" = fitted.results, "actual" = test$Result2)
model <- glm(ResultBin ~ eloWinProb + decOdds + diffAge +
oppRat1_5 + oppRat2_5,
family = binomial(link="logit"), data = train)
summary(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$ResultBin, na.rm = TRUE)
print(paste('Accuracy',1-misClasificError))
table("predicted" = fitted.results, "actual" = test$Result2)
summary(model)
filtfightsOdds2 %>% filter(Date >= "2018-01-01") %>% View()
filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, decOdds, eloWinProb, diffAge, ResultBin) %>%
View()
filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Fighter1, Result2, Fighter2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, decOdds, eloWinProb, diffAge, ResultBin) %>%
View()
filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Fighter1, Result2, Fighter2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, decOdds, eloWinProb, diffAge, ResultBin) %>%
View()
summary(model)
filtfightsOdds2 <- filtfightsOdds %>%
filter(Result2 %in% c("win", "loss") & r1b > r2b|
(r1b == r2b & ratIncrease1_3 > ratIncrease2_3),
!is.na(Age1), !is.na(Age2)) %>%
mutate(eloWinProb = 1/(1+10^((r2b-r1b)/400)),
decOdds = odds_to_return(odds, 1)+1,
diffAge = Age1 - Age2,
ResultBin = ifelse(Result2 == "win", 1, 0))
set.seed(1)
train <- filtfightsOdds2 %>%
sample_n(0.8*nrow(filtfightsOdds2)) %>%
select(-Method, -Method_d, -Event, -Date, -r1a, -r2a, -Fighter1, -Fighter2, -R,
-Time, -Referee, -nc1, -nc2)
test <- anti_join(filtfightsOdds2, train)
model <- glm(ResultBin ~ eloWinProb + decOdds + diffAge +
oppRat1_5 + oppRat2_5,
family = binomial(link="logit"), data = train)
summary(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$ResultBin, na.rm = TRUE)
print(paste('Accuracy',1-misClasificError))
table("predicted" = fitted.results, "actual" = test$Result2)
filtfightsOdds2$pred <- predict(model,newdata=filtfightsOdds2,type='response')
filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, decOdds, eloWinProb, diffAge, ResultBin) %>%
View()
filtfightsOdds2 <- filtfightsOdds %>%
filter(Result2 %in% c("win", "loss") & r1b > r2b|
(r1b == r2b & ratIncrease1_3 > ratIncrease2_3),
!is.na(Age1), !is.na(Age2)) %>%
mutate(eloWinProb = 1/(1+10^((r2b-r1b)/400)),
perOdds = line_to_per(odds),
diffAge = Age1 - Age2,
ResultBin = ifelse(Result2 == "win", 1, 0))
set.seed(1)
train <- filtfightsOdds2 %>%
sample_n(0.8*nrow(filtfightsOdds2)) %>%
select(-Method, -Method_d, -Event, -Date, -r1a, -r2a, -Fighter1, -Fighter2, -R,
-Time, -Referee, -nc1, -nc2)
test <- anti_join(filtfightsOdds2, train)
model <- glm(ResultBin ~ eloWinProb + decOdds + diffAge +
oppRat1_5 + oppRat2_5,
family = binomial(link="logit"), data = train)
filtfightsOdds <- readRDS(file = "./scripts/8-append-odds/data/filtfightsOdds.rds")
filtfightsOdds2 <- filtfightsOdds %>%
filter(Result2 %in% c("win", "loss") & r1b > r2b|
(r1b == r2b & ratIncrease1_3 > ratIncrease2_3),
!is.na(Age1), !is.na(Age2)) %>%
mutate(eloWinProb = 1/(1+10^((r2b-r1b)/400)),
perOdds = line_to_per(odds),
diffAge = Age1 - Age2,
ResultBin = ifelse(Result2 == "win", 1, 0))
set.seed(1)
train <- filtfightsOdds2 %>%
sample_n(0.8*nrow(filtfightsOdds2)) %>%
select(-Method, -Method_d, -Event, -Date, -r1a, -r2a, -Fighter1, -Fighter2, -R,
-Time, -Referee, -nc1, -nc2)
test <- anti_join(filtfightsOdds2, train)
model <- glm(ResultBin ~ eloWinProb + decOdds + diffAge +
oppRat1_5 + oppRat2_5,
family = binomial(link="logit"), data = train)
summary(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$ResultBin, na.rm = TRUE)
print(paste('Accuracy',1-misClasificError))
table("predicted" = fitted.results, "actual" = test$Result2)
filtfightsOdds2$pred <- predict(model,newdata=filtfightsOdds2,type='response')
filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin) %>%
View()
blah <- filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin)
blah %>% group_by(perOdds>0.5, eloWinProb>0.5) %>% summarise(mean(ResultBin), mean(Result2))
blah %>% group_by(perOdds>0.5, eloWinProb>0.5) %>% summarise(mean(ResultBin), mean(Result2==1))
blah %>% group_by(perOdds>0.5, eloWinProb>0.5) %>% summarise(mean(ResultBin), sum(Result2==1))
blah %>% group_by(perOdds>0.5, eloWinProb>0.5) %>% summarise(mean(ResultBin), sum(Result2=="win"))
blah %>% group_by(perOdds>0.5, eloWinProb>0.5) %>% summarise(mean(ResultBin), mean(Result2=="win"))
blah %>% group_by(perOdds>0.5, eloWinProb>0.5) %>% summarise(mean(ResultBin))
blah %>% group_by(perOdds>0.5, eloWinProb>0.5) %>% summarise(n(), mean(ResultBin))
blah %>% group_by(perOdds>0.5) %>% summarise(n(), mean(ResultBin))
filtfightsOdds <- readRDS(file = "./scripts/8-append-odds/data/filtfightsOdds.rds")
filtfightsOdds2 <- filtfightsOdds %>%
filter(Result2 %in% c("win", "loss") & r1b > r2b|
(r1b == r2b & ratIncrease1_3 > ratIncrease2_3),
!is.na(Age1), !is.na(Age2)) %>%
mutate(eloWinProb = 1/(1+10^((r2b-r1b)/400)),
perOdds = line_to_per(odds),
diffAge = Age1 - Age2,
ResultBin = ifelse(Result2 == "win", 1, 0))
set.seed(1)
train <- filtfightsOdds2 %>%
sample_n(0.8*nrow(filtfightsOdds2)) %>%
select(-Method, -Method_d, -Event, -Date, -r1a, -r2a, -Fighter1, -Fighter2, -R,
-Time, -Referee, -nc1, -nc2)
test <- anti_join(filtfightsOdds2, train)
model <- glm(ResultBin ~ decOdds + diffAge +
oppRat1_5 + oppRat2_5,
family = binomial(link="logit"), data = train)
summary(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$ResultBin, na.rm = TRUE)
print(paste('Accuracy',1-misClasificError))
table("predicted" = fitted.results, "actual" = test$Result2)
filtfightsOdds2$pred <- predict(model,newdata=filtfightsOdds2,type='response')
blah <- filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin)
model <- glm(ResultBin ~ perOdds + diffAge +
oppRat1_5 + oppRat2_5,
family = binomial(link="logit"), data = train)
summary(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$ResultBin, na.rm = TRUE)
print(paste('Accuracy',1-misClasificError))
table("predicted" = fitted.results, "actual" = test$Result2)
filtfightsOdds2$pred <- predict(model,newdata=filtfightsOdds2,type='response')
blah <- filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin)
blah %>% group_by(perOdds>0.5) %>% summarise(n(), mean(ResultBin))
filtfightsOdds <- readRDS(file = "./scripts/8-append-odds/data/filtfightsOdds.rds")
filtfightsOdds2 <- filtfightsOdds %>%
filter(Result2 %in% c("win", "loss") & r1b > r2b|
(r1b == r2b & ratIncrease1_3 > ratIncrease2_3),
!is.na(Age1), !is.na(Age2)) %>%
mutate(eloWinProb = 1/(1+10^((r2b-r1b)/400)),
perOdds = line_to_per(odds),
diffAge = Age1 - Age2,
ResultBin = ifelse(Result2 == "win", 1, 0))
set.seed(1)
train <- filtfightsOdds2 %>%
sample_n(0.8*nrow(filtfightsOdds2)) %>%
select(-Method, -Method_d, -Event, -Date, -r1a, -r2a, -Fighter1, -Fighter2, -R,
-Time, -Referee, -nc1, -nc2)
test <- anti_join(filtfightsOdds2, train)
model <- glm(ResultBin ~ perOdds + diffAge +
oppRat1_5 + oppRat2_5,
family = binomial(link="logit"), data = train)
summary(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$ResultBin, na.rm = TRUE)
print(paste('Accuracy',1-misClasificError))
table("predicted" = fitted.results, "actual" = test$Result2)
filtfightsOdds2$pred <- predict(model,newdata=filtfightsOdds2,type='response')
blah <- filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin)
blah %>% group_by(perOdds>0.5) %>% summarise(n(), mean(ResultBin))
summary(model)
model <- glm(ResultBin ~ perOdds + diffAge +
oppRat1_5 + oppRat2_5 + (Org=="UFC"),
family = binomial(link="logit"), data = train)
summary(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$ResultBin, na.rm = TRUE)
print(paste('Accuracy',1-misClasificError))
table("predicted" = fitted.results, "actual" = test$Result2)
filtfightsOdds2$pred <- predict(model,newdata=filtfightsOdds2,type='response')
blah <- filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin)
blah %>% group_by(perOdds>0.5) %>% summarise(n(), mean(ResultBin))
blah
blah %>% View
model <- glm(ResultBin ~ perOdds + diffAge +
oppRat1_5 + oppRat2_5 + ratIncrease1 + ratIncrease2,
family = binomial(link="logit"), data = train)
summary(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$ResultBin, na.rm = TRUE)
print(paste('Accuracy',1-misClasificError))
table("predicted" = fitted.results, "actual" = test$Result2)
filtfightsOdds2$pred <- predict(model,newdata=filtfightsOdds2,type='response')
blah <- filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin)
blah %>% group_by(perOdds>0.5) %>% summarise(n(), mean(ResultBin))
summary(model)
model <- glm(ResultBin ~ perOdds + diffAge +
oppRat1_5 + oppRat2_5 + ratIncrease1_3 + ratIncrease2_3,
family = binomial(link="logit"), data = train)
summary(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$ResultBin, na.rm = TRUE)
print(paste('Accuracy',1-misClasificError))
table("predicted" = fitted.results, "actual" = test$Result2)
filtfightsOdds2$pred <- predict(model,newdata=filtfightsOdds2,type='response')
blah <- filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin)
blah %>% group_by(perOdds>0.5) %>% summarise(n(), mean(ResultBin))
model <- glm(ResultBin ~ perOdds + diffAge +
oppRat1_5 + oppRat2_5 + (ratIncrease1_3>0) + (ratIncrease2_3>0),
family = binomial(link="logit"), data = train)
summary(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$ResultBin, na.rm = TRUE)
print(paste('Accuracy',1-misClasificError))
table("predicted" = fitted.results, "actual" = test$Result2)
filtfightsOdds2$pred <- predict(model,newdata=filtfightsOdds2,type='response')
blah <- filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin)
blah %>% group_by(perOdds>0.5) %>% summarise(n(), mean(ResultBin))
blah %>% View
blah <- filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin, pred)
blah %>% group_by(perOdds>0.5) %>% summarise(n(), mean(pred))
blah
blah <- filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin, pred>0.5)
blah <- filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin, pred) %>%
mutate(pred = ifelse(pred>0.5, 1, 0))
blah %>% group_by(perOdds>0.5) %>% summarise(n(), mean(ResultBin))
blah %>% group_by(perOdds>0.5) %>% summarise(n(), mean(ResultBin), mean(pred))
blah
blah <- filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin, pred)
blah %>% group_by(pred>0.5) %>% summarise(n(), mean(ResultBin), mean(pred))
blah %>% group_by(pred>0.5) %>% summarise(n(), mean(ResultBin))
blah$pred  > 0.5
is.na(blah$pred  > 0.5)
which(is.na(blah$pred  > 0.5)==TRUE)
blah$pred[which(is.na(blah$pred  > 0.5)==TRUE)]
model <- glm(ResultBin ~ perOdds + diffAge +
oppRat1_5 + oppRat2_5,
family = binomial(link="logit"), data = train)
summary(model)
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$ResultBin, na.rm = TRUE)
print(paste('Accuracy',1-misClasificError))
table("predicted" = fitted.results, "actual" = test$Result2)
filtfightsOdds2$pred <- predict(model,newdata=filtfightsOdds2,type='response')
blah <- filtfightsOdds2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin, pred)
blah %>% group_by(pred>0.5) %>% summarise(n(), mean(ResultBin))
misClasificError <- mean(fitted.results != test$ResultBin, na.rm = TRUE)
print(paste('Accuracy',1-misClasificError))
table("predicted" = fitted.results, "actual" = test$Result2)
blah %>% group_by(pred>0.5) %>% summarise(n(), mean(ResultBin), sum(ResultBin))
table("predicted" = fitted.results, "actual" = test$Result2)
blah <- test2 %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin, pred)
blah <- test %>%
filter(Date >= "2018-01-01") %>%
select(match_id, Link1, Result2, Link2, Method, Event, Date, r1b, r2b, Age1, Age2, odds, perOdds, eloWinProb, diffAge, ResultBin, pred)
runApp('Shiny App/MatchPredictor')
source('./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
source('./scripts/10-future-fights/futureFights.R', echo = TRUE)
source('~/GitHub/MMAscraper/Shiny App/MatchPredictor/scriptsForApp.R', echo=TRUE)
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
