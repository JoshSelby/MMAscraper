fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(odds< 0 & ROI3>10,odds<= -400) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(odds< 0 & ROI3>10,odds<= -500) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(odds< 0 & ROI3>10,odds<= -300) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(odds< 0 & ROI3>10,odds<= -350) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
24+168+59.7
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(odds< 0 & ROI3>10 |odds<= -350) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by((odds>0 & ROI3>3|ROI4>3) |
(odds<0 & ROI3>10)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by((ROI3>3|ROI4>3 & odds>0) |
(odds<0 & ROI3>10)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by((ROI3>3|ROI4>3 & odds>0),
(odds<0 & ROI3>10)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(ROI3>3 | ROI4>3, odds>0) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(ROI3>3 | ROI4>3 & odds>0) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by((ROI3>3 | ROI4>3) & odds>0) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(((ROI3>3 | ROI4>3) & odds>0) |%>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(((ROI3>3 | ROI4>3) & odds>0) |
(ROI3>10 & odds<0)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>% filter(((ROI3>3 | ROI4>3) & odds>0) |
(ROI3>10 & odds<0), year(Date) == 2019, ROI > 5, count > 25) %>% View
library(lubridate)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(((ROI3>3 | ROI4>3) & odds>0) |
(ROI3>10 & odds<0), year(Date)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
391+318+648
391+318+648-13-3.83
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(((ROI3>3 | ROI4>3) & odds>0) |
(ROI3>10 & odds<0)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(((ROI3>3 | ROI4>3) & odds>0) |
(ROI3>10 & odds<0), year(Date)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>% filter(((ROI3>3 | ROI4>3) & odds>0) |
(ROI3>10 & odds<0), year(Date) == 2019, count4 > 20) %>% View
source('./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(((ROI3>3 | ROI4>3) & odds>0) |
(ROI3>10 & odds<0), year(Date)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
source('~/GitHub/MMAscraper/Shiny App/MatchPredictor/scriptsForApp.R', echo=TRUE)
runApp('Shiny App/MatchPredictor')
source('./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
futureOdds <- readRDS("./scripts/7-scrape-odds/data/futureOdds.RDS")
View(futureOdds)
source('~/GitHub/MMAscraper/./scripts/10-future-fights/futureFights.R', echo=TRUE)
source('~/GitHub/MMAscraper/Shiny App/MatchPredictor/scriptsForApp.R', echo=TRUE)
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
filtData <- filtfightsOdds %>%
select(Link1, Link2, Result2, Method, Date, Event, odds, r1b, r2b, Age1, Age2, ratIncrease1, ratIncrease2, ratIncrease1_3, ratIncrease2_3) %>%
filter(Result2 %in% c("win", "loss")) %>%
mutate(bet = 10,
winnings = ifelse(Result2 %in% c("NC", "draw"), 0, ifelse(odds>0,ifelse(Result2=="win", odds*bet/100, -bet),
ifelse(Result2=="win", -100/odds * bet, -bet))) %>%
round(2)
) %>%
arrange(desc(Date))
test <- filtfightsOdds %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-1.5, 1),", ", round(Age1-Age2+1.5, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
dateCheck = paste0("Date < ", "'",Date,"'"),
trendCheck = paste0("between(ratIncrease1_3-ratIncrease2_3, ",round(ratIncrease1_3-ratIncrease2_3-50, 0),", ",
round(ratIncrease1_3-ratIncrease2_3+50, 0),")")
) %>%
arrange(match_id)
for (i in 1:nrow(test)) {
data <- filtData %>%
filter(eval_tidy(parse_expr(paste(test[i, 61:63] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result2=="win"),
count = n(),
winPerSimFight = ifelse(count==0, NA, wins/count),
ROI = round(sum(winnings)/(mean(bet)*n())*100, 2))
test$winPerSimFight3[i] <- data %>% pull(winPerSimFight)
test$ROI3[i] <- data %>% pull(ROI)
test$count3[i] <- data %>% pull(count)
print(i)
}
for (i in 1:nrow(test)) {
data <- filtData %>%
filter(eval_tidy(parse_expr(paste(test[i, 60:63] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result2=="win"),
count = n(),
winPerSimFight = ifelse(count==0, NA, wins/count),
ROI = round(sum(winnings)/(mean(bet)*n())*100, 2))
test$winPerSimFight4[i] <- data %>% pull(winPerSimFight)
test$ROI4[i] <- data %>% pull(ROI)
test$count4[i] <- data %>% pull(count)
print(i)
}
test <- test %>%
mutate(bet = 10,  winnings = ifelse(Result %in% c("NC", "draw"), 0, ifelse(odds>0,ifelse(Result=="win", odds*bet/100, -bet),
ifelse(Result=="win", -100/odds * bet, -bet))) %>%
round(2)) %>%
ungroup()
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(((ROI3>3 | ROI4>3) & odds>0) |
(ROI3>10 & odds<0)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
filtData <- filtfightsOdds %>%
select(Link1, Link2, Result2, Method, Date, Event, odds, r1b, r2b, Age1, Age2, ratIncrease1, ratIncrease2, ratIncrease1_3, ratIncrease2_3) %>%
filter(Result2 %in% c("win", "loss")) %>%
mutate(bet = 10,
winnings = ifelse(Result2 %in% c("NC", "draw"), 0, ifelse(odds>0,ifelse(Result2=="win", odds*bet/100, -bet),
ifelse(Result2=="win", -100/odds * bet, -bet))) %>%
round(2)
) %>%
arrange(desc(Date))
test <- filtfightsOdds %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-1.5, 1),", ", round(Age1-Age2+1.5, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
dateCheck = paste0("Date < ", "'",Date,"'"),
trendCheck = paste0("between(ratIncrease1_3-ratIncrease2_3, ",round(ratIncrease1_3-ratIncrease2_3-50, 0),", ",
round(ratIncrease1_3-ratIncrease2_3+50, 0),")")
) %>%
arrange(match_id)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(ROI3>20) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(ROI4>20) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
runApp('Shiny App/MatchPredictor')
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(ROI4>20) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(ROI3>0, ROI4>20) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
runApp('Shiny App/MatchPredictor')
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(winPerSimFight3-winper>0.15) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
runApp('Shiny App/MatchPredictor')
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(winPerSimFight3-winper>0.2) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by((ROI3>3 | ROI4>3) & odds>0) |
(ROI3>10 & odds<0)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(((ROI3>3 | ROI4>3) & odds>0) |
(ROI3>10 & odds<0)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(((ROI3>3 | ROI4>3) & odds>0) |
(ROI3>10 & odds<0), winPerSimFight3-winper>0.15) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(((ROI3>3 | ROI4>3) & odds>0) |
(ROI3>10 & odds<0), winPerSimFight3-winper>0.2) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(((ROI3>3 | ROI4>3) & odds>0) |
(ROI3>10 & odds<0), winPerSimFight3-winper>0.3) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count4 > 20 & Result %in% c("win", "loss")) %>%
group_by(((ROI3>3 | ROI4>3) & odds>0) |
(ROI3>10 & odds<0), winPerSimFight3-winper>0.2) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
runApp('Shiny App/MatchPredictor')
source('~/GitHub/MMAscraper/scripts/0-run-scripts/Update_Everything.R', echo=TRUE)
fightMetricsEvent <- readRDS(file = "./scripts/5-metrics/data/fightMetricsEvent.rds")
lastFight <- fightMetricsEvent %>%
group_by(Link1) %>%
arrange(match_id) %>%
slice(n()) %>%
ungroup
fightersTable <- lastFight %>%
mutate(wins1 = ifelse(Result == "win", wins1 + 1, wins1),
loss1 = ifelse(Result == "loss", loss1 + 1, loss1),
draw1 = ifelse(Result == "draw", draw1 + 1, draw1),
nc1 = ifelse(Result == "NC", nc1 + 1, nc1),
BDchar = as.character(BD1)) %>%
select(Link1, Result, Link2, Date, r1a, Fighter1, BD1, BDchar, wins1, loss1, draw1, nc1, Org) %>%
rename(Link = Link1, Last.Result = Result, Last.Opponent = Link2, Last.Date = Date, rating = r1a, Name = Fighter1,
Birthday = BD1, wins = wins1, loss = loss1, draw = draw1, nc = nc1) %>%
arrange(desc(rating)) %>%
as.data.table()
saveRDS(fightersTable, "./scripts/9-various-tables/data/fightersTable.rds")
View(fightersTable)
source('~/GitHub/MMAscraper/scripts/0-run-scripts/Update_Everything.R', echo=TRUE)
runApp('Shiny App/MatchPredictor')
source('~/GitHub/MMAscraper/Shiny App/MatchPredictor/scriptsForApp.R', echo=TRUE)
runApp('Shiny App/MatchPredictor')
source('~/GitHub/MMAscraper/Shiny App/MatchPredictor/scriptsForApp.R', echo=TRUE)
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
topFighters <- fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
arrange(desc(Date)) %>%
slice(1) %>%
select(Link1, Fighter1, r1a) %>%
arrange(desc(r1a)) %>%
head(5000)
source('~/GitHub/MMAscraper/Shiny App/MatchPredictor/scriptsForApp.R', echo=TRUE)
# read datasets
futureFights <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/futureFights.RDS")
fightMetricsEventOdds2 <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/fightMetricsEventOdds.rds") %>%
mutate(Date = as.character(Date),
r1b = as.integer(r1b),
r2b = as.integer(r2b),
odds = as.integer(odds)) %>%
arrange(desc(match_id)) %>%
right_join(futureFights %>% select(Link1))
filtfightsOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/filtfightsOdds.rds")
topFighters <- fightMetricsEventOdds2 %>%
group_by(Link1, Fighter1) %>%
arrange(desc(Date)) %>%
slice(1) %>%
select(Link1, Fighter1, r1a) %>%
arrange(desc(r1a)) %>%
head(5000)
# extra functions
with_plus <- function(x, ...) {
if (x > 0) {
return(sprintf(fmt = "+%s", format(x, ...)))
}
else {
return(x)
}
}
line_to_per <- function(x) {
return(if_else(x < 0, -x/((-x + 100)), 100/(x+100)))
}
per_to_line <- function(x) {
return(if_else(x <= 0.5, (1-x)/x * 100, x/(1-x) * -100))
}
odds_to_return <- function(x, bet=10) {
return(if_else(x < 0, bet/-x*100, x*bet/100))
}
######
graphFighters <- function(fighterNames, title=NULL, opponent=FALSE) {
Fighters <- fightMetricsEventOdds %>%
filter(Fighter1 %in% fighterNames) %>%
group_by(Link1, Fighter1) %>%
summarise(maxRat = max(r1a)) %>%
arrange(desc(maxRat)) %>%
group_by(Fighter1) %>%
slice(1) %>%
pull(Link1)
ggplot(fightMetricsEventOdds %>%
mutate(Date = as.Date(Date)) %>%
rename(Rating = r1a, Fighter = Fighter1, Opponent = r2b) %>%
filter(Link1 %in% Fighters),
aes(x = Date)) +
geom_line(aes(y=Rating, col=Fighter)) +
geom_point(aes(y=Rating, col=Fighter)) +
{if(opponent) geom_point(aes(y=Opponent, col=Fighter, shape = 1))} +
scale_shape_identity() +
scale_x_date(breaks = function(x) seq.Date(from=min(x), to=max(x), by="2 years"), date_labels = "%Y") +
xlab("Date") +
ylab("Elo Rating") +
ggtitle(title)
# test <<- fightMetricsEventOdds %>%
#   filter(Fighter1 %in% fighterNames)
}
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
######
graphFighters <- function(fighterNames, title=NULL, opponent=FALSE) {
Fighters <- fightMetricsEventOdds2 %>%
filter(Fighter1 %in% fighterNames) %>%
group_by(Link1, Fighter1) %>%
summarise(maxRat = max(r1a)) %>%
arrange(desc(maxRat)) %>%
group_by(Fighter1) %>%
slice(1) %>%
pull(Link1)
ggplot(fightMetricsEventOdds2 %>%
mutate(Date = as.Date(Date)) %>%
rename(Rating = r1a, Fighter = Fighter1, Opponent = r2b) %>%
filter(Link1 %in% Fighters),
aes(x = Date)) +
geom_line(aes(y=Rating, col=Fighter)) +
geom_point(aes(y=Rating, col=Fighter)) +
{if(opponent) geom_point(aes(y=Opponent, col=Fighter, shape = 1))} +
scale_shape_identity() +
scale_x_date(breaks = function(x) seq.Date(from=min(x), to=max(x), by="2 years"), date_labels = "%Y") +
xlab("Date") +
ylab("Elo Rating") +
ggtitle(title)
# test <<- fightMetricsEventOdds %>%
#   filter(Fighter1 %in% fighterNames)
}
runApp('Shiny App/MatchPredictor')
