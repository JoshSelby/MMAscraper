<<<<<<< HEAD
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")")) %>%
do(mutate(
ROI = filtData %>%
filter(paste(c(oddsCheck, ageCheck, ratCheck), collapse = " & ")) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = paste0(round(sum(winnings)/(bet*n())*100, 2), "%")) %>%
pull(ROI)
)
) %>%
View()
filtfightsOdds %>%
slice(1) %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
ROI = filtData %>%
filter(paste(c(oddsCheck, ageCheck, ratCheck), collapse = " & ")) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = paste0(round(sum(winnings)/(bet*n())*100, 2), "%")) %>%
pull(ROI)
) %>%
View()
filtfightsOdds %>%
slice(1) %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
ROI = paste(c(oddsCheck, ageCheck, ratCheck), collapse = " & ")
) %>%
View()
filtfightsOdds %>%
slice(1) %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
ROI = filtData %>%
filter(expr(paste(c(oddsCheck, ageCheck, ratCheck), collapse = " & "))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = paste0(round(sum(winnings)/(bet*n())*100, 2), "%")) %>%
pull(ROI)
) %>%
View()
expr(paste(c(oddsCheck, ageCheck, ratCheck), collapse = " & "))
?expr
filtfightsOdds %>%
slice(1) %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
ROI = filtData %>%
filter(eval(parse(paste(c(oddsCheck, ageCheck, ratCheck), collapse = " & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = paste0(round(sum(winnings)/(bet*n())*100, 2), "%")) %>%
pull(ROI)
) %>%
View()
filtfightsOdds %>%
slice(1) %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
ROI = filtData %>%
filter(eval(parse(text=paste(c(oddsCheck, ageCheck, ratCheck), collapse = " & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = paste0(round(sum(winnings)/(bet*n())*100, 2), "%")) %>%
pull(ROI)
) %>%
View()
filtData %>%
filter(between(odds, -179, -118) &
between(Age1-Age2, 0.9, 4.9) &
between(r1b-r2b, -179, -79)
) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = paste0(round(sum(winnings)/(bet*n())*100, 2), "%")) %>%
pull(ROI)
filtfightsOdds %>%
slice(1) %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
datCheck = paste0("Date < ", Date),
ROI = filtData %>%
filter(eval(parse(text=paste(c(oddsCheck, ageCheck, ratCheck), collapse = " & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = paste0(round(sum(winnings)/(bet*n())*100, 2), "%")) %>%
pull(ROI)
) %>%
View()
filtfightsOdds %>%
slice(1) %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
datCheck = paste0("Date < ", Date),
ROI = filtData %>%
filter(eval(parse(text=paste(c(oddsCheck, ageCheck, ratCheck, datCheck), collapse = " & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = paste0(round(sum(winnings)/(bet*n())*100, 2), "%")) %>%
pull(ROI)
) %>%
View()
filtfightsOdds %>%
slice(1:100) %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
datCheck = paste0("Date < ", Date),
ROI = filtData %>%
filter(eval(parse(text=paste(c(oddsCheck, ageCheck, ratCheck, datCheck), collapse = " & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = paste0(round(sum(winnings)/(bet*n())*100, 2), "%")) %>%
pull(ROI)
) %>%
View()
test <- filtfightsOdds %>%
slice(1:100) %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
datCheck = paste0("Date < ", Date)
)
test
for (i in 1:100) {}
test <- filtfightsOdds %>%
slice(1:100) %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
datCheck = paste0("Date < ", Date),
ROI = NULL
)
test <- filtfightsOdds %>%
slice(1:100) %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
datCheck = paste0("Date < ", Date),
ROI = NULL
)
test <- filtfightsOdds %>%
slice(1:100) %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
datCheck = paste0("Date < ", Date),
ROI = NA
)
c(test$ageCheck[i], test$datCheck[i], test$ratCheck[i], test$datCheck[i])
test$ROI[i] <- filtData %>%
filter(paste(c(test$oddsCheck[i], test$ageCheck[i], test$ratCheck[i], test$datCheck[i]))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = paste0(round(sum(winnings)/(bet*n())*100, 2), "%")) %>%
pull(ROI)
c(test$oddsCheck[i], test$ageCheck[i], test$ratCheck[i], test$datCheck[i])
test[i, 57:60]
test[i, 57:60] %>% as.character
paste(test[i, 57:60] %>% as.character, collapse=" & ")
test$ROI[i] <- filtData %>%
filter(expr(parse(text=paste(test[i, 57:60] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = paste0(round(sum(winnings)/(bet*n())*100, 2), "%")) %>%
pull(ROI)
i=1
filtData %>%
filter(expr(parse(text=paste(test[i, 57:60] %>% as.character, collapse=" & "))))
expr(parse(text=paste(test[i, 57:60] %>% as.character, collapse=" & ")))
parse(text=paste(test[i, 57:60] %>% as.character, collapse=" & "))
filtData %>%
filter(test[i, 57:60] %>% as.character, collapse=" & ")
filtData %>%
filter(paste(test[i, 57:60] %>% as.character, collapse=" & "))
paste(test[i, 57:60] %>% as.character, collapse=" & ")
filtData %>%
filter(between(odds, -179, -118) & between(Age1-Age2, 0.9, 4.9) & between(r1b-r2b, -179, -79) & Date < 2007-11-16)
filtData %>%
filter("between(odds, -179, -118) & between(Age1-Age2, 0.9, 4.9) & between(r1b-r2b, -179, -79) & Date < 2007-11-16")
filtData %>%
filter(expr("between(odds, -179, -118) & between(Age1-Age2, 0.9, 4.9) & between(r1b-r2b, -179, -79) & Date < 2007-11-16"))
expr("between(odds, -179, -118) & between(Age1-Age2, 0.9, 4.9) & between(r1b-r2b, -179, -79) & Date < 2007-11-16")
parse("between(odds, -179, -118) & between(Age1-Age2, 0.9, 4.9) & between(r1b-r2b, -179, -79) & Date < 2007-11-16")
parse(text="between(odds, -179, -118) & between(Age1-Age2, 0.9, 4.9) & between(r1b-r2b, -179, -79) & Date < 2007-11-16")
expr(parse(text="between(odds, -179, -118) & between(Age1-Age2, 0.9, 4.9) & between(r1b-r2b, -179, -79) & Date < 2007-11-16"))
parse(text="between(odds, -179, -118) & between(Age1-Age2, 0.9, 4.9) & between(r1b-r2b, -179, -79) & Date < 2007-11-16")
filtData %>%
filter(parse(text="between(odds, -179, -118) & between(Age1-Age2, 0.9, 4.9) & between(r1b-r2b, -179, -79) & Date < 2007-11-16"))
library(rlang)
filtData %>%
filter(parse_expr(text="between(odds, -179, -118) & between(Age1-Age2, 0.9, 4.9) & between(r1b-r2b, -179, -79) & Date < 2007-11-16"))
filtData %>%
filter(parse_expr("between(odds, -179, -118) & between(Age1-Age2, 0.9, 4.9) & between(r1b-r2b, -179, -79) & Date < 2007-11-16"))
parse_expr("between(odds, -179, -118) & between(Age1-Age2, 0.9, 4.9) & between(r1b-r2b, -179, -79) & Date < 2007-11-16")
?parse_expr
filtData %>% filter(Data >"2007-01-01")
filtData %>% filter(Date >"2007-01-01")
filtData %>% filter(Date >2007-01-01)
test <- filtfightsOdds %>%
slice(1:100) %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
datCheck = paste0("Date < ", "'",Date,"'"),
ROI = NA
)
View(test)
for (i in 1:100) {
test$ROI[i] <- filtData %>%
filter(expr(parse(text=paste(test[i, 57:60] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = paste0(round(sum(winnings)/(bet*n())*100, 2), "%")) %>%
pull(ROI)
}
filtData %>%
filter(paste(test[i, 57:60] %>% as.character, collapse=" & "))
paste(test[i, 57:60] %>% as.character, collapse=" & ")
?eval_tidy
filtData %>%
filter(eval_tidy(paste(test[i, 57:60] %>% as.character, collapse=" & ")))
eval_tidy(paste(test[i, 57:60] %>% as.character, collapse=" & "))
filtData %>%
filter(eval_tidy(parse(text = paste(test[i, 57:60] %>% as.character, collapse=" & "))))
eval_tidy(parse(text = paste(test[i, 57:60] %>% as.character, collapse=" & ")))
eval_tidy(parse(text = paste(test[i, 57:59] %>% as.character, collapse=" & ")))
filtData %>%
filter(eval_tidy(parse(text = paste(test[i, 57] %>% as.character, collapse=" & "))))
?parse_expr
filtData %>%
filter(eval_tidy(parse_expr(paste(test[i, 57:60] %>% as.character, collapse=" & "))))
for (i in 1:100) {
test$ROI[i] <- filtData %>%
filter(eval_tidy(parse_expr(paste(test[i, 57:60] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = paste0(round(sum(winnings)/(bet*n())*100, 2), "%")) %>%
pull(ROI)
}
View(test)
test$ROI[i] <- filtData %>%
filter(eval_tidy(parse_expr(paste(test[i, 57:60] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = round(sum(winnings)/(bet*n())*100, 2)) %>%
pull(ROI)
View(test)
filtData %>%
filter(eval_tidy(parse_expr(paste(test[i, 57:60] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = round(sum(winnings)/(bet*n())*100, 2)) %>%
pull(ROI)
test <- filtfightsOdds %>%
slice(1:100) %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
datCheck = paste0("Date < ", "'",Date),
ROI = NA
)
for (i in 1:100) {
test$ROI[i] <- filtData %>%
filter(eval_tidy(parse_expr(paste(test[i, 57:60] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = round(sum(winnings)/(bet*n())*100, 2)) %>%
pull(ROI)
}
paste(test[i, 57:60] %>% as.character, collapse=" & ")
test <- filtfightsOdds %>%
slice(1:100) %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
datCheck = paste0("Date < ", "'",Date,"'"),
ROI = NA
)
for (i in 1:100) {
test$ROI[i] <- filtData %>%
filter(eval_tidy(parse_expr(paste(test[i, 57:60] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = round(sum(winnings)/(bet*n())*100, 2)) %>%
pull(ROI)
}
View(test)
test <- filtfightsOdds %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
datCheck = paste0("Date < ", "'",Date,"'"),
ROI = NA
)
print(i)
for (i in 1:nrow(test)) {
test$ROI[i] <- filtData %>%
filter(eval_tidy(parse_expr(paste(test[i, 57:60] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = round(sum(winnings)/(bet*n())*100, 2)) %>%
pull(ROI)
print(i)
}
View(test)
View(test)
test %>% filter(ROI > 0) %>% select(1:6, ROI)
test %>% filter(ROI > 0) %>% select(1:6, ROI)
test %>% filter(ROI > 0) %>% select(1:4, odds, ROI)
test %>% filter(ROI > 0) %>% select(1:4, date, odds, ROI)
test %>% filter(ROI > 0) %>% select(1:4, Date, odds, ROI)
test %>% filter(ROI > 0) %>% select(1:4, Date, odds, ROI) %>% mutate(Bet = 10)
test %>%
filter(ROI > 0) %>%
select(1:4, Date, odds, ROI) %>%
mutate(Bet = 10,  winnings = ifelse(Result %in% c("NC", "draw"), 0, ifelse(odds>0,ifelse(Result=="win", odds*bet/100, -bet),
ifelse(Result=="win", -100/odds * bet, -bet))) %>%
round(2))
test %>%
filter(ROI > 0) %>%
select(1:4, Date, odds, ROI) %>%
mutate(bet = 10,  winnings = ifelse(Result %in% c("NC", "draw"), 0, ifelse(odds>0,ifelse(Result=="win", odds*bet/100, -bet),
ifelse(Result=="win", -100/odds * bet, -bet))) %>%
round(2))
test %>%
filter(ROI > 0) %>%
select(1:4, Date, odds, ROI) %>%
mutate(bet = 10,  winnings = ifelse(Result %in% c("NC", "draw"), 0, ifelse(odds>0,ifelse(Result=="win", odds*bet/100, -bet),
ifelse(Result=="win", -100/odds * bet, -bet))) %>%
round(2)) %>%
View()
test %>%
filter(ROI > 0 & Date >= "2017-01-01") %>%
select(1:4, Date, odds, ROI) %>%
mutate(bet = 10,  winnings = ifelse(Result %in% c("NC", "draw"), 0, ifelse(odds>0,ifelse(Result=="win", odds*bet/100, -bet),
ifelse(Result=="win", -100/odds * bet, -bet))) %>%
round(2)) %>%
View()
test %>%
filter(ROI > 3 & Date >= "2017-01-01") %>%
select(1:4, Date, odds, ROI) %>%
mutate(bet = 10,  winnings = ifelse(Result %in% c("NC", "draw"), 0, ifelse(odds>0,ifelse(Result=="win", odds*bet/100, -bet),
ifelse(Result=="win", -100/odds * bet, -bet))) %>%
round(2)) %>%
View()
test %>%
filter(ROI > 3 & Date >= "2017-01-01") %>%
select(1:4, Date, odds, ROI) %>%
mutate(bet = 10,  winnings = ifelse(Result %in% c("NC", "draw"), 0, ifelse(odds>0,ifelse(Result=="win", odds*bet/100, -bet),
ifelse(Result=="win", -100/odds * bet, -bet))) %>%
round(2)) %>%
sum(winnings)
test2 <- test %>%
filter(ROI > 3 & Date >= "2017-01-01") %>%
select(1:4, Date, odds, ROI) %>%
mutate(bet = 10,  winnings = ifelse(Result %in% c("NC", "draw"), 0, ifelse(odds>0,ifelse(Result=="win", odds*bet/100, -bet),
ifelse(Result=="win", -100/odds * bet, -bet))) %>%
round(2))
test2 %>% pull(winnings) %>% sum
test2 %>% summarise(bet = sum(bet), winnings = sum(winnings))
test2 <- test %>%
filter(ROI > 3 & Date >= "2017-01-01") %>%
select(1:4, Date, odds, ROI) %>%
mutate(bet = 10,  winnings = ifelse(Result %in% c("NC", "draw"), 0, ifelse(odds>0,ifelse(Result=="win", odds*bet/100, -bet),
ifelse(Result=="win", -100/odds * bet, -bet))) %>%
round(2))
View(test2)
write.csv(test, "check.csv")
test <- filtfightsOdds %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-2, 1),", ", round(Age1-Age2+2, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
datCheck = paste0("Date < ", "'",Date,"'"),
ROI = NA,
count = NA
)
for (i in 1:nrow(test)) {
data <- filtData %>%
filter(eval_tidy(parse_expr(paste(test[i, 57:60] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result=="win"),
count = n(),
winPer = paste0(round(wins/count * 100,2),"%"),
bet = mean(bet),
ROI = round(sum(winnings)/(bet*n())*100, 2))
test$ROI[i] <- data %>% pull(ROI)
test$count[i] <- data %>% pull(count)
print(i)
}
test <- test %>%
mutate(bet = 10,  winnings = ifelse(Result %in% c("NC", "draw"), 0, ifelse(odds>0,ifelse(Result=="win", odds*bet/100, -bet),
ifelse(Result=="win", -100/odds * bet, -bet))) %>%
round(2))
write.csv(test, "check.csv")
=======
mutate(fighter1Name = gsub("(.*)(-\\d*$)", "\\1", Link1) %>% gsub("-", "", .) %>% tolower(),
fighter2Name = gsub("(.*)(-\\d*$)", "\\1", Link2) %>% gsub("-", "", .) %>% tolower())
Sherdog_to_BFO <- tibble(Sherdog = NA %>% as.character,
BFO = pastOdds %>% pull(fighter) %>% unique)
# 1st round of matching by fighter name (lower case, no spaces)
filtfightsOdds <- tibble()
for (i in 0:2) {
pastOdds <- pastOdds %>%
mutate(Date2 = Date - i + 1)
filtfightsOdds <- inner_join(filtfights, pastOdds,
by = c("fighter1Name" = "fighterLink1s", "fighter2Name" = "fighterLink2s", "Date" = "Date2")) %>%
select(colnames(filtfights), 'odds', 'rownum', 'fighter', 'opponent') %>%
rename(BFO1 = fighter, BFO2 = opponent) %>%
rbind(filtfightsOdds)
}
# Create Sher to BFO link table
Sherdog_to_BFO <- left_join(Sherdog_to_BFO,
filtfightsOdds %>%
select(Link1, BFO1) %>%
rename(Sherdog = Link1, BFO = BFO1) %>%
unique(),
by = "BFO") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, BFO)  %>%
mutate(Sherdog = ifelse(BFO=="Cm-Punk-6210", "Phil-Brooks-184933", Sherdog),
Sherdog = ifelse(BFO=="Kimbo-Slice-88", "Kevin-Ferguson-22388", Sherdog)) %>%
rbind(c("Kai-KaraFrance-73692","Kai-Kara-France-8800"))
filtfightsNotMatched <- anti_join(filtfights, filtfightsOdds, by = "match_id")
pastOddsNotMatched <- anti_join(pastOdds, filtfightsOdds, by = "rownum")
# 2nd round of matching using stringdist logic
filtfightsOdds2 <- as.tibble()
for (i in 0:2) {
pastOddsNotMatched <- pastOddsNotMatched %>%
mutate(Date2 = Date - i + 1)
filtfightsOdds2 <- inner_join(filtfightsNotMatched, pastOddsNotMatched,
by = c("fighter1Name" = "fighterLink1s", "Date" = "Date2")) %>%
select(colnames(filtfights), 'fighterLink2s', 'odds', 'rownum', 'fighter', 'opponent') %>%
full_join(
inner_join(filtfightsNotMatched, pastOddsNotMatched,
by = c("fighter2Name" = "fighterLink2s", "Date" = "Date2")) %>%
select(colnames(filtfights), 'fighterLink1s', 'odds', 'rownum', 'fighter', 'opponent')) %>%
rbind(filtfightsOdds2)
}
filtfightsOdds <- filtfightsOdds2 %>%
filter(stringdist(fighter2Name, fighterLink2s, method = 'qgram') < 8 |
stringdist(fighter1Name, fighterLink1s, method = 'qgram') < 8) %>%
rename(BFO1 = fighter, BFO2 = opponent) %>%
select(-fighterLink1s, -fighterLink2s) %>%
rbind(filtfightsOdds)
Sherdog_to_BFO <- left_join(Sherdog_to_BFO,
filtfightsOdds %>%
select(Link1, BFO1) %>%
rename(Sherdog = Link1, BFO = BFO1) %>%
unique(),
by = "BFO") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, BFO) %>%
unique()
filtfightsNotMatched <- anti_join(filtfights, filtfightsOdds, by = "match_id")
pastOddsNotMatched <- anti_join(pastOdds, filtfightsOdds, by = "rownum")
rm(filtfightsOdds2)
# 3rd Round of Matching using the partial Sherdog_to_BFO table
filtfights2 <- as.tibble()
filtfightsOdds2 <- as.tibble()
for (i in 0:2) {
pastOddsNotMatched <- pastOddsNotMatched %>%
mutate(Date2 = Date - i + 1)
filtfights2 <- left_join(filtfightsNotMatched, Sherdog_to_BFO, by= c("Link1" = "Sherdog")) %>%
rename("BFO1" = "BFO") %>%
merge((left_join(filtfightsNotMatched, Sherdog_to_BFO, by= c("Link2" = "Sherdog")) %>%
rename("BFO2" = "BFO"))) %>%
rbind(filtfights2) %>%
arrange(match_id) %>%
distinct()
filtfightsOdds2a <- inner_join(filtfights2, pastOddsNotMatched,
by = c("BFO1" = "fighter","Date" = "Date2")) %>%
select(colnames(filtfights2), 'odds', 'rownum', 'BFO1', 'BFO2')
filtfightsOdds2b <- inner_join(filtfights2, pastOddsNotMatched,
by = c("BFO2" = "opponent","Date" = "Date2")) %>%
select(colnames(filtfights2), 'odds', 'rownum', 'BFO1', 'BFO2')
filtfightsOdds2 <- rbind(filtfightsOdds2a, filtfightsOdds2b, filtfightsOdds2)
rm(filtfightsOdds2a, filtfightsOdds2b)
}
filtfightsOdds <- filtfightsOdds2 %>%
filter(!is.na(BFO1) & !is.na(BFO2)) %>%
group_by(Link1) %>% mutate(BFO1 =  first(BFO1)) %>%
group_by(Link2) %>% mutate(BFO2 = first(BFO2)) %>%
ungroup() %>%
rbind(filtfightsOdds) %>%
unique()
Sherdog_to_BFO <- left_join(Sherdog_to_BFO,
filtfightsOdds %>%
select(Link1, BFO1) %>%
rename(Sherdog = Link1, BFO = BFO1) %>%
unique(),
by = "BFO") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, BFO) %>%
unique()
filtfightsNotMatched <- anti_join(filtfights, filtfightsOdds, by = "match_id")
pastOddsNotMatched <- anti_join(pastOdds, filtfightsOdds, by = "rownum")
rm(filtfightsOdds2, filtfights2)
# These are BFO links that are associated with 2 Sherdog pages (mistakes)
mistakes <- Sherdog_to_BFO %>%
group_by(BFO) %>%
summarise(num = n()) %>%
filter(num>1) %>%
pull(BFO)
mistakes
View(Sherdog_to_BFO)
View(pastOdds)
View(pastOdds)
View(pastOdds)
View(pastOdds)
pastOdds <- readRDS("./scripts/7-scrape-odds/data/pastOdds.RDS")
filtfights <- readRDS(file = "./scripts/5-metrics/data/fightMetricsEvent.rds") %>%
filter(Date > "2007-06-01")
pastOdds <- pastOdds %>%
mutate(odds = coalesce(`5Dimes`, Bovada, `WilliamH`, SportBet, Pinnacle)) %>%
select(1:5, odds)
# Events with duplicate links
dupedEvents <- pastOdds %>%
group_by(eventName, eventLink, Date) %>%
summarise(num = n()) %>%
group_by(eventName, Date) %>%
summarise(num = n()) %>%
filter(num > 1) %>%
pull(eventName)
# Find the link that is incorrect
wrongEvents <- c()
for (i in 1:length(dupedEvents)) {
wrongEvents[i] <- sapply(pastOdds %>%
filter(eventName == dupedEvents[i]) %>%
pull(eventLink) %>%
unique(), function(x) stringdist(dupedEvents[i], x)) %>%
which.max() %>%
names()
}
# delete
pastOdds <- pastOdds %>%
filter(!(eventLink %in% wrongEvents))
rm(wrongEvents, dupedEvents, i)
# Fix a few fighter's names, create stripped version of name
pastOdds <- pastOdds %>%
mutate(fighter = ifelse(fighter == "Jacob-Volkman-1246", "Jacob-Volkmann-3471", fighter),
opponent = ifelse(opponent == "Jacob-Volkman-1246", "Jacob-Volkmann-3471", opponent),
fighter = ifelse(fighter == "Luigi-Vandramini-8636", "Luigi-Vendramini-8636", fighter),
opponent = ifelse(opponent == "Luigi-Vandramini-8636", "Luigi-Vendramini-8636", opponent),
fighter = ifelse(fighter == "Elizeu-Zaleski-5594", "Elizeu-Zaleski-Dos-Santos-6667", fighter),
opponent = ifelse(opponent == "Elizeu-Zaleski-5594", "Elizeu-Zaleski-Dos-Santos-6667", opponent),
fighter = ifelse(fighter == "Dong-Hyun-Kim-612" & opponent == "Thibault-Gouti-5531", "Dong-Hyun-Kim-6915", fighter),
opponent = ifelse(opponent == "Dong-Hyun-Kim-612" & fighter == "Thibault-Gouti-5531", "Dong-Hyun-Kim-6915", opponent),
fighter = ifelse(fighter == "Dong-Hyun-Kim-612" & opponent == "Devonte-Smith-8473", "Dong-Hyun-Kim-6915", fighter),
opponent = ifelse(opponent == "Dong-Hyun-Kim-612" & fighter == "Devonte-Smith-8473", "Dong-Hyun-Kim-6915", opponent),
fighter = ifelse(fighter == "Dong-Hyun-Kim-612" & opponent == "Damien-Brown-4589", "Dong-Hyun-Kim-6915", fighter),
opponent = ifelse(opponent == "Dong-Hyun-Kim-612" & fighter == "Damien-Brown-4589", "Dong-Hyun-Kim-6915", opponent),
fighter = ifelse(fighter == "Thiago-Santos-2526" & grepl("Bellator", eventName), "Thiago-Santos-25089", fighter),
opponent = ifelse(opponent == "Thiago-Santos-2526" & grepl("Bellator", eventName), "Thiago-Santos-25089", opponent),
odds = ifelse(fighter == "Jake-Hager-8790" & opponent == "J-W-Kiser-8788", -680, odds),
odds = ifelse(opponent == "Jake-Hager-8790" & fighter == "J-W-Kiser-8788", 515, odds),
fighterLink1s = gsub("(.*)(-\\d*$)", "\\1", fighter) %>% gsub("-", "", .) %>% tolower(),
fighterLink2s = gsub("(.*)(-\\d*$)", "\\1", opponent) %>% gsub("-", "", .) %>% tolower(),
rownum = ceiling(row_number()/2),
eventName = gsub(": ", " - ", eventName)) %>%
filter(!(fighter %in% c("Al-Iaquinta-3221", "Paul-Felder-5116") & opponent %in% c("Al-Iaquinta-3221", "Paul-Felder-5116")) &
!(fighter %in% c("John-Howard-692", "Shamil-Gamzatov-6071") & opponent %in% c("John-Howard-692", "Shamil-Gamzatov-6071")) &
!(fighter %in% c("Bekbulat-Magomedov-6022", "Carl-Deaton-5200") & opponent %in% c("Bekbulat-Magomedov-6022", "Carl-Deaton-5200")) &
!(fighter %in% c("Darrick-Minner-4482", "Timur-Valiev-4975") & opponent %in% c("Darrick-Minner-4482", "Timur-Valiev-4975")) &
!is.na(odds) & odds > -5000)
filtfights <- filtfights %>%
mutate(fighter1Name = gsub("(.*)(-\\d*$)", "\\1", Link1) %>% gsub("-", "", .) %>% tolower(),
fighter2Name = gsub("(.*)(-\\d*$)", "\\1", Link2) %>% gsub("-", "", .) %>% tolower())
Sherdog_to_BFO <- tibble(Sherdog = NA %>% as.character,
BFO = pastOdds %>% pull(fighter) %>% unique)
# 1st round of matching by fighter name (lower case, no spaces)
filtfightsOdds <- tibble()
for (i in 0:2) {
pastOdds <- pastOdds %>%
mutate(Date2 = Date - i + 1)
filtfightsOdds <- inner_join(filtfights, pastOdds,
by = c("fighter1Name" = "fighterLink1s", "fighter2Name" = "fighterLink2s", "Date" = "Date2")) %>%
select(colnames(filtfights), 'odds', 'rownum', 'fighter', 'opponent') %>%
rename(BFO1 = fighter, BFO2 = opponent) %>%
rbind(filtfightsOdds)
}
# Create Sher to BFO link table
Sherdog_to_BFO <- left_join(Sherdog_to_BFO,
filtfightsOdds %>%
select(Link1, BFO1) %>%
rename(Sherdog = Link1, BFO = BFO1) %>%
unique(),
by = "BFO") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, BFO)  %>%
mutate(Sherdog = ifelse(BFO=="Cm-Punk-6210", "Phil-Brooks-184933", Sherdog),
Sherdog = ifelse(BFO=="Kimbo-Slice-88", "Kevin-Ferguson-22388", Sherdog)) %>%
rbind(c("Kai-KaraFrance-73692","Kai-Kara-France-8800"))
filtfightsNotMatched <- anti_join(filtfights, filtfightsOdds, by = "match_id")
pastOddsNotMatched <- anti_join(pastOdds, filtfightsOdds, by = "rownum")
# 2nd round of matching using stringdist logic
filtfightsOdds2 <- as.tibble()
for (i in 0:2) {
pastOddsNotMatched <- pastOddsNotMatched %>%
mutate(Date2 = Date - i + 1)
filtfightsOdds2 <- inner_join(filtfightsNotMatched, pastOddsNotMatched,
by = c("fighter1Name" = "fighterLink1s", "Date" = "Date2")) %>%
select(colnames(filtfights), 'fighterLink2s', 'odds', 'rownum', 'fighter', 'opponent') %>%
full_join(
inner_join(filtfightsNotMatched, pastOddsNotMatched,
by = c("fighter2Name" = "fighterLink2s", "Date" = "Date2")) %>%
select(colnames(filtfights), 'fighterLink1s', 'odds', 'rownum', 'fighter', 'opponent')) %>%
rbind(filtfightsOdds2)
}
filtfightsOdds <- filtfightsOdds2 %>%
filter(stringdist(fighter2Name, fighterLink2s, method = 'qgram') < 8 |
stringdist(fighter1Name, fighterLink1s, method = 'qgram') < 8) %>%
rename(BFO1 = fighter, BFO2 = opponent) %>%
select(-fighterLink1s, -fighterLink2s) %>%
rbind(filtfightsOdds)
Sherdog_to_BFO <- left_join(Sherdog_to_BFO,
filtfightsOdds %>%
select(Link1, BFO1) %>%
rename(Sherdog = Link1, BFO = BFO1) %>%
unique(),
by = "BFO") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, BFO) %>%
unique()
filtfightsNotMatched <- anti_join(filtfights, filtfightsOdds, by = "match_id")
pastOddsNotMatched <- anti_join(pastOdds, filtfightsOdds, by = "rownum")
rm(filtfightsOdds2)
# 3rd Round of Matching using the partial Sherdog_to_BFO table
filtfights2 <- as.tibble()
filtfightsOdds2 <- as.tibble()
for (i in 0:2) {
pastOddsNotMatched <- pastOddsNotMatched %>%
mutate(Date2 = Date - i + 1)
filtfights2 <- left_join(filtfightsNotMatched, Sherdog_to_BFO, by= c("Link1" = "Sherdog")) %>%
rename("BFO1" = "BFO") %>%
merge((left_join(filtfightsNotMatched, Sherdog_to_BFO, by= c("Link2" = "Sherdog")) %>%
rename("BFO2" = "BFO"))) %>%
rbind(filtfights2) %>%
arrange(match_id) %>%
distinct()
filtfightsOdds2a <- inner_join(filtfights2, pastOddsNotMatched,
by = c("BFO1" = "fighter","Date" = "Date2")) %>%
select(colnames(filtfights2), 'odds', 'rownum', 'BFO1', 'BFO2')
filtfightsOdds2b <- inner_join(filtfights2, pastOddsNotMatched,
by = c("BFO2" = "opponent","Date" = "Date2")) %>%
select(colnames(filtfights2), 'odds', 'rownum', 'BFO1', 'BFO2')
filtfightsOdds2 <- rbind(filtfightsOdds2a, filtfightsOdds2b, filtfightsOdds2)
rm(filtfightsOdds2a, filtfightsOdds2b)
}
filtfightsOdds <- filtfightsOdds2 %>%
filter(!is.na(BFO1) & !is.na(BFO2)) %>%
group_by(Link1) %>% mutate(BFO1 =  first(BFO1)) %>%
group_by(Link2) %>% mutate(BFO2 = first(BFO2)) %>%
ungroup() %>%
rbind(filtfightsOdds) %>%
unique()
Sherdog_to_BFO <- left_join(Sherdog_to_BFO,
filtfightsOdds %>%
select(Link1, BFO1) %>%
rename(Sherdog = Link1, BFO = BFO1) %>%
unique(),
by = "BFO") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, BFO) %>%
unique()
filtfightsNotMatched <- anti_join(filtfights, filtfightsOdds, by = "match_id")
pastOddsNotMatched <- anti_join(pastOdds, filtfightsOdds, by = "rownum")
rm(filtfightsOdds2, filtfights2)
# These are BFO links that are associated with 2 Sherdog pages (mistakes)
mistakes <- Sherdog_to_BFO %>%
group_by(BFO) %>%
summarise(num = n()) %>%
filter(num>1) %>%
pull(BFO)
mistakes
source('./scripts/9-various-tables/Current Stats.R', echo = TRUE)
source('./scripts/9-various-tables/Add Gender.R', echo = TRUE)
source('./scripts/8-append-odds/SherdogToBFO.R', echo=TRUE)
source('./scripts/9-various-tables/Current Stats.R', echo = TRUE)
source('./scripts/9-various-tables/Add Gender.R', echo = TRUE)
source('./scripts/10-future-fights/futureFights.R', echo = TRUE)
#source('./scripts/6-model/model.R', echo=TRUE)
source('./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
source('./scripts/7-scrape-odds/updateOdds.R', echo=TRUE)
source('./scripts/8-append-odds/SherdogToBFO.R', echo=TRUE)
source('./scripts/9-various-tables/Current Stats.R', echo = TRUE)
source('./scripts/9-various-tables/Add Gender.R', echo = TRUE)
source('./scripts/10-future-fights/futureFights.R', echo = TRUE)
runApp('Shiny App/MatchPredictor')
library(shiny)
library(shinyjs)
library(tidyverse)
library(DT)
# read datasets
futureFights <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/futureFights.RDS")
fightMetricsEventOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/fightMetricsEventOdds.rds") %>%
mutate(Date = as.character(Date),
r1b = as.integer(r1b),
r2b = as.integer(r2b),
odds = as.integer(odds)) %>%
arrange(desc(match_id))
filtfightsOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/filtfightsOdds.rds")
# extra functions
with_plus <- function(x, ...) {
if (x > 0) {
sprintf(fmt = "+%s", format(x, ...))
} else {
x
}
}
line_to_per <- function(x) {
if (x < 0) {
return(-x/((-x + 100)))
} else {
return(100/(x+100))
}
}
odds_to_return <- function(x, bet=10) {
if (x < 0) {
return(bet/-x*100)
} else {
return(x*bet/100)
}
}
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
source('./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
source('./scripts/7-scrape-odds/updateOdds.R', echo=TRUE)
source('./scripts/8-append-odds/SherdogToBFO.R', echo=TRUE)
source('./scripts/9-various-tables/Current Stats.R', echo = TRUE)
source('./scripts/9-various-tables/Add Gender.R', echo = TRUE)
source('./scripts/10-future-fights/futureFights.R', echo = TRUE)
library(shiny)
library(shinyjs)
library(tidyverse)
library(DT)
# read datasets
futureFights <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/futureFights.RDS")
fightMetricsEventOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/fightMetricsEventOdds.rds") %>%
mutate(Date = as.character(Date),
r1b = as.integer(r1b),
r2b = as.integer(r2b),
odds = as.integer(odds)) %>%
arrange(desc(match_id))
filtfightsOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/filtfightsOdds.rds")
# extra functions
with_plus <- function(x, ...) {
if (x > 0) {
sprintf(fmt = "+%s", format(x, ...))
} else {
x
}
}
line_to_per <- function(x) {
if (x < 0) {
return(-x/((-x + 100)))
} else {
return(100/(x+100))
}
}
odds_to_return <- function(x, bet=10) {
if (x < 0) {
return(bet/-x*100)
} else {
return(x*bet/100)
}
}
runApp('Shiny App/MatchPredictor')
View(futureFights)
pastOdds <- readRDS("./scripts/7-scrape-odds/data/pastOdds.RDS")
filtfights <- readRDS(file = "./scripts/5-metrics/data/fightMetricsEvent.rds") %>%
filter(Date > "2007-06-01")
pastOdds <- pastOdds %>%
mutate(odds = coalesce(`5Dimes`, Bovada, `WilliamH`, SportBet, Pinnacle)) %>%
select(1:5, odds)
# Events with duplicate links
dupedEvents <- pastOdds %>%
group_by(eventName, eventLink, Date) %>%
summarise(num = n()) %>%
group_by(eventName, Date) %>%
summarise(num = n()) %>%
filter(num > 1) %>%
pull(eventName)
# Find the link that is incorrect
wrongEvents <- c()
for (i in 1:length(dupedEvents)) {
wrongEvents[i] <- sapply(pastOdds %>%
filter(eventName == dupedEvents[i]) %>%
pull(eventLink) %>%
unique(), function(x) stringdist(dupedEvents[i], x)) %>%
which.max() %>%
names()
}
# delete
pastOdds <- pastOdds %>%
filter(!(eventLink %in% wrongEvents))
rm(wrongEvents, dupedEvents, i)
# Fix a few fighter's names, create stripped version of name
pastOdds <- pastOdds %>%
mutate(fighter = ifelse(fighter == "Jacob-Volkman-1246", "Jacob-Volkmann-3471", fighter),
opponent = ifelse(opponent == "Jacob-Volkman-1246", "Jacob-Volkmann-3471", opponent),
fighter = ifelse(fighter == "Luigi-Vandramini-8636", "Luigi-Vendramini-8636", fighter),
opponent = ifelse(opponent == "Luigi-Vandramini-8636", "Luigi-Vendramini-8636", opponent),
fighter = ifelse(fighter == "Elizeu-Zaleski-5594", "Elizeu-Zaleski-Dos-Santos-6667", fighter),
opponent = ifelse(opponent == "Elizeu-Zaleski-5594", "Elizeu-Zaleski-Dos-Santos-6667", opponent),
fighter = ifelse(fighter == "Dong-Hyun-Kim-612" & opponent == "Thibault-Gouti-5531", "Dong-Hyun-Kim-6915", fighter),
opponent = ifelse(opponent == "Dong-Hyun-Kim-612" & fighter == "Thibault-Gouti-5531", "Dong-Hyun-Kim-6915", opponent),
fighter = ifelse(fighter == "Dong-Hyun-Kim-612" & opponent == "Devonte-Smith-8473", "Dong-Hyun-Kim-6915", fighter),
opponent = ifelse(opponent == "Dong-Hyun-Kim-612" & fighter == "Devonte-Smith-8473", "Dong-Hyun-Kim-6915", opponent),
fighter = ifelse(fighter == "Dong-Hyun-Kim-612" & opponent == "Damien-Brown-4589", "Dong-Hyun-Kim-6915", fighter),
opponent = ifelse(opponent == "Dong-Hyun-Kim-612" & fighter == "Damien-Brown-4589", "Dong-Hyun-Kim-6915", opponent),
fighter = ifelse(fighter == "Thiago-Santos-2526" & grepl("Bellator", eventName), "Thiago-Santos-25089", fighter),
opponent = ifelse(opponent == "Thiago-Santos-2526" & grepl("Bellator", eventName), "Thiago-Santos-25089", opponent),
odds = ifelse(fighter == "Jake-Hager-8790" & opponent == "J-W-Kiser-8788", -680, odds),
odds = ifelse(opponent == "Jake-Hager-8790" & fighter == "J-W-Kiser-8788", 515, odds),
fighterLink1s = gsub("(.*)(-\\d*$)", "\\1", fighter) %>% gsub("-", "", .) %>% tolower(),
fighterLink2s = gsub("(.*)(-\\d*$)", "\\1", opponent) %>% gsub("-", "", .) %>% tolower(),
rownum = ceiling(row_number()/2),
eventName = gsub(": ", " - ", eventName)) %>%
filter(!(fighter %in% c("Al-Iaquinta-3221", "Paul-Felder-5116") & opponent %in% c("Al-Iaquinta-3221", "Paul-Felder-5116")) &
!(fighter %in% c("John-Howard-692", "Shamil-Gamzatov-6071") & opponent %in% c("John-Howard-692", "Shamil-Gamzatov-6071")) &
!(fighter %in% c("Bekbulat-Magomedov-6022", "Carl-Deaton-5200") & opponent %in% c("Bekbulat-Magomedov-6022", "Carl-Deaton-5200")) &
!(fighter %in% c("Darrick-Minner-4482", "Timur-Valiev-4975") & opponent %in% c("Darrick-Minner-4482", "Timur-Valiev-4975")) &
!is.na(odds) & odds > -5000)
filtfights <- filtfights %>%
mutate(fighter1Name = gsub("(.*)(-\\d*$)", "\\1", Link1) %>% gsub("-", "", .) %>% tolower(),
fighter2Name = gsub("(.*)(-\\d*$)", "\\1", Link2) %>% gsub("-", "", .) %>% tolower())
Sherdog_to_BFO <- tibble(Sherdog = NA %>% as.character,
BFO = pastOdds %>% pull(fighter) %>% unique)
View(Sherdog_to_BFO)
# 1st round of matching by fighter name (lower case, no spaces)
filtfightsOdds <- tibble()
for (i in 0:2) {
pastOdds <- pastOdds %>%
mutate(Date2 = Date - i + 1)
filtfightsOdds <- inner_join(filtfights, pastOdds,
by = c("fighter1Name" = "fighterLink1s", "fighter2Name" = "fighterLink2s", "Date" = "Date2")) %>%
select(colnames(filtfights), 'odds', 'rownum', 'fighter', 'opponent') %>%
rename(BFO1 = fighter, BFO2 = opponent) %>%
rbind(filtfightsOdds)
}
# Create Sher to BFO link table
Sherdog_to_BFO <- left_join(Sherdog_to_BFO,
filtfightsOdds %>%
select(Link1, BFO1) %>%
rename(Sherdog = Link1, BFO = BFO1) %>%
unique(),
by = "BFO") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, BFO)  %>%
mutate(Sherdog = ifelse(BFO=="Cm-Punk-6210", "Phil-Brooks-184933", Sherdog),
Sherdog = ifelse(BFO=="Kimbo-Slice-88", "Kevin-Ferguson-22388", Sherdog)) %>%
rbind(c("Kai-KaraFrance-73692","Kai-Kara-France-8800"))
source('~/GitHub/MMAscraper/./scripts/8-append-odds/SherdogToBFO.R', echo=TRUE)
source('./scripts/9-various-tables/Current Stats.R', echo = TRUE)
source('./scripts/9-various-tables/Add Gender.R', echo = TRUE)
source('./scripts/10-future-fights/futureFights.R', echo = TRUE)
library(shiny)
library(shinyjs)
library(tidyverse)
library(DT)
# read datasets
futureFights <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/futureFights.RDS")
fightMetricsEventOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/fightMetricsEventOdds.rds") %>%
mutate(Date = as.character(Date),
r1b = as.integer(r1b),
r2b = as.integer(r2b),
odds = as.integer(odds)) %>%
arrange(desc(match_id))
filtfightsOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/filtfightsOdds.rds")
# extra functions
with_plus <- function(x, ...) {
if (x > 0) {
sprintf(fmt = "+%s", format(x, ...))
} else {
x
}
}
line_to_per <- function(x) {
if (x < 0) {
return(-x/((-x + 100)))
} else {
return(100/(x+100))
}
}
odds_to_return <- function(x, bet=10) {
if (x < 0) {
return(bet/-x*100)
} else {
return(x*bet/100)
}
}
runApp('Shiny App/MatchPredictor')
birthdayTable <- readRDS(file = "./scripts/2-clean-data/data/birthdayTable.rds")
birthdayTable <- birthdayTable %>%
mutate(birthday = if_else(link == "Callan-Potter-105689", as.Date("1984-09-06"), birthday),
birthday = if_else(link == "Sergei-Pavlovich-184051", as.Date("1992-05-13"), birthday),
birthday = if_else(link == "Nathaniel-Wood-82395", as.Date("1993-08-05"), birthday),
birthday = if_else(link == "Cory-Sandhagen-112869", as.Date("1992-04-20"), birthday),
birthday = if_else(link == "Daniel-Teymur-163939", as.Date("1988-02-03"), birthday),
birthday = if_else(link == "Peter-Queally-81180", as.Date("1989-02-19"), birthday),
link=if_else(link=="Dong-Hyun-Kim-21673", "Dong-Hyun-Ma-21673", link)
)
saveRDS(birthdayTable, "./scripts/2-clean-data/data/birthdayTable.rds")
>>>>>>> e41af4aea927c73bd5d6c395f46baef9cbb64ac8
runApp('Shiny App/MatchPredictor')
