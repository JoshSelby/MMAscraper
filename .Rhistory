geom_line() +
geom_point(aes(col=Result)) +
scale_colour_manual(values = c("red", "yellow", "blue"))
graphFighter <- function(fighterName) {
ggplot(fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1)) %>%
mutate(Date = as.Date(Date)),
aes(x = Date, y = r1b)) +
geom_line() +
geom_point(aes(col=Result)) +
scale_colour_manual(values = c("red", "yellow", "blue"))
}
?scale_fill_manual
graphFighter("Jon Jones")
graphFighter("Francis Ngannou")
graphFighter <- function(fighterName) {
ggplot(fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1)) %>%
mutate(Date = as.Date(Date)),
aes(x = Date, y = r1b)) +
geom_line() +
geom_point(aes(col=Result)) +
scale_colour_manual(breaks = c("loss", "NC", "win"), values = c("red", "yellow", "blue"))
}
graphFighter("Francis Ngannou")
graphFighter("Jon Jones")
?scale_colour_manual
graphFighter <- function(fighterName) {
ggplot(fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1)) %>%
mutate(Date = as.Date(Date)),
aes(x = Date, y = r1b)) +
geom_line() +
geom_point(aes(col=Result)) +
scale_colour_manual(values = c("loss" = "red", "NC" = "yellow", "win" = "green"))
}
graphFighter("Jon Jones")
graphFighter("Francis Ngannou")
graphFighter <- function(fighterName) {
ggplot(fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1)) %>%
mutate(Date = as.Date(Date)),
aes(x = Date, y = r1b)) +
geom_line() +
geom_point(aes(col=Result)) +
scale_colour_manual(values = c("loss" = "red", "NC" = "yellow", "win" = "green"))
test <<- fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1))
}
graphFighter("Francis Ngannou")
View(test)
graphFighter <- function(fighterName) {
ggplot(fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1)) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b)) +
geom_line() +
geom_point(aes(col=Result)) +
scale_colour_manual(values = c("loss" = "red", "NC" = "yellow", "win" = "green"))
test <<- fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1))
}
graphFighter("Francis Ngannou")
graphFighter <- function(fighterName) {
ggplot(fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1)) %>%
mutate(Date = as.Date(Date)) %>%
arrange(desc(match_id)),
aes(x = Date, y = r1b)) +
geom_line() +
geom_point(aes(col=Result)) +
scale_colour_manual(values = c("loss" = "red", "NC" = "yellow", "win" = "green"))
test <<- fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1))
}
graphFighter("Francis Ngannou")
rm(test)
graphFighter <- function(fighterName) {
ggplot(fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1)) %>%
mutate(Date = as.Date(Date)) %>%
arrange(desc(match_id)),
aes(x = Date, y = r1b)) +
geom_line() +
geom_point(aes(col=Result)) +
scale_colour_manual(values = c("loss" = "red", "NC" = "yellow", "win" = "green"))
test <<- fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1))
}
graphFighter("Francis Ngannou")
graphFighter <- function(fighterName) {
g <- ggplot(fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1)) %>%
mutate(Date = as.Date(Date)) %>%
arrange(desc(match_id)),
aes(x = Date, y = r1b)) +
geom_line() +
geom_point(aes(col=Result)) +
scale_colour_manual(values = c("loss" = "red", "NC" = "yellow", "win" = "green"))
test <<- fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1))
return(g)
}
graphFighter("Francis Ngannou")
graphFighter <- function(fighterName) {
g <- ggplot(fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1)) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b)) +
geom_line() +
geom_point(aes(col=Result)) +
scale_colour_manual(values = c("loss" = "red", "NC" = "yellow", "win" = "green"))
test <<- fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1))
return(g)
}
graphFighter("Francis Ngannou")
graphFighter("Colby Covington")
ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% c("Colby Covington", "Francis Ngannou")) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b)) +
geom_line() +
geom_point(aes(col=Result)) +
scale_colour_manual(values = c("loss" = "red", "NC" = "yellow", "win" = "green"))
ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% c("Colby Covington", "Francis Ngannou")) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b, col = Link1)) +
geom_line() +
geom_point(aes(col=Result)) +
scale_colour_manual(values = c("loss" = "red", "NC" = "yellow", "win" = "green"))
ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% c("Colby Covington", "Francis Ngannou")) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b, col = Link1)) +
geom_line() +
geom_point(aes(col=Result))
ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% c("Colby Covington", "Francis Ngannou")) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b, col = Link1)) +
geom_line() +
geom_point()
ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% c("Colby Covington", "Francis Ngannou")) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b, col = Link1)) +
geom_line() +
geom_point()
ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% c("Colby Covington", "Francis Ngannou")) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b, col = Link1)) +
geom_line() +
geom_point()
ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% c("Colby Covington", "Francis Ngannou")) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b, col = Link1)) +
geom_line() +
geom_point()
ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% c("Colby Covington", "Francis Ngannou")) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b, col = Link1)) +
geom_line() +
geom_point()
ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% c("Colby Covington", "Francis Ngannou")) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b, col = Link1)) +
geom_line() +
geom_point()
ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% c("Colby Covington", "Francis Ngannou")) %>%
mutate(Date = as.Date(Date)) %>%
arrange(desc(match_id)),
aes(x = Date, y = r1b, col = Link1)) +
geom_line() +
geom_point()
ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% c("Colby Covington", "Francis Ngannou")) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b, col = Link1)) +
geom_line() +
geom_point()
ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% c("Colby Covington", "Francis Ngannou")) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b, col = Link1)) +
geom_line() +
geom_point() + theme(legend.position="bottom")
graphFighter <- function(fighterNames) {
g <- ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% fighterNames) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b, col = Link1)) +
geom_line() +
geom_point() + theme(legend.position="bottom")
test <<- fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1))
return(g)
}
graphFighter("Kamaru Usman", "Colby Covington", "Ben Askren", "Tyron Woodley")
graphFighter(c("Kamaru Usman", "Colby Covington", "Ben Askren", "Tyron Woodley"))
graphFighter <- function(fighterNames) {
g <- ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% fighterNames) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b, col = Link1)) +
geom_line() +
geom_point() + theme(legend.position="bottom")
test <<- fightMetricsEventOdds %>%
filter(grepl(fighterName, Fighter1))
return(g)
}
rm(graphFighter)
graphFighters <- function(fighterNames) {
g <- ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% fighterNames) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1b, col = Link1)) +
geom_line() +
geom_point() + theme(legend.position="bottom")
test <<- fightMetricsEventOdds %>%
filter(grepl(fighterNames, Fighter1))
return(g)
}
graphFighters(c("Kamaru Usman", "Colby Covington", "Ben Askren", "Tyron Woodley"))
graphFighters <- function(fighterNames) {
g <- ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% fighterNames) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1a, col = Link1)) +
geom_line() +
geom_point() + theme(legend.position="bottom")
test <<- fightMetricsEventOdds %>%
filter(grepl(fighterNames, Fighter1))
return(g)
}
graphFighters <- function(fighterNames) {
g <- ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% fighterNames) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1a, col = Link1)) +
geom_line() +
geom_point() + theme(legend.position="bottom")
test <<- fightMetricsEventOdds %>%
filter(grepl(fighterNames, Fighter1))
return(g)
}
graphFighters(c("Kamaru Usman", "Colby Covington", "Ben Askren", "Tyron Woodley"))
graphFighters <- function(fighterNames) {
g <- ggplot(fightMetricsEventOdds %>%
filter(Fighter1 %in% fighterNames) %>%
mutate(Date = as.Date(Date)) %>%
arrange(match_id),
aes(x = Date, y = r1a, col = Link1)) +
geom_line() +
geom_point() + theme(legend.position="bottom")
test <<- fightMetricsEventOdds %>%
filter(Fighter1 %in% fighterNames)
return(g)
}
graphFighters(c("Kamaru Usman", "Colby Covington", "Ben Askren", "Tyron Woodley"))
test
test %>% View
graphFighters(c("Tony Ferguson", "Khabib Nurmagomedov", "Conor McGregor"))
source('./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
source('./scripts/10-future-fights/futureFights.R', echo = TRUE)
# read datasets
futureFights <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/futureFights.RDS")
fightMetricsEventOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/fightMetricsEventOdds.rds") %>%
mutate(Date = as.character(Date),
r1b = as.integer(r1b),
r2b = as.integer(r2b),
odds = as.integer(odds)) %>%
arrange(desc(match_id))
filtfightsOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/filtfightsOdds.rds")
topFighters <- fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
arrange(desc(Date)) %>%
slice(1) %>%
select(Link1, Fighter1, r1a) %>%
arrange(desc(r1a)) %>%
head(5000)
# extra functions
with_plus <- function(x, ...) {
if (x > 0) {
return(sprintf(fmt = "+%s", format(x, ...)))
}
else {
return(x)
}
}
line_to_per <- function(x) {
return(if_else(x < 0, -x/((-x + 100)), 100/(x+100)))
}
per_to_line <- function(x) {
return(if_else(x <= 0.5, (1-x)/x * 100, x/(1-x) * -100))
}
odds_to_return <- function(x, bet=10) {
return(if_else(x < 0, bet/-x*100, x*bet/100))
}
fightMetricsEventOdds2 <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/fightMetricsEventOdds.rds") %>%
mutate(r1b = as.integer(r1b),
r2b = as.integer(r2b),
odds = as.integer(odds)) %>%
arrange(match_id)
graphFighters <- function(fighterNames) {
g <- ggplot(fightMetricsEventOdds2 %>%
filter(Fighter1 %in% fighterNames),
aes(x = Date, y = r1a, col = Link1)) +
geom_line() +
geom_point() + theme(legend.position="bottom")
test <<- fightMetricsEventOdds %>%
filter(Fighter1 %in% fighterNames)
return(g)
}
graphFighters(c("Tony Ferguson", "Khabib Nurmagomedov", "Conor McGregor"))
graphFighters(c("Junior Dos Santos", "Daniel Cormier", "Francis Ngannou", "Derrick Lewis"))
View(fightMetricsEventOdds2)
graphFighters(c("Junior dos Santos", "Daniel Cormier", "Francis Ngannou", "Derrick Lewis"))
graphFighters(c("Jon Jones", "Daniel Cormier", "Francis Ngannou", "Derrick Lewis"))
View(test)
graphFighters <- function(fighterNames) {
g <- ggplot(fightMetricsEventOdds2 %>%
filter(Fighter1 %in% fighterNames),
aes(x = Age, y = r1a, col = Link1)) +
geom_line() +
geom_point() + theme(legend.position="bottom")
test <<- fightMetricsEventOdds %>%
filter(Fighter1 %in% fighterNames)
return(g)
}
graphFighters(c("Jon Jones", "Daniel Cormier", "Francis Ngannou", "Derrick Lewis"))
graphFighters <- function(fighterNames) {
g <- ggplot(fightMetricsEventOdds2 %>%
filter(Fighter1 %in% fighterNames),
aes(x = Age1, y = r1a, col = Link1)) +
geom_line() +
geom_point() + theme(legend.position="bottom")
test <<- fightMetricsEventOdds %>%
filter(Fighter1 %in% fighterNames)
return(g)
}
graphFighters(c("Jon Jones", "Daniel Cormier", "Francis Ngannou", "Derrick Lewis"))
graphFighters(c("Jon Jones", "Johnny Walker"))
graphFighters(c("Jon Jones", "Max Holloway", "Kamaru Usman", "Khabib Nurmagomedov"))
fightMetricsEventOdds %>% filter(Age1 < 28) %>% arrange(desc(r1a))
fightMetricsEventOdds %>% filter(Age1 < 28) %>% arrange(desc(r1a)) %>% View
fightMetricsEventOdds %>% filter(Age1 < 30) %>% arrange(desc(r1a)) %>% View
graphFighters(c("Jon Jones", "Max Holloway", "Georges-St-Pierre-3500", "Khabib-Nurmagomedov-56035",
"Kyoji-Horiguchi-64413"))
fightMetricsEventOdds %>% filter(Age1 < 30) %>% arrange(desc(r1a)) %>% select(Fighter1, r1a)
fightMetricsEventOdds %>% filter(Age1 < 30) %>% arrange(desc(r1a)) %>% select(Fighter1, r1a) %>% group_by(Fighter1) %>% summarise(max(r1a))
fightMetricsEventOdds %>% filter(Age1 < 30) %>% arrange(desc(r1a)) %>% select(Fighter1, r1a) %>% group_by(Fighter1) %>% summarise(rat = max(r1a)) %>% arrange(desc(rat))
graphFighters(c("Jon Jones", "Max Holloway", "Georges St. Pierre",
"Khabib Nurmagomedov", "Kyoji Horiguchi", "Dustin Poirier"))
fightMetricsEventOdds %>% filter(Age1 < 27.5) %>% select(Fighter1, r1a) %>% group_by(Fighter1) %>% summarise(rat = max(r1a)) %>% arrange(desc(rat))
graphFighters(c("Jon Jones", "Max Holloway", "Conor McGregor",
"Robert Whittaker", "Rory MacDonald "))
graphFighters(c("Jon Jones", "Max Holloway", "Conor McGregor",
"Robert Whittaker", "Rory MacDonald"))
graphFighters(c("Renan Barao))
graphFighters(c("Renan Barao))
graphFighters(c("Renan Barao"))
graphFighters(c("Renan Barao"))
graphFighters(c("Renan Barao", "TJ Dillashaw"))
graphFighters(c("Renan Barao", "T.J. Dillashaw"))
graphFighters(c("Renan Barao", "Jose Aldo"))
graphFighters(c("Renan Barao", "Jose Aldo", "Ronda Rousey"))
graphFighters(c("Ronda Rousey", "Valentina Shevchenko"))
graphFighters(c("Ronda Rousey", "Valentina Shevchenko", "Joanna Jedrzejczyk"))
graphFighters(c("Ronda Rousey", "Valentina Shevchenko", "Joanna Jedrzejczyk", "Rose Namajunas"))
View(test)
graphFighters(c("Ronda Rousey", "Valentina Shevchenko", "Amanda Nunes", "Rose Namajunas"))
graphFighters(c("Ronda Rousey", "Valentina Shevchenko", "Amanda Nunes", "Holly Holm"))
graphFighters(c("Ronda Rousey", "Valentina Shevchenko", "Amanda Nunes", "Holly Holm", "Cristiane Justino"))
graphFighters(c("Fedor Emelianenko"))
graphFighters(c("Fedor Emelianenko", "Anderson Silva"))
graphFighters(c("Fedor Emelianenko"))
graphFighters(c("Fedor Emelianenko", "Alistair Overeem"))
graphFighters(c("Fedor Emelianenko", "Alistair Overeem", "Stipe Miocic"))
graphFighters(c("Fedor Emelianenko", "Alistair Overeem", "Stipe Miocic", "Cain Velasquez"))
graphFighters(c("Fedor Emelianenko", "Fabricio Werdum", "Stipe Miocic", "Cain Velasquez"))
graphFighters <- function(fighterNames) {
g <- ggplot(fightMetricsEventOdds2 %>%
filter(Fighter1 %in% fighterNames),
aes(x = Date, y = r1a, col = Link1)) +
geom_line() +
geom_point() + theme(legend.position="bottom")
test <<- fightMetricsEventOdds %>%
filter(Fighter1 %in% fighterNames)
return(g)
}
graphFighters(c("Fedor Emelianenko", "Fabricio Werdum", "Stipe Miocic", "Cain Velasquez"))
graphFighters(c("Fedor Emelianenko", "Fabricio Werdum", "Stipe Miocic", "Cain Velasquez", "Francis Ngannou"))
graphFighters(c("Fedor Emelianenko", "Fabricio Werdum", "Stipe Miocic", "Cain Velasquez", "Alexander Volkov"))
graphFighters(c("B.J. Penn"))
graphFighters(c("Matt Hughes", "Georges St. Pierre"))
fightMetricsEventOdds2 %>% filter(Fighter1 %in% "Anderson Silva")
fightMetricsEventOdds2 %>% filter(Fighter1 %in% "Anderson Silva") %>% group_by(Link1) %>% summarise(maxRat = max(r1a))
fightMetricsEventOdds2 %>% filter(Fighter1 %in% "Anderson Silva") %>% group_by(Link1) %>% summarise(maxRat = max(r1a)) %>% arrange(desc(maxRat))
fightMetricsEventOdds2 %>% filter(Fighter1 %in% "Anderson Silva") %>% group_by(Link1) %>% summarise(maxRat = max(r1a)) %>% arrange(desc(maxRat)) %>% slice(1)
fightMetricsEventOdds2 %>% filter(Fighter1 %in% "Anderson Silva") %>% group_by(Link1) %>% summarise(maxRat = max(r1a)) %>% arrange(desc(maxRat)) %>% slice(1) %>% pull(Link1)
fightMetricsEventOdds2 %>% filter(Fighter1 %in% c("Anderson Silva", "Alexander Volkov")) %>% group_by(Link1) %>% summarise(maxRat = max(r1a)) %>% arrange(desc(maxRat)) %>% slice(1)
fightMetricsEventOdds2 %>% filter(Fighter1 %in% c("Anderson Silva", "Alexander Volkov")) %>% group_by(Link1) %>% summarise(maxRat = max(r1a)) %>% arrange(desc(maxRat))
fightMetricsEventOdds2 %>% filter(Fighter1 %in% c("Anderson Silva", "Alexander Volkov")) %>% group_by(Link1, Fighter1) %>% summarise(maxRat = max(r1a)) %>% arrange(desc(maxRat))
fightMetricsEventOdds2 %>% filter(Fighter1 %in% c("Anderson Silva", "Alexander Volkov")) %>% group_by(Link1, Fighter1) %>% summarise(maxRat = max(r1a)) %>% arrange(desc(maxRat)) %>% slice(1)
fightMetricsEventOdds2 %>% filter(Fighter1 %in% c("Anderson Silva", "Alexander Volkov")) %>% group_by(Link1, Fighter1) %>% summarise(maxRat = max(r1a)) %>% arrange(desc(maxRat)) %>% group_by(Fighter1) %>% slice(1)
graphFighters <- function(fighterNames) {
Fighters <- fightMetricsEventOdds2 %>%
filter(Fighter1 %in% fighterNames) %>%
group_by(Link1, Fighter1) %>%
summarise(maxRat = max(r1a)) %>%
arrange(desc(maxRat)) %>%
group_by(Fighter1) %>%
slice(1) %>%
pull(Link1)
g <- ggplot(fightMetricsEventOdds2 %>%
filter(Fighter1 %in% Fighters),
aes(x = Date, y = r1a, col = Link1)) +
geom_line() +
geom_point() + theme(legend.position="bottom")
test <<- fightMetricsEventOdds %>%
filter(Fighter1 %in% fighterNames)
return(g)
}
graphFighters(c("Anderson Silva", "Alexander Volkov"))
fightMetricsEventOdds2 %>%
filter(Fighter1 %in% c("Anderson Silva", "Alexander Volkov")) %>%
group_by(Link1, Fighter1) %>%
summarise(maxRat = max(r1a)) %>%
arrange(desc(maxRat)) %>%
group_by(Fighter1) %>%
slice(1) %>%
pull(Link1)
graphFighters <- function(fighterNames) {
Fighters <- fightMetricsEventOdds2 %>%
filter(Fighter1 %in% fighterNames) %>%
group_by(Link1, Fighter1) %>%
summarise(maxRat = max(r1a)) %>%
arrange(desc(maxRat)) %>%
group_by(Fighter1) %>%
slice(1) %>%
pull(Link1)
g <- ggplot(fightMetricsEventOdds2 %>%
filter(Link1 %in% Fighters),
aes(x = Date, y = r1a, col = Link1)) +
geom_line() +
geom_point() + theme(legend.position="bottom")
test <<- fightMetricsEventOdds %>%
filter(Fighter1 %in% fighterNames)
return(g)
}
graphFighters(c("Anderson Silva", "Alexander Volkov"))
g <- ggplot(fightMetricsEventOdds2 %>%
filter(Link1 %in% Fighters),
aes(x = Date, y = r1a, col = Fighter1)) +
geom_line() +
geom_point() + theme(legend.position="bottom")
graphFighters <- function(fighterNames) {
Fighters <- fightMetricsEventOdds2 %>%
filter(Fighter1 %in% fighterNames) %>%
group_by(Link1, Fighter1) %>%
summarise(maxRat = max(r1a)) %>%
arrange(desc(maxRat)) %>%
group_by(Fighter1) %>%
slice(1) %>%
pull(Link1)
g <- ggplot(fightMetricsEventOdds2 %>%
filter(Link1 %in% Fighters),
aes(x = Date, y = r1a, col = Fighter1)) +
geom_line() +
geom_point() + theme(legend.position="bottom")
test <<- fightMetricsEventOdds %>%
filter(Fighter1 %in% fighterNames)
return(g)
}
graphFighters(c("Anderson Silva", "Alexander Volkov"))
graphFighters(c("Anderson Silva", "Jose ldo"))
graphFighters(c("Anderson Silva", "Jose Aldo"))
graphFighters(c("Matt Hughes", "B.J. Penn", "Georges St. Pierre"))
graphFighters(c("Matt Hughes", "B.J. Penn", "Georges St. Pierre", "Tyron Woodley"))
graphFighters(c("Matt Hughes", "B.J. Penn", "Georges St. Pierre",
"Tyron Woodley", "Nick Diaz"))
graphFighters(c("Matt Hughes", "Georges St. Pierre",
"Tyron Woodley", "Nick Diaz"))
graphFighters(c("Matt Hughes", "Georges St. Pierre",
"Tyron Woodley", "Rory MacDonald"))
graphFighters(c("Matt Hughes", "Georges St. Pierre",
"Tyron Woodley", "Rory MacDonald", "Kamaru Usman"))
