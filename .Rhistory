)
test %>%
filter(Date >= '2015-01-01' & count3 > 50 & Result %in% c("win", "loss")) %>%
group_by(cut(odds, breaks = c(-9999,-500,-400,-300,-200,-99,99,149,200,300,400,500,9999))) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Result %in% c("win", "loss")) %>%
group_by(cut(odds, breaks = c(-9999,-500,-400,-300,-200,-99,99,149,200,300,400,500,9999))) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Result %in% c("win", "loss")) %>%
group_by(cut(odds, breaks = c(-9999,-500,-400,-300,-200,-99,99,149,200,300,400,500,9999))) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Result %in% c("win", "loss")) %>%
group_by(cut(odds, breaks = c(-9999,-500,-400,-300,-200,-99,99,200,300,400,500,9999))) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(odds> 99 & odds < 201 & Result %in% c("win", "loss")) %>%
group_by(year(Date)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(between(odds,100,200) & Result %in% c("win", "loss")) %>%
group_by(year(Date)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Result %in% c("win", "loss")) %>%
group_by(cut(odds, breaks = c(-9998,-500,-400,-300,-200,-99,99,200,300,400,500,9998))) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Result %in% c("win", "loss")) %>%
group_by(cut(odds, breaks = c(-9000,-500,-400,-300,-200,-99,99,200,300,400,500,9000))) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Result %in% c("win", "loss")) %>%
group_by(cut(odds, breaks = c(-9000,-500,-400,-300,-200,-99,99,200,300,400,500,9000))) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>% filter(odds < -700 & Result == "loss")
test %>% filter(odds < -700 & Result == "loss") %>% View
test %>% filter(odds <= -900 & Result == "loss") %>% View
test %>%
filter(Date >= '2015-01-01' & count3 > 50 & Result %in% c("win", "loss")) %>%
group_by(
(((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count3 > 50 & Result %in% c("win", "loss") & (((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count3 > 50 & Result %in% c("win", "loss") & (((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11) %>%
group_by(Org) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count3 > 50 & Result %in% c("win", "loss") & (((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11) %>%
group_by(Org) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
) %>% View
test %>%
filter(Date >= '2015-01-01' & count3 > 50 & Result %in% c("win", "loss") & (((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11) %>%
group_by(year(Date)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count3 > 50 & Result %in% c("win", "loss") & (((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11 & Org = "UFC") %>%
group_by(year(Date)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count3 > 50 & Result %in% c("win", "loss") & (((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11) %>%
group_by(year(Date), Org == "UFC") %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count3 > 50 & Result %in% c("win", "loss") & (((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11) %>%
group_by(Org == "UFC") %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count3 > 50 & Result %in% c("win", "loss") & (((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11) %>%
group_by(year(Date)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2015-01-01' & count3 > 50 & Result %in% c("win", "loss") & (((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11) %>%
group_by(year(Date), Org == "UFC") %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2019-01-01' & count3 > 50 & Result %in% c("win", "loss") & (((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11) %>%
group_by(year(Date)) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2019-01-01' & count3 > 50 & Result %in% c("win", "loss") & (((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11) %>%
group_by(Org) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test %>%
filter(Date >= '2019-01-01' & count3 > 50 & Result %in% c("win", "loss") & (((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11) %>%
group_by(Org) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
) %>% View
test %>%
filter(Date >= '2018-01-01' & count3 > 50 & Result %in% c("win", "loss") & (((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11) %>%
group_by(Org) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
) %>% View
fightMetrics <- readRDS(file = "./scripts/5-metrics/data/fightMetrics.rds")
events <- tibble(Event = unique(fightMetrics$Event),
Org = gsub(" -.*", "", Event)) %>%
mutate(Org = ifelse(Org == "UFC", gsub(".* -", "", Event), Org),
Org = ifelse(grepl("^UFC - The Ultimate Fighter|^UFC \\d+|^UFC Fight Night|^UFC Live \\d|UFC on Fox \\d+|^UFC on Fuel TV \\d+|^UFC on FX|^UFC on ESPN", Event),
"UFC", Org),
Org = ifelse(grepl("Underground Fight Club", Event), "Underground Fight Club", Org),
Org = ifelse(grepl("Bellator Fighting Championships|Bellator MMA|^Bellator \\d{3}|Bellator New Castle", Event), "Bellator", Org),
Org = gsub(" \\d+$", "", Org),
Org = ifelse(grepl("^M-1", Event), "M-1", Org),
Org = ifelse(grepl("^Strikeforce", Event), "Strikeforce", Org),
Org = ifelse(Org == "Pride", "Pride FC", Org),
Org = ifelse(grepl("^Absolute Championship Berkut", Event), "ACB", Org),
Org = ifelse(grepl("^Fight Nights|^EFN - Fight Nights|^FNG - Fight Nights", Event), "FNG", Org),
Org = ifelse(Org == "One FC", "One Championship", Org),
Org = ifelse(grepl("Rizin", Event), "Rizin", Org),
Org = ifelse(Event == "EFN 50 - Emelianenko vs. Maldonado", "FNG", Org),
Org = ifelse(grepl("Dana White", Org), "Dana White's TNCS", Org))
events
events %>% View
events %>% group_by(Org) %>% summarise(n()) %>% View
fightMetrics <- fightMetrics %>% full_join(events)
fightMetrics <- fightMetrics %>% filter(year(Date)>=2018) %>% group_by(Org) %>% summarise(n()) %>% View
fightMetrics <- readRDS(file = "./scripts/5-metrics/data/fightMetrics.rds")
events <- tibble(Event = unique(fightMetrics$Event),
Org = gsub(" -.*", "", Event)) %>%
mutate(Org = ifelse(Org == "UFC", gsub(".* -", "", Event), Org),
Org = ifelse(grepl("^UFC - The Ultimate Fighter|^UFC \\d+|^UFC Fight Night|^UFC Live \\d|UFC on Fox \\d+|^UFC on Fuel TV \\d+|^UFC on FX|^UFC on ESPN", Event),
"UFC", Org),
Org = ifelse(grepl("Underground Fight Club", Event), "Underground Fight Club", Org),
Org = ifelse(grepl("Bellator Fighting Championships|Bellator MMA|^Bellator \\d{3}|Bellator Newcastle", Event), "Bellator", Org),
Org = gsub(" \\d+$", "", Org),
Org = ifelse(grepl("^M-1", Event), "M-1", Org),
Org = ifelse(grepl("^Strikeforce", Event), "Strikeforce", Org),
Org = ifelse(Org == "Pride", "Pride FC", Org),
Org = ifelse(grepl("^Absolute Championship Berkut", Event), "ACB", Org),
Org = ifelse(grepl("^Fight Nights|^EFN - Fight Nights|^FNG - Fight Nights", Event), "FNG", Org),
Org = ifelse(Org == "One FC", "One Championship", Org),
Org = ifelse(grepl("Rizin", Event), "Rizin", Org),
Org = ifelse(Event == "EFN 50 - Emelianenko vs. Maldonado", "FNG", Org),
Org = ifelse(grepl("Dana White", Org), "Dana White's TNCS", Org))
fightMetrics <- fightMetrics %>% filter(year(Date)>=2018) %>% group_by(Org) %>% summarise(n()) %>% View
events <- tibble(Event = unique(fightMetrics$Event),
Org = gsub(" -.*", "", Event)) %>%
mutate(Org = ifelse(Org == "UFC", gsub(".* -", "", Event), Org),
Org = ifelse(grepl("^UFC - The Ultimate Fighter|^UFC \\d+|^UFC Fight Night|^UFC Live \\d|UFC on Fox \\d+|^UFC on Fuel TV \\d+|^UFC on FX|^UFC on ESPN", Event),
"UFC", Org),
Org = ifelse(grepl("Underground Fight Club", Event), "Underground Fight Club", Org),
Org = ifelse(grepl("Bellator Fighting Championships|Bellator MMA|^Bellator \\d{3}|Bellator Newcastle", Event), "Bellator", Org),
Org = gsub(" \\d+$", "", Org),
Org = ifelse(grepl("^M-1", Event), "M-1", Org),
Org = ifelse(grepl("^Strikeforce", Event), "Strikeforce", Org),
Org = ifelse(Org == "Pride", "Pride FC", Org),
Org = ifelse(grepl("^Absolute Championship Berkut", Event), "ACB", Org),
Org = ifelse(grepl("^Fight Nights|^EFN - Fight Nights|^FNG - Fight Nights", Event), "FNG", Org),
Org = ifelse(Org == "One FC", "One Championship", Org),
Org = ifelse(grepl("Rizin", Event), "Rizin", Org),
Org = ifelse(Event == "EFN 50 - Emelianenko vs. Maldonado", "FNG", Org),
Org = ifelse(grepl("Dana White", Org), "Dana White's TNCS", Org))
fightMetrics <- fightMetrics %>% full_join(events)
fightMetrics <- fightMetrics %>% filter(year(Date)>=2018) %>% group_by(Org) %>% summarise(n()) %>% View
fightMetrics <- readRDS(file = "./scripts/5-metrics/data/fightMetrics.rds")
events <- tibble(Event = unique(fightMetrics$Event),
Org = gsub(" -.*", "", Event)) %>%
mutate(Org = ifelse(Org == "UFC", gsub(".* -", "", Event), Org),
Org = ifelse(grepl("^UFC - The Ultimate Fighter|^UFC \\d+|^UFC Fight Night|^UFC Live \\d|UFC on Fox \\d+|^UFC on Fuel TV \\d+|^UFC on FX|^UFC on ESPN", Event),
"UFC", Org),
Org = ifelse(grepl("Underground Fight Club", Event), "Underground Fight Club", Org),
Org = ifelse(grepl("Bellator Fighting Championships|Bellator MMA|^Bellator \\d{3}|Bellator Newcastle", Event), "Bellator", Org),
Org = gsub(" \\d+$", "", Org),
Org = ifelse(grepl("^M-1", Event), "M-1", Org),
Org = ifelse(grepl("^Strikeforce", Event), "Strikeforce", Org),
Org = ifelse(Org == "Pride", "Pride FC", Org),
Org = ifelse(grepl("^Absolute Championship Berkut", Event), "ACB", Org),
Org = ifelse(grepl("^Fight Nights|^EFN - Fight Nights|^FNG - Fight Nights", Event), "FNG", Org),
Org = ifelse(Org == "One FC", "One Championship", Org),
Org = ifelse(grepl("Rizin", Event), "Rizin", Org),
Org = ifelse(Event == "EFN 50 - Emelianenko vs. Maldonado", "FNG", Org),
Org = ifelse(grepl("Dana White", Org), "Dana White's TNCS", Org))
fightMetrics <- fightMetrics %>% full_join(events)
View(fightMetrics)
fightMetrics %>% filter(Org == "PFL")
fightMetrics %>% filter(Org == "PFL") %>% View
source('./scripts/5-metrics/metrics.R', echo=TRUE)
source('./scripts/5-metrics/events.R', echo=TRUE)
source('./scripts/7-scrape-odds/updateOdds.R', echo=TRUE)
source('./scripts/8-append-odds/SherdogToBFO.R', echo=TRUE)
source('./scripts/9-various-tables/Current Stats.R', echo = TRUE)
source('./scripts/9-various-tables/Add Gender.R', echo = TRUE)
source('./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
source('./scripts/10-future-fights/futureFights.R', echo = TRUE)
library(tidyverse)
library(rlang)
source('~/GitHub/MMAscraper/Shiny App/MatchPredictor/scriptsForApp.R', echo=TRUE)
filtData <- filtfightsOdds %>%
select(Link1, Link2, Result2, Method, Date, Event, odds, r1b, r2b, Age1, Age2, ratIncrease1, ratIncrease2, ratIncrease1_3, ratIncrease2_3) %>%
filter(Result2 %in% c("win", "loss")) %>%
mutate(bet = 10,
winnings = ifelse(Result2 %in% c("NC", "draw"), 0, ifelse(odds>0,ifelse(Result2=="win", odds*bet/100, -bet),
ifelse(Result2=="win", -100/odds * bet, -bet))) %>%
round(2)
) %>%
arrange(desc(Date))
test <- filtfightsOdds %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-1.5, 1),", ", round(Age1-Age2+1.5, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
dateCheck = paste0("Date < ", "'",Date,"'"),
trendCheck = paste0("between(ratIncrease1_3-ratIncrease2_3, ",round(ratIncrease1_3-ratIncrease2_3-50, 0),", ",
round(ratIncrease1_3-ratIncrease2_3+50, 0),")")
) %>%
arrange(match_id)
test %>% filter(year(Date)>=2018) %>% group_by(Org) %>% summarise(n())
test %>% filter(year(Date)>=2018) %>% group_by(Org) %>% summarise(n()/2) %>% View
test %>% filter(year(Date)>=2018) %>% group_by(Org=="UFC") %>% summarise(n()/2) %>% View
586/(586+647)
test %>% View
# rating, age diff
for (i in 1:nrow(test)) {
data <- filtData %>%
filter(eval_tidy(parse_expr(paste(test[i, 61:63] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result2=="win"),
count = n(),
winPerSimFight = ifelse(count==0, NA, wins/count),
ROI = round(sum(winnings)/(mean(bet)*n())*100, 2))
test$winPerSimFight3[i] <- data %>% pull(winPerSimFight)
test$ROI3[i] <- data %>% pull(ROI)
test$count3[i] <- data %>% pull(count)
message(i)
}
# rating, age, odds diff
for (i in 1:nrow(test)) {
data <- filtData %>%
filter(eval_tidy(parse_expr(paste(test[i, 60:63] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result2=="win"),
count = n(),
winPerSimFight = ifelse(count==0, NA, wins/count),
ROI = round(sum(winnings)/(mean(bet)*n())*100, 2))
test$winPerSimFight4[i] <- data %>% pull(winPerSimFight)
test$ROI4[i] <- data %>% pull(ROI)
test$count4[i] <- data %>% pull(count)
message(i)
}
test <- test %>%
mutate(bet = 10,  winnings = ifelse(Result %in% c("NC", "draw"), 0, ifelse(odds>0,ifelse(Result=="win", odds*bet/100, -bet),
ifelse(Result=="win", -100/odds * bet, -bet))) %>%
round(2)) %>%
ungroup()
test %>%
filter(Date >= '2015-01-01' & count3 > 50 & Result %in% c("win", "loss")) %>%
group_by(
(((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
############### Find the best future fights to bet on
filtData2 <- futureFights %>%
select(Link1, Link2, Date, Event, odds, r1b, r2b, Age1, Age2, ratIncrease1, ratIncrease2, ratIncrease1_3, ratIncrease2_3) %>%
mutate(bet = 10,
potWinnings = ifelse(odds>0, odds*bet/100, -100/odds * bet) %>%
round(2)
)
test2 <- filtData2 %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-1.5, 1),", ", round(Age1-Age2+1.5, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
trendCheck = paste0("between(ratIncrease1_3-ratIncrease2_3, ",round(ratIncrease1_3-ratIncrease2_3-50, 0),", ",
round(ratIncrease1_3-ratIncrease2_3+50, 0),")")
)
for (i in 1:nrow(test2)) {
data <- filtData %>%
filter(eval_tidy(parse_expr(paste(test2[i, 18:20] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result2=="win"),
count = n(),
winPerSimFight = ifelse(count==0, NA, wins/count),
ROI = round(sum(winnings)/(mean(bet)*n())*100, 2))
test2$winPerSimFight3[i] <- data %>% pull(winPerSimFight)
test2$ROI3[i] <- data %>% pull(ROI)
test2$count3[i] <- data %>% pull(count)
print(i)
}
for (i in 1:nrow(test2)) {
data <- filtData %>%
filter(eval_tidy(parse_expr(paste(test2[i, 17:20] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result2=="win"),
count = n(),
winPerSimFight = ifelse(count==0, NA, wins/count),
ROI = round(sum(winnings)/(mean(bet)*n())*100, 2))
test2$winPerSimFight4[i] <- data %>% pull(winPerSimFight)
test2$ROI4[i] <- data %>% pull(ROI)
test2$count4[i] <- data %>% pull(count)
print(i)
}
test2 %>%
filter((((ROI3>3 | ROI4>3) & odds>0) |(ROI3>10 & odds<0)) & ROI3 > -11,
year(Date) == 2019, count3 > 50) %>%
select(Link1, Link2, Date, Event, odds, r1b, r2b, Age1, Age2, bet, potWinnings, winper, ROI3, ROI4) %>%
View
test2 %>%
filter((((ROI3>3 | ROI4>3) & odds>0) |(ROI3>10 & odds<0)) & ROI3 > -11,
year(Date) == 2019, count3 > 50) %>%
select(Link1, Link2, Date, Event, odds, r1b, r2b, Age1, Age2, bet, potWinnings, winper, ROI3, ROI4) %>%
View
test2 %>%
filter((((ROI3>3 | ROI4>3) & odds>0) |(ROI3>10 & odds<0)) & ROI3 > -11, count3 > 50) %>%
select(Link1, Link2, Date, Event, odds, r1b, r2b, Age1, Age2, bet, potWinnings, winper, ROI3, ROI4) %>%
View
test %>%
filter(Date >= '2015-01-01' & count3 > 50 & Result %in% c("win", "loss")) %>%
group_by(
(((ROI3>=3 | ROI4>=3) & odds>0) | (ROI3>=10 & odds<0)) &
ROI3 > -11) %>%
summarise(
fights = n(),
winnings = sum(winnings),
ROI = round(sum(winnings)/sum(bet)*100,2),
winper = sum(Result=="win")/n()
)
test2 %>%
filter((((ROI3>3 | ROI4>3) & odds>0) |(ROI3>10 & odds<0)) & ROI3 > -11,
year(Date) == 2019, count3 > 50) %>%
select(Link1, Link2, Date, Event, odds, r1b, r2b, Age1, Age2, bet, potWinnings, winper, ROI3, ROI4) %>%
View
test2
test2 %>% View
names(test2)[17:20]
names(test2)[17:20]
test2 <- filtData2 %>%
rowwise() %>%
mutate(winper = line_to_per(odds),
oddsCheck = paste0("between(odds, ",per_to_line(winper+0.05) %>% round(0),", ",
per_to_line(winper-0.05) %>% round(0),")"),
ageCheck = paste0("between(Age1-Age2, ",round(Age1-Age2-1.5, 1),", ", round(Age1-Age2+1.5, 1),")"),
ratCheck = paste0("between(r1b-r2b, ",round(r1b-r2b-50, 0),", ", round(r1b-r2b+50, 0),")"),
trendCheck = paste0("between(ratIncrease1_3-ratIncrease2_3, ",round(ratIncrease1_3-ratIncrease2_3-50, 0),", ",
round(ratIncrease1_3-ratIncrease2_3+50, 0),")")
)
for (i in 1:nrow(test2)) {
data <- filtData %>%
filter(eval_tidy(parse_expr(paste(test2[i, 18:19] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result2=="win"),
count = n(),
winPerSimFight = ifelse(count==0, NA, wins/count),
ROI = round(sum(winnings)/(mean(bet)*n())*100, 2))
test2$winPerSimFight3[i] <- data %>% pull(winPerSimFight)
test2$ROI3[i] <- data %>% pull(ROI)
test2$count3[i] <- data %>% pull(count)
print(i)
}
for (i in 1:nrow(test2)) {
data <- filtData %>%
filter(eval_tidy(parse_expr(paste(test2[i, 17:19] %>% as.character, collapse=" & ")))) %>%
summarise(avgWin = sum(winnings)/n(),
wins = sum(Result2=="win"),
count = n(),
winPerSimFight = ifelse(count==0, NA, wins/count),
ROI = round(sum(winnings)/(mean(bet)*n())*100, 2))
test2$winPerSimFight4[i] <- data %>% pull(winPerSimFight)
test2$ROI4[i] <- data %>% pull(ROI)
test2$count4[i] <- data %>% pull(count)
print(i)
}
test2 %>%
filter((((ROI3>3 | ROI4>3) & odds>0) |(ROI3>10 & odds<0)) & ROI3 > -11,
year(Date) == 2019, count3 > 50) %>%
select(Link1, Link2, Date, Event, odds, r1b, r2b, Age1, Age2, bet, potWinnings, winper, ROI3, ROI4) %>%
View
runApp('Shiny App/MatchPredictor')
View(topFighters)
View(fightMetricsEventOdds)
View(topFighters)
runApp('Shiny App/MatchPredictor')
