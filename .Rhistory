source('./scripts/11-decision-scraper/decisionScraper.R', echo = TRUE)
source('./scripts/11-decision-scraper/appendDecision.R', echo = TRUE)
source('./scripts/3-records/recordAdder.R', echo=TRUE)
source('./scripts/4-ratings/add_ratings.R', echo=TRUE)
source('./scripts/5-metrics/metrics.R', echo=TRUE)
source('./scripts/5-metrics/events.R', echo=TRUE)
source('./scripts/7-scrape-odds/updateOdds.R', echo=TRUE)
source('./scripts/8-append-odds/SherdogToBFO.R', echo=TRUE)
source('./scripts/9-various-tables/Current Stats.R', echo = TRUE)
source('./scripts/9-various-tables/Add Gender.R', echo = TRUE)
source('./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
source('./scripts/10-future-fights/futureFights.R', echo = TRUE)
fightersTable <- readRDS("./scripts/9-various-tables/data/fightersTable.rds")
View(fightersTable)
fights <- readRDS("./scripts/2-clean-data/data/fights_clean.rds")
View(fights)
source('./scripts/quick-fixes.R', echo = TRUE)
source('./scripts/3-records/recordAdder.R', echo=TRUE)
source('./scripts/11-decision-scraper/decisionScraperScripts.R', echo=TRUE)
decisions <- if ("decisions.RDS" %in% list.files("./scripts/11-decision-scraper/data")) {
readRDS("./scripts/11-decision-scraper/data/decisions.RDS")
}
fightsMMAdec <- if ("fightsMMAdec.RDS" %in% list.files("./scripts/11-decision-scraper/data")) {
readRDS("./scripts/11-decision-scraper/data/fightsMMAdec.RDS")
}
if(is.null(decisions)) rm(decisions)
if(is.null(fightsMMAdec)) rm(fightsMMAdec)
years <- c(1995:year(today()))
events <- pblapply(years, eventsScraper) %>% unlist
if (exists("decisions")) {
events <- setdiff(events, decisions$eventLink %>% unique)
}
fightsMMAdec <- pblapply(events, fightsScraper) %>% unlist
decisions <- pblapply(fightsMMAdec, decisionScraper) %>%
bind_rows() %>%
rbind(if(exists("decisions")) decisions) %>%
unique
fightsMMAdec <- decisions$eventLink
saveRDS(fightsMMAdec, "./scripts/11-decision-scraper/data/fightsMMAdec.RDS")
saveRDS(decisions, "./scripts/11-decision-scraper/data/decisions.RDS")
rm(list=ls())
decisions <- readRDS("./scripts/11-decision-scraper/data/decisions.RDS") %>%
filter(rounds != 12) %>%
mutate(rownum = row_number(),
fighter1 = if_else(fighter1 == "Michael Byrnes Jr.", "Mike Byrnes", fighter1),
fighter1 = if_else(fighter1 == "Zach Micklewright", "Zachary Micklewright", fighter1),
fighter1 = if_else(fighter1 == "Thomas Diagne", "Ousmane Thomas Diagne", fighter1),
fighter1 = if_else(fighter1 == "Michel Oleksiejczuk", "Michal Oleksiejczuk", fighter1),
fighter2 = if_else(fighter2 == "Khalil Rountree Jr.", "Khalil Rountree", fighter2))
View(decisions)
fights <- readRDS("./scripts/3-records/data/fights_records.rds")
Sherdog_to_MMAdec <- tibble(Sherdog = NA %>% as.character,
MMAdec = decisions %>% pull(fighter1Link) %>% c(decisions %>% pull(fighter2Link)) %>% unique)
fights2 <- fights %>%
select(match_id, Fighter1, Result, Fighter2, Method, R, Date, Link1, Link2) %>%
filter(Method %in% c("Decision", "Draw") | Result == "NC")
fights2Dec <- tibble()
# 1st Round Join on both fighter names
for (i in 0:2) {
decisions <- decisions %>%
mutate(date2 = date - i + 1)
fights2Dec <- fights2 %>%
inner_join(decisions, by=c("Date" = "date2", "Fighter1" = "fighter1", "Fighter2" = "fighter2")) %>%
rbind(fights2Dec)
}
Sherdog_to_MMAdec <- left_join(Sherdog_to_MMAdec,
fights2Dec %>%
select(Link1, fighter1Link) %>%
rename(Sherdog = Link1, MMAdec = fighter1Link) %>%
unique(),
by = "MMAdec") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, MMAdec)
decisions <- decisions %>%
anti_join(fights2Dec, by="rownum")
fights2 <- fights2 %>%
anti_join(fights2Dec, by="match_id")
# 2nd Round Join on 1 fighter name + date
for (i in 0:2) {
decisions <- decisions %>%
mutate(date2 = date - i + 1)
fights2Dec <- inner_join(fights2, decisions, by=c("Date" = "date2", "Fighter1" = "fighter1")) %>%
select(colnames(fights2Dec)) %>%
full_join(
inner_join(fights2, decisions, by=c("Date" = "date2", "Fighter2" = "fighter2")) %>%
select(colnames(fights2Dec))
) %>%
rbind(fights2Dec)
}
Sherdog_to_MMAdec <- left_join(Sherdog_to_MMAdec,
fights2Dec %>%
select(Link1, fighter1Link) %>%
full_join(fights2Dec %>%
select(Link2, fighter2Link), by = c("Link1" = "Link2", "fighter1Link" = "fighter2Link")) %>%
unique %>%
rename(Sherdog = Link1, MMAdec = fighter1Link),
by = "MMAdec") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, MMAdec)
decisions <- decisions %>%
anti_join(fights2Dec, by = "rownum")
fights2 <- fights2 %>%
anti_join(fights2Dec, by = "match_id")
# 3rd Round flip fighters in cases of ties/NC
for (i in 0:2) {
decisions <- decisions %>%
mutate(date2 = date - i + 1)
fights2Dec <- fights2 %>%
inner_join(decisions, by=c("Date" = "date2", "Fighter1" = "fighter2", "Fighter2" = "fighter1")) %>%
rename(Fighter1 = Fighter2, Fighter2 = Fighter1, Link1 = Link2, Link2 = Link1) %>%
select(colnames(fights2Dec)) %>%
rbind(fights2Dec)
}
Sherdog_to_MMAdec <- left_join(Sherdog_to_MMAdec,
fights2Dec %>%
select(Link1, fighter1Link) %>%
rename(Sherdog = Link1, MMAdec = fighter1Link) %>%
unique(),
by = "MMAdec") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, MMAdec) %>%
unique()
decisions <- decisions %>%
anti_join(fights2Dec, by="rownum")
fights2 <- fights2 %>%
anti_join(fights2Dec, by="match_id")
# 4th Round, Use Sherdog_to_MMAdec table
fights2Dec <- decisions %>%
left_join(Sherdog_to_MMAdec, by = c("fighter1Link" = "MMAdec")) %>%
rename("Sherdog1" = "Sherdog") %>%
inner_join(decisions %>%
left_join(Sherdog_to_MMAdec, by = c("fighter2Link" = "MMAdec")) %>%
rename("Sherdog2" = "Sherdog")) %>% inner_join(fights2, by = c("Sherdog1" = "Link1", "Sherdog2" = "Link2", "date" = "Date")) %>%
inner_join(fights2) %>%
select(colnames(fights2Dec)) %>%
rbind(fights2Dec)
Sherdog_to_MMAdec <- left_join(Sherdog_to_MMAdec,
fights2Dec %>%
select(Link1, fighter1Link) %>%
rename(Sherdog = Link1, MMAdec = fighter1Link) %>%
unique(),
by = "MMAdec") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, MMAdec) %>%
unique()
decisions <- decisions %>%
anti_join(fights2Dec, by="rownum")
fights2 <- fights2 %>%
anti_join(fights2Dec, by="match_id")
# 5th Round, widen the daterange interval since some events have wrong dates
for (i in 0:30) {
decisions <- decisions %>%
mutate(date2 = date - i + 15)
fights2Dec <- fights2 %>%
inner_join(decisions, by=c("Date" = "date2", "Fighter1" = "fighter1", "Fighter2" = "fighter2")) %>%
rbind(fights2Dec)
}
Sherdog_to_MMAdec <- left_join(Sherdog_to_MMAdec,
fights2Dec %>%
select(Link1, fighter1Link) %>%
rename(Sherdog = Link1, MMAdec = fighter1Link) %>%
unique(),
by = "MMAdec") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, MMAdec) %>%
unique()
decisions <- decisions %>%
anti_join(fights2Dec, by="rownum")
fights2 <- fights2 %>%
anti_join(fights2Dec, by="match_id")
# 6th Round, Use Sherdog_to_MMAdec table and just 1 name
for (i in 0:30) {
decisions <- decisions %>%
mutate(date2 = date - i + 15)
tempTable <- decisions %>%
left_join(Sherdog_to_MMAdec, by = c("fighter1Link" = "MMAdec")) %>%
rename("Sherdog1" = "Sherdog") %>%
inner_join(decisions %>%
left_join(Sherdog_to_MMAdec, by = c("fighter2Link" = "MMAdec")) %>%
rename("Sherdog2" = "Sherdog"))
fights2Dec <- tempTable %>%
inner_join(fights2, by = c("Sherdog1" = "Link1", "date" = "Date")) %>%
full_join(tempTable %>%
inner_join(fights2, by = c("Sherdog2" = "Link2", "date" = "Date"))) %>%
mutate(Link1 = coalesce(Sherdog1, Link1),
Link2 = coalesce(Sherdog2, Link2)) %>%
select(colnames(tempTable), Link1, Link2) %>%
inner_join(fights2, by = c("Link1", "Link2", "date2" = "Date")) %>%
rename(Date = date2) %>%
select(colnames(fights2Dec)) %>%
rbind(fights2Dec)
}
Sherdog_to_MMAdec <- left_join(Sherdog_to_MMAdec,
fights2Dec %>%
select(Link1, fighter1Link) %>%
rename(Sherdog = Link1, MMAdec = fighter1Link) %>%
unique(),
by = "MMAdec") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, MMAdec) %>%
unique()
decisions <- decisions %>%
anti_join(fights2Dec, by="rownum")
fights2 <- fights2 %>%
anti_join(fights2Dec, by="match_id")
fights <- fights %>% left_join(fights2Dec) %>% select(colnames(fights), fighter1winAttr)
View(fights)
saveRDS(fights, "./scripts/11-decision-scraper/data/fights.RDS")
rm(list=ls())
source('./scripts/4-ratings/add_ratings.R', echo=TRUE)
source('./scripts/5-metrics/metrics.R', echo=TRUE)
source('./scripts/5-metrics/events.R', echo=TRUE)
source('./scripts/7-scrape-odds/updateOdds.R', echo=TRUE)
source('./scripts/8-append-odds/SherdogToBFO.R', echo=TRUE)
source('./scripts/9-various-tables/Current Stats.R', echo = TRUE)
source('./scripts/9-various-tables/Add Gender.R', echo = TRUE)
source('./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
source('./scripts/10-future-fights/futureFights.R', echo = TRUE)
fightersTable <- readRDS("./scripts/9-various-tables/data/fightersTable.rds")
View(fightersTable)
# read datasets
futureFights <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/futureFights.RDS")
fightMetricsEventOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/fightMetricsEventOdds.rds") %>%
mutate(Date = as.character(Date),
r1b = as.integer(r1b),
r2b = as.integer(r2b),
odds = as.integer(odds)) %>%
arrange(desc(match_id))
filtfightsOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/filtfightsOdds.rds")
topFighters <- fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
summarise(r1a = max(r1a)) %>%
arrange(desc(r1a)) %>%
head(5000)
# extra functions
with_plus <- function(x, ...) {
if (x > 0) {
sprintf(fmt = "+%s", format(x, ...))
} else {
x
}
}
line_to_per <- function(x) {
if (x < 0) {
return(-x/((-x + 100)))
} else {
return(100/(x+100))
}
}
per_to_line <- function(x) {
if(x <= 0.5) {
return((1-x)/x * 100)
} else {
return(x/(1-x) * -100)
}
}
odds_to_return <- function(x, bet=10) {
if (x < 0) {
return(bet/-x*100)
} else {
return(x*bet/100)
}
}
shiny::runApp('Shiny App/MatchPredictor')
library(shiny)
library(shinyjs)
library(shinysky)
library(tidyverse)
library(DT)
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
dataset2_past
dataset2_past()
dataset1_past()
any(c("draw", "NC") %in% pull(dataset2_past(), Result))
any(c("draw", "NC") %in% pull(dataset1_past(), Result))
observeEvent(dataset2_past(), {
if (any(c("draw", "NC") %in% pull(dataset2_past(), Result)))
showElement("drawNCTable2") else hideElement("drawNCTable2")
})
shiny::runApp('Shiny App/MatchPredictor')
source('./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
source('./scripts/10-future-fights/futureFights.R', echo = TRUE)
source('~/GitHub/MMAscraper/./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
fightersTable <- readRDS("./scripts/9-various-tables/data/fightersTable.rds")
fightMetricsEvent <- readRDS("./scripts/5-metrics/data/fightMetricsEvent.rds")
filtfightsOdds <- readRDS("./scripts/8-append-odds/data/filtfightsOdds.RDS")
Sherdog_to_BFO <- readRDS("./scripts/8-append-odds/data/Sherdog_to_BFO.RDS")
futureOdds <- readRDS("./scripts/7-scrape-odds/data/futureOdds.RDS")
futureFights <- futureOdds %>%
left_join(Sherdog_to_BFO, by=c("fighter" = "BFO")) %>%
left_join(Sherdog_to_BFO, by=c("opponent" = "BFO"))
availFighters <- fightersTable %>%
pull(Link)
noSherdog <- futureFights %>%
select(fighter, Sherdog.x) %>%
filter(is.na(Sherdog.x)) %>%
pull(fighter)
minitbl <- tibble()
if (length(noSherdog)!=0) {
for (i in 1:length(noSherdog)) {
minitbl <- tibble(Sherdog = availFighters, BFO = noSherdog[i]) %>%
mutate(availStrip = Sherdog %>% gsub("(.*)(-\\d*$)", "\\1", .) %>% gsub("-", "", .) %>% tolower(),
noSherstrip = BFO %>% gsub("(.*)(-\\d*$)", "\\1", .) %>% gsub("-", "", .) %>% tolower(),
dist = stringdist(availStrip, noSherstrip, method = 'qgram')) %>%
arrange(dist) %>%
filter(dist == 0) %>%
select(Sherdog, BFO) %>%
rbind(minitbl)
}
# Not a perfect match
noSherdog %>% setdiff(minitbl$BFO)
#Manually enter
Sherdog_to_BFO <- minitbl %>%
full_join(Sherdog_to_BFO) %>%
rbind(c("Marcos-Rosa-Mariano-182785", "Marcos-Rosa-8870"),
c("Raulian-Paiva-Frazao-167575", "Raulian-Paiva-8553"),
c("Geraldo-de-Freitas-Jr-107229", "Geraldo-De-Freitas-8898"),
c("Carlos-Felipe-185021", "Felipe-Colares-8897")) %>%
unique()
}
# Manually change
futureOdds <- futureOdds %>%
filter((fighter != "Alex-Gorgees-8767" & opponent != "Alex-Gorgees-8767") &
(fighter != "Ryan-Spann-3502" & opponent != "Ryan-Spann-3502"))
rm(minitbl, availFighters, i, noSherdog)
i=1
minitbl <- tibble()
if (length(noSherdog)!=0) {
for (i in 1:length(noSherdog)) {
minitbl <- tibble(Sherdog = availFighters, BFO = noSherdog[i]) %>%
mutate(availStrip = Sherdog %>% gsub("(.*)(-\\d*$)", "\\1", .) %>% gsub("-", "", .) %>% tolower(),
noSherstrip = BFO %>% gsub("(.*)(-\\d*$)", "\\1", .) %>% gsub("-", "", .) %>% tolower(),
dist = stringdist(availStrip, noSherstrip, method = 'qgram')) %>%
arrange(dist) %>%
filter(dist == 0) %>%
select(Sherdog, BFO) %>%
rbind(minitbl)
}
# Not a perfect match
noSherdog %>% setdiff(minitbl$BFO)
#Manually enter
Sherdog_to_BFO <- minitbl %>%
full_join(Sherdog_to_BFO) %>%
rbind(c("Marcos-Rosa-Mariano-182785", "Marcos-Rosa-8870"),
c("Raulian-Paiva-Frazao-167575", "Raulian-Paiva-8553"),
c("Geraldo-de-Freitas-Jr-107229", "Geraldo-De-Freitas-8898"),
c("Carlos-Felipe-185021", "Felipe-Colares-8897")) %>%
unique()
}
runApp('Shiny App/MatchPredictor')
library(shiny)
library(shinyjs)
library(shinysky)
library(tidyverse)
library(DT)
# read datasets
futureFights <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/futureFights.RDS")
fightMetricsEventOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/fightMetricsEventOdds.rds") %>%
mutate(Date = as.character(Date),
r1b = as.integer(r1b),
r2b = as.integer(r2b),
odds = as.integer(odds)) %>%
arrange(desc(match_id))
filtfightsOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/filtfightsOdds.rds")
topFighters <- fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
summarise(r1a = max(r1a)) %>%
arrange(desc(r1a)) %>%
head(5000)
# extra functions
with_plus <- function(x, ...) {
if (x > 0) {
sprintf(fmt = "+%s", format(x, ...))
} else {
x
}
}
line_to_per <- function(x) {
if (x < 0) {
return(-x/((-x + 100)))
} else {
return(100/(x+100))
}
}
per_to_line <- function(x) {
if(x <= 0.5) {
return((1-x)/x * 100)
} else {
return(x/(1-x) * -100)
}
}
odds_to_return <- function(x, bet=10) {
if (x < 0) {
return(bet/-x*100)
} else {
return(x*bet/100)
}
}
topFighters <- fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
arrange(desc(Date)) %>%
summarise(r1a = first(r1a)) %>%
arrange(desc(r1a)) %>%
head(5000)
fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
arrange(desc(Date))
fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
arrange(desc(Date)) %>%
summarise(r1a = first(r1a))
fightMetricsEventOdds %>%
arrange(desc(Date)) %>%
group_by(Link1, Fighter1) %>%
summarise(r1a = first(r1a))
fightMetricsEventOdds %>%
arrange(desc(Date)) %>%
group_by(Link1, Fighter1) %>%
summarise(r1a = max(r1a))
fightMetricsEventOdds %>% ungroup()
fightMetricsEventOdds %>%
arrange(desc(Date)) %>%
ungroup() %>%
group_by(Link1, Fighter1) %>%
summarise(r1a = max(r1a))
fightMetricsEventOdds %>%
arrange(desc(Date)) %>%
ungroup() %>%
group_by(Link1, Fighter1) %>%
slice(1)
topFighters <- fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
arrange(desc(Date)) %>%
slice(1) %>%
select(Link1, Fighter1, r1a) %>%
arrange(desc(r1a)) %>%
head(5000)
View(topFighters)
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
library(shiny)
library(shinyjs)
library(tidyverse)
library(shinysky)
# read datasets
futureFights <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/futureFights.RDS")
library(DT)
fightMetricsEventOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/fightMetricsEventOdds.rds") %>%
mutate(Date = as.character(Date),
r1b = as.integer(r1b),
r2b = as.integer(r2b),
odds = as.integer(odds)) %>%
arrange(desc(match_id))
filtfightsOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/filtfightsOdds.rds")
topFighters <- fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
arrange(desc(Date)) %>%
slice(1) %>%
select(Link1, Fighter1, r1a) %>%
arrange(desc(r1a)) %>%
head(5000)
# extra functions
with_plus <- function(x, ...) {
if (x > 0) {
sprintf(fmt = "+%s", format(x, ...))
} else {
x
}
}
line_to_per <- function(x) {
if (x < 0) {
return(-x/((-x + 100)))
} else {
return(100/(x+100))
}
}
per_to_line <- function(x) {
if(x <= 0.5) {
return((1-x)/x * 100)
} else {
return(x/(1-x) * -100)
}
}
odds_to_return <- function(x, bet=10) {
if (x < 0) {
return(bet/-x*100)
} else {
return(x*bet/100)
}
}
topFighters <- fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
arrange(desc(Date)) %>%
slice(1) %>%
mutate(Link1 == gsub("-", " ", Link1)) %>%
select(Link1, Fighter1, r1a) %>%
arrange(desc(r1a)) %>%
head(5000)
topFighters <- fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
arrange(desc(Date)) %>%
slice(1) %>%
mutate(Link1 = gsub("-", " ", Link1)) %>%
select(Link1, Fighter1, r1a) %>%
arrange(desc(r1a)) %>%
head(5000)
