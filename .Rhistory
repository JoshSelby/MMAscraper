colnames %>%
gsub(1,3,.) %>%
gsub(2,1,.) %>%
gsub(3,2,.)
fightMetrics <- full_join(fights1, fights2) %>%
arrange(match_id) %>%
as.data.table()
rm(fights1, fights2)
fightMetricsEvent <- readRDS(file = "./scripts/5-metrics/data/fightMetricsEvent.rds")
fights <- readRDS(file = "./scripts/3-records/data/fights_records.rds")
# Double the data
fights1 <- fights
fights2 <- fights %>%
mutate(Result = ifelse(Result=="win", "loss", Result))
colnames(fights2) <- fights2 %>%
colnames %>%
gsub(1,3,.) %>%
gsub(2,1,.) %>%
gsub(3,2,.)
fights <- full_join(fights1, fights2) %>%
arrange(match_id) %>%
as.data.table()
rm(fights1, fights2)
source('./scripts/5-metrics/metrics.R', echo=TRUE)
fightMetricsEvent <- readRDS(file = "./scripts/5-metrics/data/fightMetricsEvent.rds")
fights <- readRDS(file = "./scripts/3-records/data/fights_records.rds")
# Double the data
fights1 <- fights
fights2 <- fights %>%
mutate(Result = ifelse(Result=="win", "loss", Result))
colnames(fights2) <- fights2 %>%
colnames %>%
gsub(1,3,.) %>%
gsub(2,1,.) %>%
gsub(3,2,.)
fights <- full_join(fights1, fights2) %>%
arrange(match_id) %>%
as.data.table()
rm(fights1, fights2)
rm(fightMetrics)
test <- full_join(fights, fightMetricsEvent)
View(test)
test %>% filter(Fighter1 == "Daniel-Cormier") %>% View()
test %>% filter(Fighter1 == "Daniel Cormier") %>% View()
# Include NC and DQ fights in fightMetrics table
fights <- full_join(fights, fightMetricsEvent)
rm(fights1, fights2, fightMetricsEvent)
rm(test)
# Read in data
fights <- readRDS(file = "./scripts/4-ratings/data/fightsElo.rds")
# Read in data
fights <- readRDS(file = "./scripts/4-ratings/data/fightsElo.rds")
# Double the data
fights1 <- fights
fights2 <- fights %>%
mutate(Result = ifelse(Result=="win", "loss", Result))
fights <- readRDS(file = "./scripts/3-records/data/fights_records.rds")
# Read in data
fightsElo <- readRDS(file = "./scripts/4-ratings/data/fightsElo.rds")
fights <- readRDS(file = "./scripts/3-records/data/fights_records.rds")
# Read in data
fightsElo <- readRDS(file = "./scripts/4-ratings/data/fightsElo.rds")
fights <- readRDS(file = "./scripts/3-records/data/fights_records.rds")
fights <- full_join(fightsElo, fights)
library(tidyverse)
library(data.table)
library(zoo)
fights <- full_join(fightsElo, fights)
View(fights)
fights %>% filter(Fighter1 == "Daniel Cormier") %>% View()
fights <- full_join(fightsElo, fights) %>% arrange(match_id)
View(fights)
fights %>% filter(Fighter1 == "Daniel Cormier") %>% View()
fights %>% filter(is.na(r1b)) %>% View()
fights %>% filter(Fighter1 == "Daniel Cormier") %>% View()
test <- fights
test[,
':='(r1b = ifelse(is.na(r1b), lag(r1a), r1b)),
by = Link1]
class(test)
test <- test %>% as.data.table()
test[,
':='(r1b = ifelse(is.na(r1b), lag(r1a), r1b)
),
by = Link1]
test %>% filter(Fighter1 == "Daniel Cormier") %>% View()
test[,
':='(r1b = ifelse(is.na(r1b), lag(r1a), r1b),
r1a = ifelse(is.na(r1a), lag(r1a), r1a)
),
by = Link1]
test %>% filter(Fighter1 == "Daniel Cormier") %>% View()
library(tidyverse)
library(data.table)
library(zoo)
# Read in data
fightsElo <- readRDS(file = "./scripts/4-ratings/data/fightsElo.rds")
fights <- readRDS(file = "./scripts/3-records/data/fights_records.rds")
fights <- full_join(fightsElo, fights) %>% arrange(match_id)
fights[,
':='(r1b = ifelse(is.na(r1b), lag(r1a), r1b),
r1a = ifelse(is.na(r1a), lag(r1a), r1a)
),
by = Link1]
fights[,
':='(r2b = ifelse(is.na(r2b), lag(r2a), r2b),
r2a = ifelse(is.na(r2a), lag(r2a), r2a)
),
by = Link2]
# Double the data
fights1 <- fights
fights2 <- fights %>%
mutate(Result = ifelse(Result=="win", "loss", Result))
colnames(fights2) <- fights2 %>%
colnames %>%
gsub(1,3,.) %>%
gsub(2,1,.) %>%
gsub(3,2,.)
fightMetrics <- full_join(fights1, fights2) %>%
arrange(match_id) %>%
as.data.table()
rm(fights1, fights2, fightsElo)
fights %>% filter(Fighter1 == "Daniel Cormier") %>% View()
# Read in data
fightsElo <- readRDS(file = "./scripts/4-ratings/data/fightsElo.rds")
fights <- readRDS(file = "./scripts/3-records/data/fights_records.rds")
fights <- full_join(fightsElo, fights) %>% arrange(match_id)
fights[,
':='(r1b = ifelse(is.na(r1b), lag(r1a), r1b),
r1a = ifelse(is.na(r1a), lag(r1a), r1a)
),
by = Link1]
fights <- full_join(fightsElo, fights) %>%
arrange(match_id) %>%
as.data.table()
fights[,
':='(r1b = ifelse(is.na(r1b), lag(r1a), r1b),
r1a = ifelse(is.na(r1a), lag(r1a), r1a)
),
by = Link1]
fights[,
':='(r2b = ifelse(is.na(r2b), lag(r2a), r2b),
r2a = ifelse(is.na(r2a), lag(r2a), r2a)
),
by = Link2]
fights %>% filter(Fighter1 == "Daniel Cormier") %>% View()
fights[,
':='(r2b = ifelse(is.na(r2b), lag(r2a), r2b),
r2a = ifelse(is.na(r2a), lag(r2a), r2a)
),
by = Link2]
# Read in data
fightsElo <- readRDS(file = "./scripts/4-ratings/data/fightsElo.rds")
fights <- readRDS(file = "./scripts/3-records/data/fights_records.rds")
fights <- full_join(fightsElo, fights) %>%
arrange(match_id)
# Double the data
fights1 <- fights
fights2 <- fights %>%
mutate(Result = ifelse(Result=="win", "loss", Result))
colnames(fights2) <- fights2 %>%
colnames %>%
gsub(1,3,.) %>%
gsub(2,1,.) %>%
gsub(3,2,.)
fightMetrics <- full_join(fights1, fights2) %>%
arrange(match_id) %>%
as.data.table()
rm(fights1, fights2, fightsElo)
rm(fights1, fights2, fightsElo, fights)
fighMetrics %>% filter(Fighter1 == "Daniel Cormier") %>% View()
fightMetrics %>% filter(Fighter1 == "Daniel Cormier") %>% View()
library(tidyverse)
library(data.table)
library(zoo)
# Read in data
fightsElo <- readRDS(file = "./scripts/4-ratings/data/fightsElo.rds")
fights <- readRDS(file = "./scripts/3-records/data/fights_records.rds")
fights <- full_join(fightsElo, fights) %>%
arrange(match_id)
# Double the data
fights1 <- fights
fights2 <- fights %>%
mutate(Result = ifelse(Result=="win", "loss", Result))
colnames(fights2) <- fights2 %>%
colnames %>%
gsub(1,3,.) %>%
gsub(2,1,.) %>%
gsub(3,2,.)
fightMetrics <- full_join(fights1, fights2) %>%
arrange(match_id) %>%
as.data.table()
rm(fights1, fights2, fightsElo, fights)
fightMetrics[,
':='(r1b = ifelse(is.na(r1b), lag(r1a), r1b),
r1a = ifelse(is.na(r1a), lag(r1a), r1a)
),
by = Link1]
fightMetrics[,
':='(r1b = ifelse(is.na(r1b), lag(r1a), r1b),
r1a = ifelse(is.na(r1a), lag(r1a), r1a)
),
by = Link2]
fightMetrics %>% filter(Fighter1 == "Daniel Cormier") %>% View()
library(tidyverse)
library(data.table)
library(zoo)
# Read in data
fightsElo <- readRDS(file = "./scripts/4-ratings/data/fightsElo.rds")
fights <- readRDS(file = "./scripts/3-records/data/fights_records.rds")
fights <- full_join(fightsElo, fights) %>%
arrange(match_id)
# Double the data
fights1 <- fights
fights2 <- fights %>%
mutate(Result = ifelse(Result=="win", "loss", Result))
colnames(fights2) <- fights2 %>%
colnames %>%
gsub(1,3,.) %>%
gsub(2,1,.) %>%
gsub(3,2,.)
fightMetrics <- full_join(fights1, fights2) %>%
arrange(match_id) %>%
as.data.table()
rm(fights1, fights2, fightsElo, fights)
fightMetrics[,
':='(r1b = ifelse(is.na(r1b), lag(r1a), r1b),
r1a = ifelse(is.na(r1a), lag(r1a), r1a)
),
by = Link1]
fightMetrics[,
':='(r2b = ifelse(is.na(r2b), lag(r2a), r2b),
r2a = ifelse(is.na(r2a), lag(r2a), r2a)
),
by = Link2]
fightMetrics %>% filter(Fighter1 == "Daniel Cormier") %>% View()
source('~/GitHub/MMAscraper/./scripts/5-metrics/metrics.R', echo=TRUE)
source('./scripts/5-metrics/events.R', echo=TRUE)
source('./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
View(filtfights)
source('./scripts/8-append-odds/matchOdds-filtfights.R', echo=TRUE)
filtfightsOdds <- readRDS("~/GitHub/MMAscraper/scripts/8-append-odds/data/filtfightsOdds.rds")
View(filtfightsOdds)
fightMetricsEvent <- readRDS(file = "./scripts/5-metrics/data/fightMetricsEvent.rds")
fights <- readRDS(file = "./scripts/3-records/data/fights_records.rds")
rm(fights)
lastFight <- fightMetricsEvent %>%
group_by(Link1) %>%
arrange(match_id) %>%
slice(n()) %>%
ungroup
View(lastFight)
lastFight2 <- lastFight %>%
mutate(wins1 = ifelse(Result == "win", wins1 + 1, wins1),
loss1 = ifelse(Result == "loss", loss1 + 1, loss1),
draw1 = ifelse(Result == "draw", draw1 + 1, draw1),
nc1 = ifelse(Result == "NC", nc1 + 1, nc1)) %>%
select(Link1, Result, Link2, Date, r1a, Fighter1, BD1, wins1, loss1, draw1, nc1, Org) %>%
rename(Link = Link1, Last.Result = Result, Last.Opponent = Link2, Last.Date = Date, rating = r1a, Name = Fighter1,
Birthday = BD1, wins = wins1, loss = loss1, draw = draw1, NC = nc1) %>%
arrange(desc(rating))
FiveFightsAgo <- fightMetricsEvent %>%
group_by(Link1) %>%
arrange(desc(match_id)) %>%
slice(5) %>%
ungroup
View(FiveFightsAgo)
lastFiveFights <- fightMetricsEvent %>%
group_by(Link1) %>%
arrange(desc(match_id)) %>%
slice(2:5) %>%
ungroup
rm(FiveFightsAgo)
View(lastFiveFights)
shiny::runApp('Shiny App/MatchPredictor')
?dataTableOutput
?renderDataTable
runApp('Shiny App/MatchPredictor')
install.packages(devtools)
install.packages("devtools")
devtools::install_github("shinysky","analytixware")
devtools::install_github("shinysky")``
devtools::install_github("shinysky")
devtools::install_github("shinysky","analytixware")
library(devtools)
devtools::install_github("shinysky","analytixware")
devtools::install_github("shinysky","analytixware")
devtools::install_github("analytixware")
devtools::install_github("analytixware", "shinysky")
devtools::install_github("ShinySky","AnalytixWare")
install_github("ShinySky","AnalytixWare")
require(devtools)
install_github("ShinySky","AnalytixWare")
require("devtools")
library("devtools")
devtools::install_github("AnalytixWare/ShinySky")
shinysky::run.shinysky.example()
devtools::install_github("AnalytixWare/ShinySky")
Sys.getenv("R_LIBS_USER")
devtools::install_github("AnalytixWare/ShinySky")
require("devtools")
devtools::install_github("AnalytixWare/ShinySky")
install.packages('digest', repos='http://cran.us.r-project.org')
devtools::install_github("AnalytixWare/ShinySky")
devtools::install_github("AnalytixWare/ShinySky")
shinysky::
devtools::install_github("AnalytixWare/ShinySky")
install.packages("Rcpp")
devtools::install_github("AnalytixWare/ShinySky")
devtools::install_github("AnalytixWare/ShinySky")
install.packages("rlang")
devtools::install_github("AnalytixWare/ShinySky")
shinysky::run.shinysky.example()
shinysky::run.shinysky.example()
shinysky::run.shinysky.example()
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
shinysky::run.shinysky.example()
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
?textInput.typeahead
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
fightMetricsEvent <- readRDS(file = "./scripts/5-metrics/data/fightMetricsEvent.rds")
birthdayTable <- readRDS("~/GitHub/MMAscraper/scripts/2-clean-data/data/birthdayTable.rds")
View(birthdayTable)
fightMetricsEvent %>% select(Link1, Fighter1) %>% unique()
fightersTable <- full_join(birthdayTable, fightMetricsEvent %>% select(Link1, Fighter1) %>% unique())
fightersTable <- full_join(birthdayTable, fightMetricsEvent %>% select(Link1, Fighter1) %>% unique(), by = c("link" = "Link1"))
fightMetricsEvent %>% select(Link1) %>% unique()
fightersTable <- fightMetricsEvent %>%
select(Link1, Fighter1, BD1) %>%
unique()
View(fightersTable)
View(fightMetricsEvent)
lastFight <- fightMetricsEvent %>%
group_by(Link1) %>%
arrange(match_id) %>%
slice(n()) %>%
ungroup
lastFight <- lastFight %>%
mutate(wins1 = ifelse(Result == "win", wins1 + 1, wins1),
loss1 = ifelse(Result == "loss", loss1 + 1, loss1),
draw1 = ifelse(Result == "draw", draw1 + 1, draw1),
nc1 = ifelse(Result == "NC", nc1 + 1, nc1)) %>%
select(Link1, Result, Link2, Date, r1a, Fighter1, BD1, wins1, loss1, draw1, nc1, Org) %>%
rename(Link = Link1, Last.Result = Result, Last.Opponent = Link2, Last.Date = Date, rating = r1a, Name = Fighter1,
Birthday = BD1, wins = wins1, loss = loss1, draw = draw1, NC = nc1) %>%
arrange(desc(rating))
View(lastFight)
source('~/GitHub/MMAscraper/scripts/9-various-tables/Current Stats.R', echo=TRUE)
source('~/GitHub/MMAscraper/scripts/9-various-tables/Current Stats.R', echo=TRUE)
fightersTable <- readRDS("~/GitHub/MMAscraper/scripts/9-various-tables/data/fightersTable.rds")
fightersTable <- readRDS("~/GitHub/MMAscraper/scripts/9-various-tables/data/fightersTable.rds")
runApp('Shiny App/MatchPredictor')
?textInput.typeahead
shinysky::run.shinysky.example()
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
as.Date(3350)
as.Date(3350, origin = "1970-01-01")
runApp('Shiny App/MatchPredictor')
class(fightersTable)
library(data.table)
library(tidyverse)
library(data.table)
source('~/GitHub/MMAscraper/scripts/9-various-tables/Current Stats.R', echo=TRUE)
fightersTable <- readRDS("~/GitHub/MMAscraper/scripts/9-various-tables/data/fightersTable.rds")
class(fightersTable)
runApp('Shiny App/MatchPredictor')
as.Date(3432, '1970-01-01')
runApp('Shiny App/MatchPredictor')
?HTML
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
source('~/GitHub/MMAscraper/scripts/9-various-tables/Current Stats.R', echo=TRUE)
View(fightersTable)
source('~/GitHub/MMAscraper/scripts/9-various-tables/Current Stats.R', echo=TRUE)
runApp('Shiny App/MatchPredictor')
fightersTable <- readRDS("~/GitHub/MMAscraper/scripts/9-various-tables/data/fightersTable.rds")
fightMetricsEvent <- readRDS(file = "~/GitHub/MMAscraper/scripts/5-metrics/data/fightMetricsEvent.rds")
library(profvis)
runApp('Shiny App/MatchPredictor')
filtfightsOdds <- readRDS("~/GitHub/MMAscraper/scripts/8-append-odds/data/filtfightsOdds.rds")
View(filtfightsOdds)
library(tidyverse)
filtfightsOdds %>% class
filtfightsOdds %>% group_by(Link1, Link2, Date)
filtfightsOdds %>% group_by(Link1, Link2, Date) %>% summarise(n())
filtfightsOdds %>% group_by(Link1, Link2, Date) %>% summarise(num = n()) %>% arrange(desc(num))
pastOdds <- readRDS("./scripts/7-scrape-odds/data/pastOdds.RDS")
pastOdds
pastOdds %>% select(fighter) %>% unique()
View(pastOdds)
# Events with duplicate links
dupedEvents <- pastOdds %>%
group_by(eventName, eventLink, Date) %>%
summarise(num = n()) %>%
group_by(eventName, Date) %>%
summarise(num = n()) %>%
filter(num > 1) %>%
pull(eventName)
# Find the link that is incorrect
wrongEvents <- c()
for (i in 1:length(dupedEvents)) {
wrongEvents[i] <- sapply(pastOdds %>%
filter(eventName == dupedEvents[i]) %>%
pull(eventLink) %>%
unique(), function(x) stringdist(dupedEvents[i], x)) %>%
which.max() %>%
names()
}
# delete
pastOdds <- pastOdds %>%
filter(!(eventLink %in% wrongEvents))
source('~/.active-rstudio-document', echo=TRUE)
# Fix a few fighter's names, create stripped version of name
pastOdds <- pastOdds %>%
# Fix a few fighter's names, create stripped version of name
pastOdds <- pastOdds %>%
# Fix a few fighter's names, create stripped version of name
pastOdds <- pastOdds %>%
library(tidyverse)
pastOdds <- pastOdds %>%
mutate(fighter = ifelse(fighter == "Jacob-Volkman-1246", "Jacob-Volkmann-3471", fighter),
opponent = ifelse(opponent == "Jacob-Volkman-1246", "Jacob-Volkmann-3471", opponent),
fighter = ifelse(fighter == "Luigi-Vandramini-8636", "Luigi-Vendramini-8636", fighter),
opponent = ifelse(opponent == "Luigi-Vandramini-8636", "Luigi-Vendramini-8636", opponent),
fighter = ifelse(fighter == "Elizeu-Zaleski-5594", "Elizeu-Zaleski-Dos-Santos-6667", fighter),
opponent = ifelse(opponent == "Elizeu-Zaleski-5594", "Elizeu-Zaleski-Dos-Santos-6667", opponent),
fighterLink1s = gsub("(.*)(-\\d*$)", "\\1", fighter) %>% gsub("-", "", .) %>% tolower(),
fighterLink2s = gsub("(.*)(-\\d*$)", "\\1", opponent) %>% gsub("-", "", .) %>% tolower(),
rownum = row_number(),
eventName = gsub(": ", " - ", eventName)) %>%
filter(!(fighter == "Al-Iaquinta-3221" & opponent == "Paul-Felder-5116") &
!(fighter == "Paul-Felder-5116" & opponent == "Al-Iaquinta-3221") &
!(fighter == "John-Howard-692" & opponent == "Shamil-Gamzatov-6071") &
!(fighter == "Shamil-Gamzatov-6071" & opponent == "John-Howard-692"))
filtfights <- filtfights %>%
mutate(fighter1Name = gsub("(.*)(-\\d*$)", "\\1", Link1) %>% gsub("-", "", .) %>% tolower(),
fighter2Name = gsub("(.*)(-\\d*$)", "\\1", Link2) %>% gsub("-", "", .) %>% tolower())
# Begin Matching
filtfightsOdds <- tibble()
i=0
pastOdds <- pastOdds %>%
mutate(Date2 = Date - i + 1)
filtfightsOdds <- inner_join(filtfights, pastOdds, by = c("fighter1Name" = "fighterLink1s", "fighter2Name" = "fighterLink2s", "Date" = "Date2")) %>%
select(colnames(filtfights), '5Dimes', 'rownum') %>%
rbind(filtfightsOdds)
View(filtfightsOdds)
filtfightsOdds <- tibble()
for (i in 0:2) {
pastOdds <- pastOdds %>%
mutate(Date2 = Date - i + 1)
filtfightsOdds <- inner_join(filtfights, pastOdds, by = c("fighter1Name" = "fighterLink1s", "fighter2Name" = "fighterLink2s", "Date" = "Date2")) %>%
select(colnames(filtfights), '5Dimes', 'rownum', 'fighter', 'opponent') %>%
rbind(filtfightsOdds)
}
View(filtfightsOdds)
Sherdog_to_BFO <- filtfightsOdds %>%
select(Link1, fighter) %>%
rename(Sherdog = Link1, BFO = fighter)
Sherdog_to_BFO <- filtfightsOdds %>%
select(Link1, fighter) %>%
rename(Sherdog = Link1, BFO = fighter) %>%
unique()
View(Sherdog_to_BFO)
Sherdog_to_BFO %>% group_by(Sherdog) %>% summarise(n()) %>% View()
View(Sherdog_to_BFO)
Sherdog_to_BFO %>% group_by(BFO) %>% summarise(n()) %>% View()
filtfightsNotMatched <- anti_join(filtfights, filtfightsOdds, by = "match_id")
pastOddsNotMatched <- anti_join(pastOdds, filtfightsOdds, by = "rownum")
filtfightsOdds2 <- tibble()
for (i in 0:2) {
pastOddsNotMatched <- pastOddsNotMatched %>%
mutate(Date2 = Date - i + 1)
filtfightsOdds2 <- inner_join(filtfightsNotMatched, pastOddsNotMatched, by = c("fighter1Name" = "fighterLink1s", "Date" = "Date2")) %>%
select(colnames(filtfights), '5Dimes', 'rownum', 'fighter', 'opponent') %>%
rbind(filtfightsOdds2)
}
Sherdog_to_BFO2 <- filtfightsOdds2 %>%
select(Link1, fighter) %>%
rename(Sherdog = Link1, BFO = fighter) %>%
unique()
View(Sherdog_to_BFO2)
Sherdog_to_BFO <- full_join(Sherdog_to_BFO, Sherdog_to_BFO2)
View(Sherdog_to_BFO)
View(pastOdds)
source('~/GitHub/MMAscraper/scripts/7-scrape-odds/oddsScraper.R', echo=TRUE)
library(lubridate)
source('~/GitHub/MMAscraper/scripts/7-scrape-odds/oddsScraper.R', echo=TRUE)
saveRDS(odds_list, "./scripts/7-scrape-odds/data/odds_list.RDS")
odds_list <- readRDS("./scripts/7-scrape-odds/data/odds_list.RDS")
pastOdds <- tibble()
for (i in 1:length(odds_list$searched_events)) {
pastOdds <- rbind(pastOdds, eventOddsScraper(odds_list$searched_events[i]))
print(i)
}
# Scrape all fighters on bestfightodds.com. Takes about an hour.
while(length(odds_list$toSearch) > 0) {
odds_list <- bind_odds(odds_list, oddsScraper(odds_list$toSearch[1]))
}
