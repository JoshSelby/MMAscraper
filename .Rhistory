Result2 = ifelse(Link1 == "Jim-Miller-14463" & Link2 == "Pat-Healy-6246" & Date == "2013-04-27", "loss", Result2),
Result2 = ifelse(Link1 == "Alex-Caceres-41586" & Link2 == "Kyung-Ho-Kang-24067" & Date == "2013-03-03", "win", Result2),
Result2 = ifelse(Link1 == "Che-Mills-8800" & Link2 == "Matt-Riddle-34072" & Date == "2013-02-16", "loss", Result2),
Result2 = ifelse(Link1 == "Igor-Pokrajac-7621" & Link2 == "Joey-Beltran-21219" & Date == "2012-12-15", "loss", Result2),
Result2 = ifelse(Link1 == "Stanislav-Nedkov-27115" & Link2 == "Thiago-Silva-14396" & Date == "2012-11-10", "loss", Result2),
Result2 = ifelse(Link1 == "Ed-Herman-6561" & Link2 == "Jake-Shields-502" & Date == "2012-08-11", "loss", Result2),
Result2 = ifelse(Link1 == "Francisco-Rivera-11908" & Link2 == "Roland-Delorme-37351" & Date == "2012-07-21", "win", Result2),
Result2 = ifelse(Link1 == "Chris-Clements-13469" & Link2 == "Matt-Riddle-34072" & Date == "2012-07-21", "loss", Result2),
Result2 = ifelse(Link1 == "Brandon-Vera-4886" & Link2 == "Thiago-Silva-14396" & Date == "2011-01-01", "loss", Result2),
Result2 = ifelse(Link1 == "Dong-Hyun-Kim-16374" & Link2 == "Karo-Parisyan-5153" & Date == "2009-01-31", "loss", Result2),
Result2 = ifelse(Link1 == "Brandon-Vera-4886" & Link2 == "Thiago-Silva-14396" & Date == "2011-01-01", "loss", Result2)
)
}
fights2 <- fights %>%
filter(Result2 %in% c("win", "draw", "loss") & Method != "DQ") %>%
mutate(score1 = ifelse(Result2 == "win", 1, 0.5),
score1 = ifelse(Result2 == "loss", 0, score1),
score1 = ifelse(!is.na(fighter1winAttr), fighter1winAttr, score1),
score1 = ifelse(score1>1, 1, score1),
score2 = 1-score1,
Result2 = score1) %>%
select(game = match_id, player1 = Link1, score1, player2 = Link2, score2)
fights2 <- as_widecr(fights2)
elo_rate_fun2 <- function (rating1, score1, rating2, score2, K = 150, ksi = 400) {
prob_win1 <- 1/(1 + 10^((rating2 - rating1)/ksi))
game_res1 <- score1/(score1+score2)
rating_delta <- K * (game_res1 - prob_win1)
c(rating1, rating2) + rating_delta * c(1, -1)
}
# 150 was shown to be the optimal K
elo <- add_iterative_ratings(fights2, rate_fun=elo_rate_fun2, initial_ratings = 1000)
full_join(fights, elo, by = c("match_id" = "game")) %>% full_join(fights2, "match_id")
fights2 <- fights %>%
filter(Result2 %in% c("win", "draw", "loss") & Method != "DQ") %>%
mutate(score1 = ifelse(Result2 == "win", 1, 0.5),
score1 = ifelse(Result2 == "loss", 0, score1),
score1 = ifelse(!is.na(fighter1winAttr), fighter1winAttr, score1),
score1 = ifelse(score1>1, 1, score1),
score2 = 1-score1,
Result2 = score1) %>%
select(game = match_id, player1 = Link1, score1, player2 = Link2, score2)
fights3 <- as_widecr(fights2)
elo_rate_fun2 <- function (rating1, score1, rating2, score2, K = 150, ksi = 400) {
prob_win1 <- 1/(1 + 10^((rating2 - rating1)/ksi))
game_res1 <- score1/(score1+score2)
rating_delta <- K * (game_res1 - prob_win1)
c(rating1, rating2) + rating_delta * c(1, -1)
}
full_join(fights, elo, by = c("match_id" = "game")) %>% full_join(fights2, "match_id")
fights <- readRDS(file = "./scripts/11-decision-scraper/data/fights.RDS")
# Change select fights from NC to Wins/Losses
{
fights <- fights %>%
mutate(Result2 = Result,
Result2 = ifelse(Link1 == "Daniel-Cormier-52311" & Link2 == "Jon-Jones-27944" & Date == "2017-07-29", "loss", Result2),
Result2 = ifelse(Link1 == "Anderson-Silva-1356" & Link2 == "Nick-Diaz-2831" & Date == "2015-01-31", "win", Result2),
Result2 = ifelse(Link1 == "Brian-Ortega-65310" & Link2 == "Mike-de-la-Torre-17915" & Date == "2014-07-26", "win", Result2),
Result2 = ifelse(Link1 == "Khalil-Rountree-77674" & Link2 == "Michal-Oleksiejczuk-156397" & Date == "2017-12-30", "loss", Result2),
Result2 = ifelse(Link1 == "Kelvin-Gastelum-74700" & Link2 == "Vitor-Belfort-156" & Date == "2017-03-11", "win", Result2),
Result2 = ifelse(Link1 == "Adam-Milstead-60258" & Link2 == "Curtis-Blaydes-172939" & Date == "2017-02-04", "loss", Result2),
Result2 = ifelse(Link1 == "Alex-Morono-64894" & Link2 == "Niko-Price-96921" & Date == "2017-02-04", "loss", Result2),
Result2 = ifelse(Link1 == "Brock-Lesnar-17522" & Link2 == "Mark-Hunt-10668" & Date == "2016-07-09", "win", Result2),
Result2 = ifelse(Link1 == "Bubba-Bush-29111" & Link2 == "Kevin-Casey-24121" & Date == "2014-07-05", "loss", Result2),
Result2 = ifelse(Link1 == "Damon-Jackson-113767" & Link2 == "Rony-Mariano-Bezerra-38190" & Date == "2015-05-30", "loss", Result2),
Result2 = ifelse(Link1 == "Hector-Lombard-11292" & Link2 == "Joshua-Burkman-10003" & Date == "2015-01-03", "win", Result2),
Result2 = ifelse(Link1 == "Jerrod-Sanders-48156" & Link2 == "Pedro-Munhoz-52407" & Date == "2014-10-04", "loss", Result2),
Result2 = ifelse(Link1 == "Keith-Berish-46314" & Link2 == "Robert-Drysdale-67894" & Date == "2014-07-06", "loss", Result2),
Result2 = ifelse(Link1 == "Louis-Gaudinot-45230" & Link2 == "Phil-Harris-8753" & Date == "2014-03-08", "win", Result2),
Result2 = ifelse(Link1 == "Chico-Camus-42850" & Link2 == "Yaotzin-Meza-15937" & Date == "2014-01-25", "win", Result2),
Result2 = ifelse(Link1 == "Dennis-Siver-9817" & Link2 == "Manny-Gamburyan-5185" & Date == "2013-12-28", "win", Result2),
Result2 = ifelse(Link1 == "Yancy-Medeiros-27738" & Link2 == "Yves-Edwards-344" & Date == "2013-11-06", "win", Result2),
Result2 = ifelse(Link1 == "Jessica-Eye-39575" & Link2 == "Sarah-Kaufman-16524" & Date == "2013-10-19", "win", Result2),
Result2 = ifelse(Link1 == "Jim-Miller-14463" & Link2 == "Pat-Healy-6246" & Date == "2013-04-27", "loss", Result2),
Result2 = ifelse(Link1 == "Alex-Caceres-41586" & Link2 == "Kyung-Ho-Kang-24067" & Date == "2013-03-03", "win", Result2),
Result2 = ifelse(Link1 == "Che-Mills-8800" & Link2 == "Matt-Riddle-34072" & Date == "2013-02-16", "loss", Result2),
Result2 = ifelse(Link1 == "Igor-Pokrajac-7621" & Link2 == "Joey-Beltran-21219" & Date == "2012-12-15", "loss", Result2),
Result2 = ifelse(Link1 == "Stanislav-Nedkov-27115" & Link2 == "Thiago-Silva-14396" & Date == "2012-11-10", "loss", Result2),
Result2 = ifelse(Link1 == "Ed-Herman-6561" & Link2 == "Jake-Shields-502" & Date == "2012-08-11", "loss", Result2),
Result2 = ifelse(Link1 == "Francisco-Rivera-11908" & Link2 == "Roland-Delorme-37351" & Date == "2012-07-21", "win", Result2),
Result2 = ifelse(Link1 == "Chris-Clements-13469" & Link2 == "Matt-Riddle-34072" & Date == "2012-07-21", "loss", Result2),
Result2 = ifelse(Link1 == "Brandon-Vera-4886" & Link2 == "Thiago-Silva-14396" & Date == "2011-01-01", "loss", Result2),
Result2 = ifelse(Link1 == "Dong-Hyun-Kim-16374" & Link2 == "Karo-Parisyan-5153" & Date == "2009-01-31", "loss", Result2),
Result2 = ifelse(Link1 == "Brandon-Vera-4886" & Link2 == "Thiago-Silva-14396" & Date == "2011-01-01", "loss", Result2)
)
}
fights2 <- fights %>%
filter(Result2 %in% c("win", "draw", "loss") & Method != "DQ") %>%
mutate(score1 = ifelse(Result2 == "win", 1, 0.5),
score1 = ifelse(Result2 == "loss", 0, score1),
score1 = ifelse(!is.na(fighter1winAttr), fighter1winAttr, score1),
score1 = ifelse(score1>1, 1, score1),
score2 = 1-score1,
Result2 = score1) %>%
select(game = match_id, player1 = Link1, score1, player2 = Link2, score2)
fights2 <- as_widecr(fights2)
elo_rate_fun2 <- function (rating1, score1, rating2, score2, K = 150, ksi = 400) {
prob_win1 <- 1/(1 + 10^((rating2 - rating1)/ksi))
game_res1 <- score1/(score1+score2)
rating_delta <- K * (game_res1 - prob_win1)
c(rating1, rating2) + rating_delta * c(1, -1)
}
# 150 was shown to be the optimal K
elo <- add_iterative_ratings(fights2, rate_fun=elo_rate_fun2, initial_ratings = 1000)
full_join(fights, elo, by = c("match_id" = "game"))
full_join(fights, elo, by = c("match_id" = "game")) %>% View
fightsElo <- full_join(fights, elo, by = c("match_id" = "game")) %>%
select(match_id, Link1, Result, Link2, Method, Method_d, Event, Date,
rating1Before, rating2Before, rating1After, rating2After, score1) %>%
rename(r1b = rating1Before, r2b = rating2Before, r1a = rating1After, r2a = rating2After) %>%
mutate_at(.vars = vars(r1b:r2a),
.funs = round)
fightsEloLong <- fightsElo %>%
select(match_id, Link1, Date, r1a) %>%
full_join(fightsElo %>%
select(match_id, Link2, Date, r2a),
by = c("match_id" = "match_id", "Link1" = "Link2",
"Date" = "Date", "r1a" = "r2a")) %>%
rename(Link = Link1, rating = r1a) %>%
arrange(Date)
fightsElo <- merge(fightsElo, fights) %>%
arrange(match_id)
saveRDS(fightsElo, file = "./scripts/4-ratings/data/fightsElo.rds")
rm(list=ls())
# Read in data
fightsElo <- readRDS(file = "./scripts/4-ratings/data/fightsElo.rds")
# Double the data
fights1 <- fightsElo
fights2 <- fightsElo %>%
mutate(Result = ifelse(Result=="win", "loss", Result),
Result2 = ifelse(Result2 == "win", "loss", Result2))
View(fights1)
colnames(fights2) <- fights2 %>%
colnames %>%
gsub(1,3,.) %>%
gsub(2,1,.) %>%
gsub(3,2,.) %>%
gsub("Result1", "Result2", .)
fightMetrics <- full_join(fights1, fights2) %>%
arrange(match_id) %>%
as.tibble()
rm(fights1, fights2, fightsElo)
fightMetrics <- fightMetrics %>%
group_by(Link1) %>%
mutate(r1b = ifelse(wins1+loss1+draw1+nc1==0, 1000, r1b),
r1a = na.locf(r1a, na.rm = FALSE),
r1b = ifelse(is.na(r1b), r1a, r1b)
) %>%
ungroup()
fightMetrics <- fightMetrics %>%
group_by(Link2) %>%
mutate(r2b = ifelse(wins2+loss2+draw2+nc2==0, 1000, r2b),
r2a = na.locf(r2a, na.rm = FALSE),
r2b = ifelse(is.na(r2b), r2a, r2b)) %>%
ungroup() %>%
as.data.table()
# Create new metrics
fightMetrics[,
':='(fightLag1 = as.numeric(c(0, diff(Date))), # Days since last fight
fightLag1_5 = (Date - coalesce(shift(Date,5), first(Date))) %>% as.numeric(),
ratIncrease1 = c(0, diff(r1b)), # Rating increase since last fight
ratIncrease1_3 = r1b - coalesce(shift(r1b,3), first(r1b)), # Rating increase from 3 fights ago
oppRat1_5 = coalesce(cummean(r2b), roll_meanr(r2b, 5)) %>%
shift(), # Average rating of last 5 opponents
highestWin1_5 = coalesce(roll_maxr((Result2=="win")*r2b, 5), cummax(((Result2=="win")*r2b))) %>%
shift(), # Highest rated fighter defeated in last 5 fights
lowestLoss1_5 = coalesce(roll_minr(ifelse((Result2=="loss")*r2b == 0, 10000,(Result2=="loss")*r2b), 5),
cummin(ifelse((Result2=="loss")*r2b == 0, 10000,(Result2=="loss")*r2b))) %>%
shift(), # Lowest rated fighter lost to in last 5 fights
koLosses1 = cumsum(Result == "loss" & (Method=="TKO"|Method=="KO")) %>%
shift(), # number of KO losses
diff1_5 = coalesce(cummean((r1b-r2b)), roll_meanr((r1b-r2b), 5)) %>%
shift()
),
by=Link1]
fightMetrics[,
':='(fightLag2 = as.numeric(c(0, diff(Date))),
fightLag2_5 = (Date - coalesce(shift(Date,5), first(Date))) %>% as.numeric(),
ratIncrease2 = c(0, diff(r2b)),
ratIncrease2_3 = r2b - coalesce(shift(r2b,2), first(r2b)),
oppRat2_5 = coalesce(cummean(r1b), roll_meanr(r1b, 5)) %>%
shift(),
highestWin2_5 = coalesce(roll_maxr((Result2=="loss")*r1b, 5), cummax(((Result2=="loss")*r1b))) %>%
shift(),
lowestLoss2_5 = coalesce(roll_minr(ifelse((Result2=="win")*r1b == 0, 10000,(Result2=="win")*r1b), 5),
cummin(ifelse((Result2=="win")*r1b == 0, 10000,(Result2=="win")*r1b))) %>%
shift(),
koLosses2 = cumsum(Result == "win" & (Method=="TKO"|Method=="KO")) %>%
shift(),
diff2_5 = coalesce(cummean((r2b-r1b)), roll_meanr((r2b-r1b), 5)) %>%
shift()
),
by=Link2]
fightMetrics[wins1+loss1+draw1+nc1==0,
':='(fightLag1 = NA,
fightLag1_5 = NA,
ratIncrease1 = NA,
ratIncrease1_3 = NA,
koLosses1 = 0)]
fightMetrics[wins2+loss2+draw2+nc2==0,
':='(fightLag2 = NA,
fightLag2_5 = NA,
ratIncrease2 = NA,
ratIncrease2_3 = NA,
koLosses2 = 0)]
fightMetrics <- fightMetrics %>%
as.tibble() %>%
mutate(highestWin1_5 = ifelse(highestWin1_5==0, NA, highestWin1_5),
highestWin2_5 = ifelse(highestWin2_5==0, NA, highestWin2_5),
lowestLoss1_5 = ifelse(lowestLoss1_5==10000, NA, lowestLoss1_5),
lowestLoss2_5 = ifelse(lowestLoss2_5==10000, NA, lowestLoss2_5))
source('~/GitHub/MMAscraper/./scripts/5-metrics/metrics.R', echo=TRUE)
source('./scripts/5-metrics/events.R', echo=TRUE)
source('./scripts/7-scrape-odds/updateOdds.R', echo=TRUE)
source('./scripts/8-append-odds/SherdogToBFO.R', echo=TRUE)
source('./scripts/9-various-tables/Current Stats.R', echo = TRUE)
source('./scripts/9-various-tables/Add Gender.R', echo = TRUE)
source('./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
source('./scripts/10-future-fights/futureFights.R', echo = TRUE)
fightMetricsEvent <- readRDS(file = "./scripts/5-metrics/data/fightMetricsEvent.rds")
View(fightMetricsEvent)
# Read in data
fightsElo <- readRDS(file = "./scripts/4-ratings/data/fightsElo.rds")
rm(fightMetricsEvent)
# Double the data
fights1 <- fightsElo
fights2 <- fightsElo %>%
mutate(Result = ifelse(Result=="win", "loss", Result),
Result2 = ifelse(Result2 == "win", "loss", Result2),
score1 = 1-score1)
colnames(fights2) <- fights2 %>%
colnames %>%
gsub(1,3,.) %>%
gsub(2,1,.) %>%
gsub(3,2,.) %>%
gsub("Result1", "Result2", .)
fightMetrics <- full_join(fights1, fights2) %>%
arrange(match_id) %>%
as.tibble()
View(fightMetrics)
View(fights2)
# Double the data
fights1 <- fightsElo
fights2 <- fightsElo %>%
mutate(Result = ifelse(Result=="win", "loss", Result),
Result2 = ifelse(Result2 == "win", "loss", Result2),
score1 = 1-score1)
colnames(fights2) <- fights2 %>%
colnames %>%
gsub(1,3,.) %>%
gsub(2,1,.) %>%
gsub(3,2,.) %>%
gsub("Result1", "Result2", .) %>%
gsub("Score1", "Score2", .)
fightMetrics <- full_join(fights1, fights2) %>%
arrange(match_id) %>%
as.tibble()
View(fightMetrics)
# Double the data
fights1 <- fightsElo
fights2 <- fightsElo %>%
mutate(Result = ifelse(Result=="win", "loss", Result),
Result2 = ifelse(Result2 == "win", "loss", Result2),
score1 = 1-score1)
library(tidyverse)
library(data.table)
library(zoo)
library(RcppRoll)
# Read in data
fightsElo <- readRDS(file = "./scripts/4-ratings/data/fightsElo.rds")
# Double the data
fights1 <- fightsElo
# Read in data
fightsElo <- readRDS(file = "./scripts/4-ratings/data/fightsElo.rds") %>%
rename(score=score1)
# Double the data
fights1 <- fightsElo
fights2 <- fightsElo %>%
mutate(Result = ifelse(Result=="win", "loss", Result),
Result2 = ifelse(Result2 == "win", "loss", Result2),
score = 1-score)
colnames(fights2) <- fights2 %>%
colnames %>%
gsub(1,3,.) %>%
gsub(2,1,.) %>%
gsub(3,2,.) %>%
gsub("Result1", "Result2", .) %>%
gsub("Score1", "Score2", .)
fightMetrics <- full_join(fights1, fights2) %>%
arrange(match_id) %>%
as.tibble()
View(fightMetrics)
fightMetrics <- full_join(fights1, fights2) %>%
arrange(match_id) %>%
as.tibble()
rm(fights1, fights2, fightsElo)
fightMetrics <- fightMetrics %>%
group_by(Link1) %>%
mutate(r1b = ifelse(wins1+loss1+draw1+nc1==0, 1000, r1b),
r1a = na.locf(r1a, na.rm = FALSE),
r1b = ifelse(is.na(r1b), r1a, r1b)
) %>%
ungroup()
fightMetrics <- fightMetrics %>%
group_by(Link2) %>%
mutate(r2b = ifelse(wins2+loss2+draw2+nc2==0, 1000, r2b),
r2a = na.locf(r2a, na.rm = FALSE),
r2b = ifelse(is.na(r2b), r2a, r2b)) %>%
ungroup() %>%
as.data.table()
# Create new metrics
fightMetrics[,
':='(fightLag1 = as.numeric(c(0, diff(Date))), # Days since last fight
fightLag1_5 = (Date - coalesce(shift(Date,5), first(Date))) %>% as.numeric(),
ratIncrease1 = c(0, diff(r1b)), # Rating increase since last fight
ratIncrease1_3 = r1b - coalesce(shift(r1b,3), first(r1b)), # Rating increase from 3 fights ago
oppRat1_5 = coalesce(cummean(r2b), roll_meanr(r2b, 5)) %>%
shift(), # Average rating of last 5 opponents
highestWin1_5 = coalesce(roll_maxr((Result2=="win")*r2b, 5), cummax(((Result2=="win")*r2b))) %>%
shift(), # Highest rated fighter defeated in last 5 fights
lowestLoss1_5 = coalesce(roll_minr(ifelse((Result2=="loss")*r2b == 0, 10000,(Result2=="loss")*r2b), 5),
cummin(ifelse((Result2=="loss")*r2b == 0, 10000,(Result2=="loss")*r2b))) %>%
shift(), # Lowest rated fighter lost to in last 5 fights
koLosses1 = cumsum(Result == "loss" & (Method=="TKO"|Method=="KO")) %>%
shift(), # number of KO losses
diff1_5 = coalesce(cummean((r1b-r2b)), roll_meanr((r1b-r2b), 5)) %>%
shift()
),
by=Link1]
fightMetrics[,
':='(fightLag2 = as.numeric(c(0, diff(Date))),
fightLag2_5 = (Date - coalesce(shift(Date,5), first(Date))) %>% as.numeric(),
ratIncrease2 = c(0, diff(r2b)),
ratIncrease2_3 = r2b - coalesce(shift(r2b,2), first(r2b)),
oppRat2_5 = coalesce(cummean(r1b), roll_meanr(r1b, 5)) %>%
shift(),
highestWin2_5 = coalesce(roll_maxr((Result2=="loss")*r1b, 5), cummax(((Result2=="loss")*r1b))) %>%
shift(),
lowestLoss2_5 = coalesce(roll_minr(ifelse((Result2=="win")*r1b == 0, 10000,(Result2=="win")*r1b), 5),
cummin(ifelse((Result2=="win")*r1b == 0, 10000,(Result2=="win")*r1b))) %>%
shift(),
koLosses2 = cumsum(Result == "win" & (Method=="TKO"|Method=="KO")) %>%
shift(),
diff2_5 = coalesce(cummean((r2b-r1b)), roll_meanr((r2b-r1b), 5)) %>%
shift()
),
by=Link2]
fightMetrics[wins1+loss1+draw1+nc1==0,
':='(fightLag1 = NA,
fightLag1_5 = NA,
ratIncrease1 = NA,
ratIncrease1_3 = NA,
koLosses1 = 0)]
fightMetrics[wins2+loss2+draw2+nc2==0,
':='(fightLag2 = NA,
fightLag2_5 = NA,
ratIncrease2 = NA,
ratIncrease2_3 = NA,
koLosses2 = 0)]
fightMetrics <- fightMetrics %>%
as.tibble() %>%
mutate(highestWin1_5 = ifelse(highestWin1_5==0, NA, highestWin1_5),
highestWin2_5 = ifelse(highestWin2_5==0, NA, highestWin2_5),
lowestLoss1_5 = ifelse(lowestLoss1_5==10000, NA, lowestLoss1_5),
lowestLoss2_5 = ifelse(lowestLoss2_5==10000, NA, lowestLoss2_5))
saveRDS(fightMetrics, file = "./scripts/5-metrics/data/fightMetrics.rds")
rm(list=ls())
library(shiny)
library(shinyjs)
library(tidyverse)
library(DT)
# read datasets
futureFights <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/futureFights.RDS")
fightMetricsEventOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/fightMetricsEventOdds.rds") %>%
mutate(Date = as.character(Date),
r1b = as.integer(r1b),
r2b = as.integer(r2b),
odds = as.integer(odds)) %>%
arrange(desc(match_id))
filtfightsOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/filtfightsOdds.rds")
# extra functions
with_plus <- function(x, ...) {
if (x > 0) {
sprintf(fmt = "+%s", format(x, ...))
} else {
x
}
}
line_to_per <- function(x) {
if (x < 0) {
return(-x/((-x + 100)))
} else {
return(100/(x+100))
}
}
per_to_line <- function(x) {
if(x <= 0.5) {
return((1-x)/x * 100)
} else {
return(x/(1-x) * -100)
}
}
odds_to_return <- function(x, bet=10) {
if (x < 0) {
return(bet/-x*100)
} else {
return(x*bet/100)
}
}
runApp('Shiny App/MatchPredictor')
fightMetrics <- readRDS(file = "./scripts/5-metrics/data/fightMetrics.rds")
View(fightMetrics)
source('./scripts/7-scrape-odds/updateOdds.R', echo=TRUE)
shiny::runApp('Shiny App/MatchPredictor')
library(shiny)
library(shinyjs)
library(shinysky)
library(tidyverse)
library(DT)
# read datasets
futureFights <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/futureFights.RDS")
fightMetricsEventOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/fightMetricsEventOdds.rds") %>%
mutate(Date = as.character(Date),
r1b = as.integer(r1b),
r2b = as.integer(r2b),
odds = as.integer(odds)) %>%
arrange(desc(match_id))
filtfightsOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/filtfightsOdds.rds")
# extra functions
with_plus <- function(x, ...) {
if (x > 0) {
sprintf(fmt = "+%s", format(x, ...))
} else {
x
}
}
line_to_per <- function(x) {
if (x < 0) {
return(-x/((-x + 100)))
} else {
return(100/(x+100))
}
}
per_to_line <- function(x) {
if(x <= 0.5) {
return((1-x)/x * 100)
} else {
return(x/(1-x) * -100)
}
}
odds_to_return <- function(x, bet=10) {
if (x < 0) {
return(bet/-x*100)
} else {
return(x*bet/100)
}
}
runApp('Shiny App/MatchPredictor')
fightMetricsEventOdds %>% group_by(Link1)
fightMetricsEventOdds %>% group_by(Link1) %>% summarise(r1a = max(r1a))
fightMetricsEventOdds %>% group_by(Link1) %>% summarise(r1a = max(r1a)) %>% order_by(r1a)
fightMetricsEventOdds %>% group_by(Link1) %>% summarise(r1a = max(r1a)) %>% arrange(r1a)
fightMetricsEventOdds %>% group_by(Link1) %>% summarise(r1a = max(r1a)) %>% arrange(desc(r1a))
fightMetricsEventOdds %>% group_by(Link1) %>% summarise(r1a = max(r1a)) %>% arrange(desc(r1a)) %>% slice(5000)
fightMetricsEventOdds %>% group_by(Link1) %>% summarise(r1a = max(r1a)) %>% arrange(desc(r1a)) %>% head(5000)
top5kfighters = fightMetricsEventOdds %>%
group_by(Link1) %>%
summarise(r1a = max(r1a)) %>%
arrange(desc(r1a)) %>%
head(5000)
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
rm(top5kfighters)
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
top5kfighters <- fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
summarise(r1a = max(r1a)) %>%
arrange(desc(r1a)) %>%
head(5000)
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
top5kfighters <- fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
summarise(r1a = max(r1a)) %>%
arrange(desc(r1a))
runApp('Shiny App/MatchPredictor')
top5kfighters %>% filter(r1a>1200)
topFighters <- fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
summarise(r1a = max(r1a)) %>%
arrange(desc(r1a)) %>%
head(10000)
rm(top5kfighters)
runApp('Shiny App/MatchPredictor')
topFighters <- fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
summarise(r1a = max(r1a)) %>%
arrange(desc(r1a)) %>%
head(5000)
runApp('Shiny App/MatchPredictor')
rm(topFighters)
runApp('Shiny App/MatchPredictor')
topFighters <- fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
summarise(r1a = max(r1a)) %>%
arrange(desc(r1a)) %>%
head(5000)
runApp('Shiny App/MatchPredictor')
?runApp
