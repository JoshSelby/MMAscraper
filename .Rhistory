html_text() %>%
matrix(3,2,byrow=T) %>%
apply(1, paste, collapse = "-")
decisions <- c(judgeDecisions, mediaDecisions)
rounds <- fightPage %>%
html_nodes("td td td:nth-child(2) .list:nth-child(1)") %>%
html_text() %>%
as.numeric() %>%
tail(1)
fighter1Scores <- decisions %>%
gsub("-.*", "", .) %>%
as.numeric()
fighter2Scores <- decisions %>%
gsub(".*-", "", .) %>%
as.numeric()
fighter1winAttr <- winAttr(mean(fighter1Scores), mean(fighter2Scores), rounds)
return(tibble(date, fighter1, fighter2, f1Score = mean(fighter1Scores), f2Score = mean(fighter2Scores), rounds, fighter1winAttr, media = length(mediaDecisions), judge = length(judgeDecisions), fighter1Link, fighter2Link, eventLink))
}
pblapply(fightsMMAdec, decisionScraper) %>% rbind_list()
pblapply(fightsMMAdec, decisionScraper) %>% bind_rows
pblapply(fightsMMAdec, decisionScraper) %>% bind_rows() %>% rbind(decisions)
test <- pblapply(fightsMMAdec, decisionScraper) %>% bind_rows()
test %>% rbind(test)
test %>% rbind(test2)
test %>% rbind(if(exists(test2)))
test %>% rbind(if(exists(test2)test2)
test %>% rbind(if(exists(test2){test2})
rbind(test, if(exists("Test2") test2))
rbind(test, if(exists("Test2")) test2)
if(exists("decisions")), decisions
if(exists("decisions"), decisions)
if(exists("decisions") decisions)
if(exists("decisions")) decisions)
if(exists("decisions")) decisions
library(tidyverse)
library(lubridate)
library(rvest)
library(pbapply)
source('./scripts/11-decision-scraper/decisionScraperScripts.R', echo=TRUE)
decisions <- if ("decisions.RDS" %in% list.files("./scripts/11-decision-scraper/data")) {
readRDS("./scripts/11-decision-scraper/data/decisions.RDS")
}
fightsMMAdec <- if ("fightsMMAdec.RDS" %in% list.files("./scripts/11-decision-scraper/data")) {
readRDS("./scripts/11-decision-scraper/data/fightsMMAdec.RDS")
}
if(is.null(decisions)) rm(decisions)
if(is.null(fightsMMAdec)) rm(fightsMMAdec)
years <- c(1995:year(today()))
events <- pblapply(years, eventsScraper) %>% unlist
if (exists("decisions")) {
events <- setdiff(events, decisions$eventLink %>% unique)
}
fightsMMAdec <- pblapply(events, fightsScraper) %>% unlist
decisions <- pblapply(fightsMMAdec, decisionScraper) %>%
bind_rows() %>%
rbind(if(exists("decisions")) decisions) %>%
unique
fightsMMAdec <- decisions$eventLink
saveRDS(fightsMMAdec, "./scripts/11-decision-scraper/data/fightsMMAdec.RDS")
saveRDS(decisions, "./scripts/11-decision-scraper/data/decisions.RDS")
rm(list=ls())
source('./scripts/11-decision-scraper/appendDecision.R', echo = TRUE)
source('./scripts/3-records/recordAdder.R', echo=TRUE)
source('./scripts/4-ratings/add_ratings.R', echo=TRUE)
source('./scripts/5-metrics/metrics.R', echo=TRUE)
source('./scripts/5-metrics/events.R', echo=TRUE)
source('./scripts/7-scrape-odds/updateOdds.R', echo=TRUE)
source('./scripts/8-append-odds/SherdogToBFO.R', echo=TRUE)
source('./scripts/9-various-tables/Current Stats.R', echo = TRUE)
source('./scripts/9-various-tables/Add Gender.R', echo = TRUE)
source('./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
source('./scripts/10-future-fights/futureFights.R', echo = TRUE)
fightersTable <- readRDS("./scripts/9-various-tables/data/fightersTable.rds")
View(fightersTable)
fights <- readRDS("./scripts/2-clean-data/data/fights_clean.rds")
View(fights)
# Get all fights you already scraped
fights <- readRDS(file = "./scripts/2-clean-data/data/fights_clean.rds")
View(fights)
# What's the most recent Date you have already scraped, minus 10 days
lastDate <- fights %>%
arrange(Date) %>%
pull(Date) %>%
tail(1) %>%
-10
library(tidyverse)
library(rvest)
library(data.table)
# What's the most recent Date you have already scraped, minus 10 days
lastDate <- fights %>%
arrange(Date) %>%
pull(Date) %>%
tail(1) %>%
-10
events_page <- read_html("http://www.sherdog.com/events/")
# fucntion that returns all links from revent events page
recEvents <- function(events) {
event_Dates <- events %>%
html_nodes("#recentfights_tab td:nth-child(1)") %>%
html_text() %>%
gsub("\n|\t", "",.) %>%
trimws() %>%
.[-1] %>%
as.Date(format = "%B %d %Y")
event_Names <- events %>%
html_nodes("#recentfights_tab td:nth-child(2)") %>%
html_text() %>%
paste(events %>%
html_nodes("#recentfights_tab td:nth-child(3)") %>%
html_text(),
sep = " - ") %>%
.[-1]
event_Links <- events %>%
html_nodes("#recentfights_tab td:nth-child(2) a") %>%
html_attr("href")
return(tibble(Dates = event_Dates, Names = event_Names, Links = event_Links))
}
event_tbl <- recEvents(events_page)
# get all events more recent than lastDate
i = 2
while (tail(event_tbl %>% pull(Dates), 1) > lastDate) {
events_pagei <- read_html(paste0("http://www.sherdog.com/events/recent/",i,"-page"))
event_tbl <- rbind(event_tbl, recEvents(events_pagei))
i = i+1
}
# filter events greater than last Date that are not already in our fights table
event_tbl <- event_tbl %>%
filter(Dates > lastDate)
View(event_tbl)
rm(events_page, events_pagei, i)
fightInfo <- function(link) {
event <- read_html(paste0("http://www.sherdog.com", link))
noRecords <- event %>% html_nodes("td .final_result") %>% html_text()
if (!(TRUE %in% (c("win", "draw", "loss") %in% noRecords))) {
print(paste(i, "Yet to Come"))
return(tibble())
}
fights_tbl <- event %>% html_nodes("td span") %>% html_text(T) %>% matrix(ncol = 5, byrow = T) %>% .[,-4] %>% matrix(ncol=4)
MethodReferee <- event %>% html_nodes("td:nth-child(5)") %>% html_text() %>% .[-(1:2)]
R <- event %>% html_nodes("td:nth-child(6)") %>% html_text()
Time <- event %>% html_nodes("td:nth-child(7)") %>% html_text()
Links <- event %>% html_nodes("td [itemprop=url]") %>% html_attr("href") %>%
matrix(ncol=2, byrow = T) %>% as.tibble()
fights_tbl <- as.tibble(fights_tbl) %>%
mutate(MethodReferee, R, Time) %>%
cbind(Links)
# Featured Match
f3 <- event %>% html_nodes(".event [itemprop=name], .event .final_result") %>% html_text(T) %>% head(-1)
l4 <- event %>% html_nodes(".event tr td") %>% html_text(T) %>%
sub("\\w* ", "", .) %>% .[c(3, 2, 4, 5)]
l2 <- event %>% html_nodes(".event [itemprop=url]") %>% html_attr("href")
fights_tbl <- rbind(fights_tbl, c(f3,l4,l2))
colnames(fights_tbl)[c(1:4, 8:9)] <- c("Fighter1", "Result", "Fighter2", "Referee", "Link1", "Link2")
fights_tbl <- fights_tbl %>% mutate(Event = event_tbl$Names[match(link, event_tbl$Links)],
Date = event_tbl$Dates[match(link, event_tbl$Links)])
return(fights_tbl)
}
fights_tbl2 <- tibble()
for (i in i:length(event_tbl$Links)) {
fights_tbl2 <- fightInfo(event_tbl$Links[i]) %>% rbind(fights_tbl2)
}
fights_tbl2 <- tibble()
for (i in i:length(event_tbl$Links)) {
fights_tbl2 <- fightInfo(event_tbl$Links[i]) %>% rbind(fights_tbl2)
}
i=1
for (i in i:length(event_tbl$Links)) {
fights_tbl2 <- fightInfo(event_tbl$Links[i]) %>% rbind(fights_tbl2)
}
for (i in 1:nrow(fights_tbl2)) {
fights_tbl2$MethodReferee[i] <- gsub(fights_tbl2$Referee[i], "",
fights_tbl2$MethodReferee[i])
}
fights_tbl2 <- fights_tbl2 %>%
filter(Result != "yet to come") %>%
mutate(
Method = MethodReferee %>%
sapply(function(x) x %>%
gsub('\\(.*','', .) %>%
gsub("N/A", "", .)
),
Method_d = MethodReferee %>%
sapply(function(x) x %>%
gsub('^(.*)\\(','', .) %>%
gsub('\\)(.*)','', .) %>%
gsub("N/A", "", .)
)
) %>%
select(-MethodReferee)
source('./scripts/1-raw-data/parallel-scraper.R', echo=TRUE)
fights_tbl2 %>% setDT()
fNameRef <- fights_tbl2[grepl("^\\w*$", Referee),]
for (link in pull(fNameRef, Link1)) {
fighter_page <- tryCatch({
link %>%
paste0("http://www.sherdog.com/fighter/", .) %>%
read_html()
},
error=function(cond) {
message(cond)
no_errors = FALSE
return(fighter_page)
},
warning=function(cond) {
message(cond)
no_errors = FALSE
return(fighter_page)
})
# Delete featured fighters who are only amateurs
if(fighter_page %>% html_text(trim = TRUE) %>% grepl("Fight History - Pro", .)) {
fighterFights <- scrape(link)[[1]] %>% setDT() %>% head(1)
fNameRef[grep(link, Link1), Referee := fighterFights$Referee]
print(link)
} else {
fights_tbl2 <- fights_tbl2[Link1 != link,]
fNameRef <- fNameRef[Link1 != link,]
}
}
fights_tbl2[grepl("^\\w*$", Referee), Referee := fNameRef$Referee]
source('./scripts/2-clean-data/cleaner.R', echo=TRUE)
birthdayTable <- readRDS(file = "./scripts/2-clean-data/data/birthdayTable.rds")
fights_tbl2 <- clean(fights_tbl2)
fights <- full_join(fights, fights_tbl2)
fights <- addBD(fights, birthdayTable)
saveRDS(fights, file = "./scripts/2-clean-data/data/fights_clean.rds")
rm(list=ls())
source('./scripts/quick-fixes.R', echo = TRUE)
View(fights)
source('./scripts/11-decision-scraper/decisionScraper.R', echo = TRUE)
source('./scripts/11-decision-scraper/appendDecision.R', echo = TRUE)
source('./scripts/3-records/recordAdder.R', echo=TRUE)
source('./scripts/4-ratings/add_ratings.R', echo=TRUE)
source('./scripts/5-metrics/metrics.R', echo=TRUE)
source('./scripts/5-metrics/events.R', echo=TRUE)
source('./scripts/7-scrape-odds/updateOdds.R', echo=TRUE)
source('./scripts/8-append-odds/SherdogToBFO.R', echo=TRUE)
source('./scripts/9-various-tables/Current Stats.R', echo = TRUE)
source('./scripts/9-various-tables/Add Gender.R', echo = TRUE)
source('./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
source('./scripts/10-future-fights/futureFights.R', echo = TRUE)
fightersTable <- readRDS("./scripts/9-various-tables/data/fightersTable.rds")
View(fightersTable)
fights <- readRDS("./scripts/2-clean-data/data/fights_clean.rds")
View(fights)
source('./scripts/quick-fixes.R', echo = TRUE)
source('./scripts/3-records/recordAdder.R', echo=TRUE)
source('./scripts/11-decision-scraper/decisionScraperScripts.R', echo=TRUE)
decisions <- if ("decisions.RDS" %in% list.files("./scripts/11-decision-scraper/data")) {
readRDS("./scripts/11-decision-scraper/data/decisions.RDS")
}
fightsMMAdec <- if ("fightsMMAdec.RDS" %in% list.files("./scripts/11-decision-scraper/data")) {
readRDS("./scripts/11-decision-scraper/data/fightsMMAdec.RDS")
}
if(is.null(decisions)) rm(decisions)
if(is.null(fightsMMAdec)) rm(fightsMMAdec)
years <- c(1995:year(today()))
events <- pblapply(years, eventsScraper) %>% unlist
if (exists("decisions")) {
events <- setdiff(events, decisions$eventLink %>% unique)
}
fightsMMAdec <- pblapply(events, fightsScraper) %>% unlist
decisions <- pblapply(fightsMMAdec, decisionScraper) %>%
bind_rows() %>%
rbind(if(exists("decisions")) decisions) %>%
unique
fightsMMAdec <- decisions$eventLink
saveRDS(fightsMMAdec, "./scripts/11-decision-scraper/data/fightsMMAdec.RDS")
saveRDS(decisions, "./scripts/11-decision-scraper/data/decisions.RDS")
rm(list=ls())
decisions <- readRDS("./scripts/11-decision-scraper/data/decisions.RDS") %>%
filter(rounds != 12) %>%
mutate(rownum = row_number(),
fighter1 = if_else(fighter1 == "Michael Byrnes Jr.", "Mike Byrnes", fighter1),
fighter1 = if_else(fighter1 == "Zach Micklewright", "Zachary Micklewright", fighter1),
fighter1 = if_else(fighter1 == "Thomas Diagne", "Ousmane Thomas Diagne", fighter1),
fighter1 = if_else(fighter1 == "Michel Oleksiejczuk", "Michal Oleksiejczuk", fighter1),
fighter2 = if_else(fighter2 == "Khalil Rountree Jr.", "Khalil Rountree", fighter2))
View(decisions)
fights <- readRDS("./scripts/3-records/data/fights_records.rds")
Sherdog_to_MMAdec <- tibble(Sherdog = NA %>% as.character,
MMAdec = decisions %>% pull(fighter1Link) %>% c(decisions %>% pull(fighter2Link)) %>% unique)
fights2 <- fights %>%
select(match_id, Fighter1, Result, Fighter2, Method, R, Date, Link1, Link2) %>%
filter(Method %in% c("Decision", "Draw") | Result == "NC")
fights2Dec <- tibble()
# 1st Round Join on both fighter names
for (i in 0:2) {
decisions <- decisions %>%
mutate(date2 = date - i + 1)
fights2Dec <- fights2 %>%
inner_join(decisions, by=c("Date" = "date2", "Fighter1" = "fighter1", "Fighter2" = "fighter2")) %>%
rbind(fights2Dec)
}
Sherdog_to_MMAdec <- left_join(Sherdog_to_MMAdec,
fights2Dec %>%
select(Link1, fighter1Link) %>%
rename(Sherdog = Link1, MMAdec = fighter1Link) %>%
unique(),
by = "MMAdec") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, MMAdec)
decisions <- decisions %>%
anti_join(fights2Dec, by="rownum")
fights2 <- fights2 %>%
anti_join(fights2Dec, by="match_id")
# 2nd Round Join on 1 fighter name + date
for (i in 0:2) {
decisions <- decisions %>%
mutate(date2 = date - i + 1)
fights2Dec <- inner_join(fights2, decisions, by=c("Date" = "date2", "Fighter1" = "fighter1")) %>%
select(colnames(fights2Dec)) %>%
full_join(
inner_join(fights2, decisions, by=c("Date" = "date2", "Fighter2" = "fighter2")) %>%
select(colnames(fights2Dec))
) %>%
rbind(fights2Dec)
}
Sherdog_to_MMAdec <- left_join(Sherdog_to_MMAdec,
fights2Dec %>%
select(Link1, fighter1Link) %>%
full_join(fights2Dec %>%
select(Link2, fighter2Link), by = c("Link1" = "Link2", "fighter1Link" = "fighter2Link")) %>%
unique %>%
rename(Sherdog = Link1, MMAdec = fighter1Link),
by = "MMAdec") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, MMAdec)
decisions <- decisions %>%
anti_join(fights2Dec, by = "rownum")
fights2 <- fights2 %>%
anti_join(fights2Dec, by = "match_id")
# 3rd Round flip fighters in cases of ties/NC
for (i in 0:2) {
decisions <- decisions %>%
mutate(date2 = date - i + 1)
fights2Dec <- fights2 %>%
inner_join(decisions, by=c("Date" = "date2", "Fighter1" = "fighter2", "Fighter2" = "fighter1")) %>%
rename(Fighter1 = Fighter2, Fighter2 = Fighter1, Link1 = Link2, Link2 = Link1) %>%
select(colnames(fights2Dec)) %>%
rbind(fights2Dec)
}
Sherdog_to_MMAdec <- left_join(Sherdog_to_MMAdec,
fights2Dec %>%
select(Link1, fighter1Link) %>%
rename(Sherdog = Link1, MMAdec = fighter1Link) %>%
unique(),
by = "MMAdec") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, MMAdec) %>%
unique()
decisions <- decisions %>%
anti_join(fights2Dec, by="rownum")
fights2 <- fights2 %>%
anti_join(fights2Dec, by="match_id")
# 4th Round, Use Sherdog_to_MMAdec table
fights2Dec <- decisions %>%
left_join(Sherdog_to_MMAdec, by = c("fighter1Link" = "MMAdec")) %>%
rename("Sherdog1" = "Sherdog") %>%
inner_join(decisions %>%
left_join(Sherdog_to_MMAdec, by = c("fighter2Link" = "MMAdec")) %>%
rename("Sherdog2" = "Sherdog")) %>% inner_join(fights2, by = c("Sherdog1" = "Link1", "Sherdog2" = "Link2", "date" = "Date")) %>%
inner_join(fights2) %>%
select(colnames(fights2Dec)) %>%
rbind(fights2Dec)
Sherdog_to_MMAdec <- left_join(Sherdog_to_MMAdec,
fights2Dec %>%
select(Link1, fighter1Link) %>%
rename(Sherdog = Link1, MMAdec = fighter1Link) %>%
unique(),
by = "MMAdec") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, MMAdec) %>%
unique()
decisions <- decisions %>%
anti_join(fights2Dec, by="rownum")
fights2 <- fights2 %>%
anti_join(fights2Dec, by="match_id")
# 5th Round, widen the daterange interval since some events have wrong dates
for (i in 0:30) {
decisions <- decisions %>%
mutate(date2 = date - i + 15)
fights2Dec <- fights2 %>%
inner_join(decisions, by=c("Date" = "date2", "Fighter1" = "fighter1", "Fighter2" = "fighter2")) %>%
rbind(fights2Dec)
}
Sherdog_to_MMAdec <- left_join(Sherdog_to_MMAdec,
fights2Dec %>%
select(Link1, fighter1Link) %>%
rename(Sherdog = Link1, MMAdec = fighter1Link) %>%
unique(),
by = "MMAdec") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, MMAdec) %>%
unique()
decisions <- decisions %>%
anti_join(fights2Dec, by="rownum")
fights2 <- fights2 %>%
anti_join(fights2Dec, by="match_id")
# 6th Round, Use Sherdog_to_MMAdec table and just 1 name
for (i in 0:30) {
decisions <- decisions %>%
mutate(date2 = date - i + 15)
tempTable <- decisions %>%
left_join(Sherdog_to_MMAdec, by = c("fighter1Link" = "MMAdec")) %>%
rename("Sherdog1" = "Sherdog") %>%
inner_join(decisions %>%
left_join(Sherdog_to_MMAdec, by = c("fighter2Link" = "MMAdec")) %>%
rename("Sherdog2" = "Sherdog"))
fights2Dec <- tempTable %>%
inner_join(fights2, by = c("Sherdog1" = "Link1", "date" = "Date")) %>%
full_join(tempTable %>%
inner_join(fights2, by = c("Sherdog2" = "Link2", "date" = "Date"))) %>%
mutate(Link1 = coalesce(Sherdog1, Link1),
Link2 = coalesce(Sherdog2, Link2)) %>%
select(colnames(tempTable), Link1, Link2) %>%
inner_join(fights2, by = c("Link1", "Link2", "date2" = "Date")) %>%
rename(Date = date2) %>%
select(colnames(fights2Dec)) %>%
rbind(fights2Dec)
}
Sherdog_to_MMAdec <- left_join(Sherdog_to_MMAdec,
fights2Dec %>%
select(Link1, fighter1Link) %>%
rename(Sherdog = Link1, MMAdec = fighter1Link) %>%
unique(),
by = "MMAdec") %>%
mutate(Sherdog = coalesce(Sherdog.x, Sherdog.y)) %>%
select(Sherdog, MMAdec) %>%
unique()
decisions <- decisions %>%
anti_join(fights2Dec, by="rownum")
fights2 <- fights2 %>%
anti_join(fights2Dec, by="match_id")
fights <- fights %>% left_join(fights2Dec) %>% select(colnames(fights), fighter1winAttr)
View(fights)
saveRDS(fights, "./scripts/11-decision-scraper/data/fights.RDS")
rm(list=ls())
source('./scripts/4-ratings/add_ratings.R', echo=TRUE)
source('./scripts/5-metrics/metrics.R', echo=TRUE)
source('./scripts/5-metrics/events.R', echo=TRUE)
source('./scripts/7-scrape-odds/updateOdds.R', echo=TRUE)
source('./scripts/8-append-odds/SherdogToBFO.R', echo=TRUE)
source('./scripts/9-various-tables/Current Stats.R', echo = TRUE)
source('./scripts/9-various-tables/Add Gender.R', echo = TRUE)
source('./scripts/7-scrape-odds/futureOdds.R', echo=TRUE)
source('./scripts/10-future-fights/futureFights.R', echo = TRUE)
fightersTable <- readRDS("./scripts/9-various-tables/data/fightersTable.rds")
View(fightersTable)
# read datasets
futureFights <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/futureFights.RDS")
fightMetricsEventOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/fightMetricsEventOdds.rds") %>%
mutate(Date = as.character(Date),
r1b = as.integer(r1b),
r2b = as.integer(r2b),
odds = as.integer(odds)) %>%
arrange(desc(match_id))
filtfightsOdds <- readRDS("~/GitHub/MMAscraper/Shiny App/MatchPredictor/data/filtfightsOdds.rds")
topFighters <- fightMetricsEventOdds %>%
group_by(Link1, Fighter1) %>%
summarise(r1a = max(r1a)) %>%
arrange(desc(r1a)) %>%
head(5000)
# extra functions
with_plus <- function(x, ...) {
if (x > 0) {
sprintf(fmt = "+%s", format(x, ...))
} else {
x
}
}
line_to_per <- function(x) {
if (x < 0) {
return(-x/((-x + 100)))
} else {
return(100/(x+100))
}
}
per_to_line <- function(x) {
if(x <= 0.5) {
return((1-x)/x * 100)
} else {
return(x/(1-x) * -100)
}
}
odds_to_return <- function(x, bet=10) {
if (x < 0) {
return(bet/-x*100)
} else {
return(x*bet/100)
}
}
shiny::runApp('Shiny App/MatchPredictor')
library(shiny)
library(shinyjs)
library(shinysky)
library(tidyverse)
library(DT)
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
runApp('Shiny App/MatchPredictor')
dataset2_past
dataset2_past()
dataset1_past()
any(c("draw", "NC") %in% pull(dataset2_past(), Result))
any(c("draw", "NC") %in% pull(dataset1_past(), Result))
observeEvent(dataset2_past(), {
if (any(c("draw", "NC") %in% pull(dataset2_past(), Result)))
showElement("drawNCTable2") else hideElement("drawNCTable2")
})
