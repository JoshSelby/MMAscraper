library(tidyverse)
library(rvest)

odds_list <- list("odds" = tibble(),
                  "searched_links" = c(),
                  "searched_events" = c(),
                  "toSearch" = "Chael-Sonnen-106")

# Scrapes all events for a single fighter
oddsScraper <- function(link) {
  print(link)
  
  searched_links <- c()
  links_to_search <- c()
  odds_tbl <- tibble()
  
  fighterPage <- tryCatch({
    read_html(paste0("https://www.bestfightodds.com/fighters/", link))
  },
  error=function(cond) {
    message(cond)
    no_errors = FALSE
    return(fighterPage)
  },
  warning=function(cond) {
    message(cond)
    no_errors = FALSE
    return(fighterPage)
  })
  
  
  fighterEventLinks <- fighterPage %>% 
    html_nodes(".item-non-mobile a") %>%
    html_attr("href")
  
  index <- !(fighterEventLinks %in% odds_list$searched_events)
  fighterEventLinks <- fighterEventLinks[index]
  
  fighterEventNames <- fighterPage %>% 
    html_nodes(".item-non-mobile a") %>%
    html_text() %>%
    .[index]
  
  fighterDates <- fighterPage %>% 
    html_nodes("td.item-non-mobile:nth-child(6)") %>%
    html_text() %>%
    sub("( \\d{,2})\\w{2}", "\\1", .) %>%
    as.Date(format = "%b %d %Y") %>%
    .[index]
  
  if (length(fighterEventLinks) > 0) {
    for (i in 1:length(fighterEventLinks)) {
      if (fighterEventLinks[i] %in% odds_list$searched_events) next
      
      eventPage <- tryCatch({
        read_html(paste0("https://www.bestfightodds.com", fighterEventLinks[i]))
      },
      error=function(cond) {
        message(cond)
        no_errors = FALSE
        return(eventPage)
      },
      warning=function(cond) {
        message(cond)
        no_errors = FALSE
        return(eventPage)
      })
      
      if(eventPage %>%
         html_nodes("td") %>%
         html_text() %>%
         .[1] %>%
         grepl("No betting lines available for this event", .)) next
      
      
      fighters <- eventPage %>% 
        html_nodes("tr th a") %>%
        html_attr("href") %>%
        grep("fighters", ., value=T) %>%
        head(., length(.)/2) %>%
        gsub("/fighters/", "", .)
      
      if(length(fighters) == 0) next
      
      books <- eventPage %>% 
        html_nodes("thead a") %>%
        html_text()
      
      odds <- eventPage %>%
        html_nodes(".odd td:nth-child(-n+14), .even td:nth-child(-n+14)") %>%
        html_text() %>%
        gsub("[^[:digit:]-]", "", .) %>%
        as.numeric() %>%
        matrix(ncol = length(books), 
               nrow = length(fighters),
               byrow=T,
               dimnames = list(fighters, books))
      
      x <- 1:length(fighters)
      oppIndex <- x-1 + 2*(x %% 2)
      
      odds_tbl <- tibble(fighter = fighters, 
                         opponent = fighters[oppIndex], 
                         eventName = fighterEventNames[i], 
                         eventLink = fighterEventLinks[i],
                         Date = fighterDates[i]) %>%
        cbind(odds %>% as.tibble) %>%
        rbind(odds_tbl, .)
      print(i)
    }
  }
  searched_links <- searched_links %>% 
    append(link) %>% 
    unique
  
  searched_events <- fighterEventLinks
  
  links_to_search = odds_tbl$fighter[odds_tbl$fighter != link] %>% 
    unique
    
  
  return(list("odds" = odds_tbl,
              "searched_links" = searched_links,
              "searched_events" = searched_events,
              "toSearch" = links_to_search))
}

# Combines scraped odds of two fighters
bind_odds <- function(a, b) {
  odds_tbl = rbind(a[[1]], b[[1]])
  searched_links = append(a[[2]], b[[2]])
  searched_events = append(a[[3]], b[[3]]) %>% unique
  toSearch = append(a[[4]], b[[4]]) %>% 
    setdiff(searched_links)
  
  return(list("odds" = odds_tbl,
              "searched_links" = searched_links,
              "searched_events" = searched_events,
              "toSearch" = toSearch))
}

# Scrape all fighters on bestfightodds.com. Takes about an hour.
while(length(odds_list$toSearch) > 0) {
  odds_list <- bind_odds(odds_list, oddsScraper(odds_list$toSearch[1]))
}

saveRDS(odds_list, "./scrape-odds-7/odds_list.RDS")


eventOddsScraper <- function(eventLink) {
  eventPage <- tryCatch({
    read_html(paste0("https://www.bestfightodds.com", eventLink))
  },
  error=function(cond) {
    message(cond)
    no_errors = FALSE
    return(eventPage)
  },
  warning=function(cond) {
    message(cond)
    no_errors = FALSE
    return(eventPage)
  })
  
  if(eventPage %>%
     html_nodes("td") %>%
     html_text() %>%
     .[1] %>%
     grepl("No betting lines available for this event", .)) return(tibble())
  
  
  fighters <- eventPage %>% 
    html_nodes("tr th a") %>%
    html_attr("href") %>%
    grep("fighters", ., value=T) %>%
    head(., length(.)/2) %>%
    gsub("/fighters/", "", .)
  
  if(length(fighters) == 0) return(tibble())
  
  books <- eventPage %>% 
    html_nodes("thead a") %>%
    html_text()
  
  odds <- eventPage %>%
    html_nodes(".odd td:nth-child(-n+14), .even td:nth-child(-n+14)") %>%
    html_text() %>%
    gsub("[^[:digit:]-]", "", .) %>%
    as.numeric() %>%
    matrix(ncol = length(books), 
           nrow = length(fighters),
           byrow=T,
           dimnames = list(fighters, books))
  
  date <- eventPage %>% 
    html_nodes(".table-last-changed span") %>% 
    html_attr("title") %>% 
    sub("(\\d{4}).*", "\\1", .) %>%
    sub("( \\d{,2})\\w{2}", "\\1", .) %>%
    as.Date(format = "%b %d %Y")
  
  x <- 1:length(fighters)
  oppIndex <- x-1 + 2*(x %% 2)
  
  odds_tbl <- tibble(fighter = fighters, 
                     opponent = fighters[oppIndex], 
                     eventLink = eventLink, 
                     Date = date) %>%
    cbind(odds %>% as.tibble)
  
  return(odds_tbl)
}



odds_list <- readRDS("./scrape-odds-7/odds_List.RDS")

# If you already have a list of all events, this is faster
event_odds_list <- vector("list", length(odds_list$searched_events))
for (i in 1:length(odds_list$searched_events)) {
  event_odds_list[[i]] <- eventOddsScraper(odds_list$searched_events[i])
  print(i)
}

odds2 <- bind_rows(event_odds_list)


