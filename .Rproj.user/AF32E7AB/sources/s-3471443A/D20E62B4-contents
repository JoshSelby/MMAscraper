if (!require("comperank")) install.packages("comperank")
library(comperank)
if (!require("tidyverse")) install.packages("tidyverse")
library(tidyverse)
if (!require("lubridate")) install.packages("lubridate")
library(lubridate)
if (!require("Rcpp")) install.packages("Rcpp")
library(Rcpp)

fights <- readRDS(file = "~/GitHub/MMAscraper/records-3/fights_records.rds")

fights2 <- fights %>%
  filter(Result %in% c("win", "draw") & Method != "DQ") %>%
  mutate(score1 = ifelse(Result == "win", 1, 0.5),
         score2 = ifelse(Result == "win", 0, 0.5)) %>%
  select(game = match_id, player1 = Link1, score1, player2 = Link2, score2)

fights2 <- as_widecr(fights2)
fights2 <- to_pairgames(fights2)


# 150 was shown to be the optimal K
elo <- add_elo_ratings(fights2[1:30000,], K=150, initial_ratings = 1000)
rankelo <- rank_elo(fights2, K=150, keep_rating = TRUE, initial_ratings = 1000) %>% arrange(ranking_elo)


fightsM <- fights %>%
  filter(Result %in% c("win", "draw") & Method != "DQ")

fightsElo <- full_join(fightsM, elo, by = c("match_id" = "game")) %>%
  select(match_id, Link1, Result, Link2, Method, Method_d, Event, Date, 
         rating1Before, rating2Before, rating1After, rating2After) %>%
  rename(r1b = rating1Before, r2b = rating2Before, r1a = rating1After, r2a = rating2After) %>%
  mutate_at(.vars = vars(r1b:r2a),
            .funs = round)

# Fighters' highest elo achieved
top10 <- fightsElo %>% group_by(Link1) %>% filter(r1a == max(r1a)) %>% 
  arrange(-r1a) %>% select(Link1) %>% head(10) %>% .$Link1 

fightsEloLong <- fightsElo %>% 
  select(match_id, Link1, Date, r1a) %>%
  full_join(fightsElo %>%
              select(match_id, Link2, Date, r2a), 
            by = c("match_id" = "match_id", "Link1" = "Link2", 
                   "Date" = "Date", "r1a" = "r2a")) %>%
  rename(Link = Link1, rating = r1a) %>%
  arrange(Date)


dates <- fightsElo %>% .$Date %>% unique

cppFunction('double last_rcpp(NumericVector x) {
            int n = x.size();
            return x[n-1];
            }')

topN <- tibble(Link = as.character())
for (i in dates) {
  bruh <- fightsEloLong %>%
    filter(Date <= i)
  topNi <- tapply(bruh$rating, bruh$Link, FUN = last_rcpp) %>%
    sort(TRUE) %>%
    head(25) 
  topNi <- tibble(Link = rownames(topNi), i = topNi)
  colnames(topNi)[2] <- paste(i)
  topN <- merge(topN, topNi, all = TRUE) %>% distinct()
  i %>% as.Date("1970-01-01") %>% print
}


saveRDS(fightsElo, file = "fightsElo.rds")
write_csv(fightsEloLong, "fightsEloLong.csv")
saveRDS(topN, file = "top_25_elo.rds")
#saveRDS(topN, file = "top_15_elo.rds")


write_csv(fightsEloLong %>% 
            filter(Link %in% topN$Link) %>% 
            arrange(Date), "d3/fightsEloLong2.csv")

write_csv(fightsEloLong %>% 
            filter(Date > "2017-01-01") %>% 
            arrange(Date), "d3/fightsEloLong3.csv")
